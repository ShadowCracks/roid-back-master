var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/controllers/AppController.html",[0,1.542,1,3.214]],["body/controllers/AppController.html",[0,2.598,1,5.414,2,2.12,3,0.128,4,0.073,5,0.114,6,5.234,7,0.443,8,2.33,9,6.585,10,0.901,11,0.01,12,7.286,13,0.573,14,5.944,15,1.901,16,0.522,17,0.207,18,1.232,19,5.177,20,5.234,21,3.24,22,1.232,23,5.944,24,0.128,25,0.356,26,3.24,27,2.18,28,2.062,29,5.944,30,0.008,31,0.008]],["title/modules/AppModule.html",[32,1.383,33,3.214]],["body/modules/AppModule.html",[1,4.664,2,1.919,3,0.081,4,0.046,5,0.072,8,1.205,11,0.01,13,0.363,15,1.205,17,0.225,18,0.781,19,4.948,20,3.318,24,0.081,25,0.226,28,1.307,30,0.006,31,0.006,32,2.008,33,6.546,34,1.655,35,1.655,36,1.769,37,1.769,38,1.71,39,2.757,40,1.769,41,3.318,42,3.318,43,3.318,44,5.242,45,5.242,46,5.242,47,4.948,48,5.242,49,5.242,50,4.948,51,5.242,52,2.526,53,1.769,54,1.769,55,3.768,56,3.052,57,3.768,58,5.381,59,6.846,60,3.768,61,1.174,62,0.525,63,0.248,64,0.932,65,5.381,66,3.768,67,3.768,68,3.768,69,3.768,70,5.381,71,3.768,72,5.381,73,4.766,74,2.476,75,3.768,76,2.053,77,1.114,78,3.768,79,3.768,80,4.738,81,4.738,82,2.8,83,3.768,84,5.381,85,3.768,86,3.768,87,3.768,88,3.768,89,0.619,90,3.768,91,3.768,92,3.318,93,1.71,94,0.587,95,3.768,96,3.768,97,3.768,98,3.318,99,2.8,100,3.768,101,3.768,102,2.616,103,3.768]],["title/injectables/AppService.html",[19,2.842,104,1.246]],["body/injectables/AppService.html",[3,0.122,4,0.069,5,0.109,7,0.423,8,2.264,9,6.479,11,0.01,13,0.683,15,1.815,16,0.507,17,0.203,18,1.176,19,4.652,24,0.122,25,0.34,27,2.081,28,1.968,30,0.008,31,0.008,61,1.768,62,0.791,63,0.374,64,1.403,73,5.903,74,3.729,81,4.996,82,4.216,94,0.883,104,2.04,105,2.493,106,4.996,107,2.751,108,5.674,109,5.674,110,5.674,111,4.996,112,5.26,113,2.759,114,5.674,115,5.674,116,4.996]],["title/classes/Article.html",[25,0.259,117,2.697]],["body/classes/Article.html",[3,0.107,4,0.061,5,0.095,7,0.372,10,1.099,11,0.01,13,0.7,16,0.607,17,0.191,24,0.156,25,0.298,30,0.007,31,0.007,63,0.55,77,1.472,89,1.312,94,1.014,102,3.167,117,4.526,118,0.775,119,3.701,120,0.908,121,3.294,122,4.526,123,3.955,124,3.955,125,3.743,126,4.98,127,4.125,128,4.062,129,2.772,130,4.98,131,4.98,132,4.195,133,2.607,134,2.831,135,2.607,136,2.956,137,2.831,138,3.994,139,2.831,140,2.96,141,2.831,142,0.885,143,3.701,144,4.385,145,4.98,146,2.422]],["title/classes/ArticleDto.html",[25,0.259,147,2.697]],["body/classes/ArticleDto.html",[3,0.102,4,0.058,5,0.091,7,0.353,10,1.19,11,0.01,13,0.758,16,0.563,17,0.186,22,0.981,24,0.152,25,0.424,30,0.007,31,0.007,63,0.517,89,1.239,94,0.98,118,0.737,120,0.878,121,3.213,123,3.857,142,1.341,147,3.927,148,3.517,149,2.327,150,1.623,151,2.231,152,2.231,153,2.957,154,4.732,155,4.732,156,2.478,157,2.92,158,2.579,159,2.52,160,2.766,161,2.579,162,2.579,163,2.148,164,1.474,165,2.205,166,1.474,167,1.937,168,1.505,169,1.058,170,1.408,171,2.951,172,5.05,173,2.951,174,1.399,175,1.558,176,1.399]],["title/classes/ArticleQueryDto.html",[25,0.259,173,2.697]],["body/classes/ArticleQueryDto.html",[3,0.111,4,0.063,5,0.099,7,0.385,10,1.01,11,0.01,13,0.643,16,0.477,17,0.194,22,1.07,24,0.159,25,0.442,30,0.007,31,0.007,63,0.439,89,1.095,94,1.149,118,0.803,120,0.929,121,2.343,123,2.813,142,1.387,147,3.219,148,3.835,149,1.92,150,1.184,151,2.183,152,2.183,163,2.24,164,1.608,165,2.431,166,1.608,167,2.021,168,1.57,169,1.154,170,1.491,171,3.219,172,5.92,173,4.157,174,2.183,175,1.93,176,2.183,177,3.633,178,5.161,179,5.161]],["title/controllers/ArticlesController.html",[0,1.542,180,3.214]],["body/controllers/ArticlesController.html",[0,1.068,2,1.068,3,0.064,4,0.037,5,0.057,7,0.223,8,1.453,10,0.998,11,0.01,13,0.635,15,2.107,16,0.544,17,0.183,18,0.621,21,1.632,22,0.621,24,0.064,25,0.179,26,1.632,27,1.098,28,2.285,30,0.005,31,0.005,61,2.052,62,0.918,63,0.532,64,1.629,117,5.211,147,4.108,171,4.628,173,4.324,180,3.375,181,2.636,182,1.632,183,4.542,184,2.528,185,2.7,186,1.933,187,1.933,188,2.336,189,1.632,190,3.371,191,3.915,192,2.994,193,3.517,194,4.451,195,2.582,196,2.7,197,5.488,198,4.606,199,1.779,200,2.994,201,2.924,202,2.994,203,2.336,204,3.262,205,1.779,206,2.994,207,2.994,208,6.933,209,2.994,210,3.642,211,2.994,212,3.642,213,1.779,214,1.779,215,2.994,216,2.994,217,3.915,218,2.994,219,2.994,220,2.994,221,2.7,222,2.994,223,2.994,224,2.582,225,2.582,226,1.568,227,1.779,228,1.779,229,1.779,230,1.779,231,2.985,232,2.636,233,4.121,234,4.681,235,1.274,236,2.636,237,2.636,238,1.779,239,1.568,240,1.779,241,2.994,242,2.994,243,2.994,244,3.915,245,4.606,246,1.779,247,3.915,248,3.915,249,1.967,250,2.994,251,3.642,252,2.084,253,2.994,254,2.994,255,2.994,256,2.994,257,2.994,258,2.994,259,2.994,260,1.779,261,2.994,262,2.994,263,2.994]],["title/modules/ArticlesModule.html",[32,1.383,44,3.011]],["body/modules/ArticlesModule.html",[2,2.498,3,0.12,4,0.068,5,0.107,11,0.01,17,0.218,18,1.157,24,0.12,25,0.334,30,0.008,31,0.008,32,2.449,34,2.451,35,2.451,36,2.619,37,2.619,38,2.532,39,3.364,40,2.619,44,5.878,52,3.289,53,2.619,54,2.619,56,2.713,62,0.778,76,3.04,77,1.649,117,3.479,133,2.233,143,5.205,180,5.69,231,5.548,232,4.913,264,4.913,265,4.913,266,5.579,267,4.913,268,5.579,269,3.171,270,5.579]],["title/injectables/ArticlesService.html",[104,1.246,231,2.842]],["body/injectables/ArticlesService.html",[3,0.087,4,0.049,5,0.077,7,0.3,8,1.801,11,0.01,13,0.777,15,2.46,16,0.551,17,0.208,18,0.833,24,0.087,25,0.241,27,1.474,30,0.006,31,0.006,61,2.46,62,1.101,63,0.52,64,1.953,77,1.188,93,3.841,104,1.622,105,1.765,107,2.188,113,2.738,117,2.506,120,0.785,135,1.608,138,3.222,142,1.001,147,3.512,150,1.491,157,3.257,171,2.506,173,2.506,184,2.323,186,2.396,187,2.396,188,2.396,189,2.19,190,2.738,201,2.902,203,2.396,231,3.7,235,1.71,236,3.538,237,3.538,267,3.538,271,3.538,272,4.345,273,3.201,274,3.069,275,4.018,276,3.84,277,4.018,278,5.631,279,3.201,280,2.388,281,2.284,282,2.388,283,2.284,284,4.191,285,2.388,286,2.284,287,2.388,288,2.19,289,2.388,290,2.284,291,3.201,292,3.201,293,2.388,294,2.388,295,2.284,296,2.19,297,2.388,298,4.018,299,4.018]],["title/controllers/AuthController.html",[0,1.542,300,3.214]],["body/controllers/AuthController.html",[0,1.528,2,1.528,3,0.145,4,0.052,5,0.082,7,0.32,8,1.884,10,0.892,11,0.01,13,0.568,15,1.884,17,0.215,18,0.888,21,2.336,22,0.888,24,0.092,25,0.257,28,2.043,30,0.006,31,0.006,61,1.834,62,0.821,63,0.477,64,1.457,93,3.561,94,0.917,107,1.665,113,2.863,129,2.863,182,2.336,194,3.794,195,3.347,201,2.734,224,2.436,225,3.347,226,2.244,300,4.376,301,3.774,302,4.285,303,6.728,304,5.889,305,4.285,306,5.462,307,4.285,308,4.999,309,5.889,310,6.378,311,4.285,312,4.285,313,5.462,314,4.285,315,3.667,316,5.889,317,4.285,318,4.285,319,6.728,320,4.285,321,3.436,322,3.774,323,3.774,324,3.347,325,3.774,326,4.421,327,3.774,328,3.774,329,4.285,330,3.774,331,4.285,332,4.285,333,3.436,334,4.285,335,5.889,336,3.209,337,4.285,338,4.285,339,3.436,340,4.285,341,2.547,342,4.285,343,2.673,344,4.285,345,4.285,346,4.285,347,4.285]],["title/modules/AuthenticationModule.html",[32,1.383,45,3.011]],["body/modules/AuthenticationModule.html",[2,2.194,3,0.098,4,0.056,5,0.088,11,0.01,17,0.222,18,0.947,24,0.098,25,0.274,28,1.585,30,0.007,31,0.007,32,2.224,34,2.008,35,2.008,36,2.146,37,2.146,38,2.074,39,3.055,40,3.265,45,5.975,50,5.255,52,2.888,53,2.146,54,2.146,56,2.991,73,5.179,74,3.003,82,3.396,92,4.024,94,0.711,98,4.024,112,4.572,116,4.024,239,2.393,300,5.168,326,5.681,327,4.024,348,4.024,349,4.57,350,4.024,351,4.024,352,5.568,353,4.57,354,6.152,355,3.665,356,4.57,357,4.57,358,4.57,359,4.57,360,3.665,361,4.57,362,4.57,363,3.665,364,4.57,365,4.024,366,4.57,367,4.57,368,4.024,369,4.57,370,4.57,371,6.152,372,4.57,373,4.57]],["title/injectables/AuthenticationService.html",[104,1.246,326,2.842]],["body/injectables/AuthenticationService.html",[3,0.088,4,0.05,5,0.078,7,0.305,8,1.824,11,0.01,13,0.633,15,1.824,16,0.293,17,0.222,18,0.848,24,0.088,25,0.341,28,1.978,30,0.006,31,0.006,61,2.045,62,0.915,63,0.522,64,1.624,73,5.525,74,2.689,93,3.511,94,0.888,104,1.643,105,1.798,107,2.216,113,3.192,129,1.741,201,2.68,306,5.199,315,2.23,321,3.281,322,3.603,323,3.603,324,4.037,325,3.603,326,3.748,328,3.603,333,5.265,336,3.578,339,4.574,341,3.39,343,2.552,355,3.281,374,3.603,375,5.704,376,5.704,377,4.092,378,7.734,379,4.092,380,5.704,381,4.574,382,4.092,383,4.092,384,5.704,385,4.092,386,5.704,387,2.849,388,4.092,389,3.281,390,3.603,391,3.39,392,4.092,393,3.041,394,1.798,395,5.022,396,3.603,397,3.603,398,4.092,399,3.603,400,4.092,401,4.092,402,3.603,403,4.092,404,4.092,405,2.689,406,4.092,407,5.704,408,4.092,409,4.092,410,2.849,411,3.281,412,4.092,413,4.092,414,3.603,415,3.603]],["title/classes/Base.html",[25,0.259,136,1.963]],["body/classes/Base.html",[3,0.124,4,0.071,5,0.111,7,0.431,10,1.084,11,0.01,13,0.69,17,0.152,24,0.124,25,0.346,30,0.008,31,0.008,63,0.535,77,1.707,118,0.899,120,0.997,124,3.899,132,4.238,133,2.864,136,3.248,151,2.299,152,2.299,159,3.491,193,3.248,416,5.083,417,6.518,418,5.772,419,5.772,420,5.083,421,7.155]],["title/classes/BaseDto.html",[25,0.259,149,1.246]],["body/classes/BaseDto.html",[3,0.119,4,0.068,5,0.106,7,0.414,10,1.157,11,0.01,13,0.737,16,0.5,17,0.201,22,1.15,24,0.119,25,0.457,30,0.008,31,0.008,63,0.503,118,0.864,120,0.973,149,2.011,150,1.752,151,2.258,152,2.258,156,2.906,159,3.208,160,3.704,394,2.437,422,4.885,423,5.548,424,5.548,425,5.548,426,3.862,427,6.98,428,5.187,429,3.862,430,5.548,431,5.548]],["title/controllers/CategoriesController.html",[0,1.542,432,3.214]],["body/controllers/CategoriesController.html",[0,1.068,2,1.068,3,0.064,4,0.037,5,0.057,7,0.223,8,1.453,10,0.998,11,0.01,13,0.635,15,2.107,16,0.544,17,0.183,18,0.621,21,1.632,22,0.621,24,0.064,25,0.179,26,1.632,27,1.098,28,2.285,30,0.005,31,0.005,61,2.052,62,0.918,63,0.532,64,1.629,182,1.632,184,2.528,185,2.7,186,1.933,187,1.933,188,2.336,191,3.915,193,3.517,194,4.451,195,2.582,196,2.7,198,4.606,199,1.779,201,2.924,203,2.336,204,3.262,205,1.779,210,3.642,212,3.642,213,1.779,214,1.779,217,3.915,221,2.7,224,2.582,225,2.582,226,1.568,227,1.779,228,1.779,229,1.779,230,1.779,233,4.121,234,4.681,235,1.274,238,1.779,239,1.568,240,1.779,244,3.915,245,4.606,246,1.779,247,3.915,248,3.915,249,1.967,251,3.642,252,2.084,260,1.779,432,3.375,433,2.636,434,4,435,2.994,436,4.826,437,2.994,438,5.211,439,5.488,440,2.994,441,2.994,442,2.994,443,2.994,444,6.105,445,2.994,446,4.324,447,2.994,448,2.994,449,2.994,450,2.994,451,2.994,452,2.994,453,4.628,454,2.994,455,2.994,456,2.985,457,2.636,458,2.636,459,4.108,460,2.636,461,2.994,462,2.994,463,2.994,464,2.994,465,2.994,466,2.994,467,2.994,468,2.994,469,2.994,470,2.994,471,2.994,472,2.994,473,2.994,474,2.994]],["title/modules/CategoriesModule.html",[32,1.383,46,3.011]],["body/modules/CategoriesModule.html",[2,2.498,3,0.12,4,0.068,5,0.107,11,0.01,17,0.218,18,1.157,24,0.12,25,0.334,30,0.008,31,0.008,32,2.449,34,2.451,35,2.451,36,2.619,37,2.619,38,2.532,39,3.364,40,2.619,46,5.878,52,3.289,53,2.619,54,2.619,56,2.713,62,0.778,76,3.04,77,1.649,133,2.233,269,3.171,432,5.69,438,3.479,456,5.548,457,4.913,475,4.913,476,4.913,477,5.579,478,5.205,479,4.913,480,5.579,481,4.913]],["title/injectables/CategoriesService.html",[104,1.246,456,2.842]],["body/injectables/CategoriesService.html",[3,0.081,4,0.046,5,0.072,7,0.282,8,1.723,11,0.01,13,0.778,15,2.481,16,0.54,17,0.209,18,0.783,24,0.081,25,0.226,27,1.385,30,0.006,31,0.006,61,2.416,62,1.081,63,0.511,64,1.918,77,1.116,93,3.884,94,0.588,99,2.805,104,1.552,105,1.658,107,2.094,113,2.62,120,0.751,135,1.511,136,1.714,142,0.958,150,1.441,157,3.199,184,2.223,186,2.293,187,2.293,188,2.293,189,2.057,190,1.835,201,2.844,203,2.293,235,1.606,272,4.288,273,3.063,274,2.936,276,3.734,279,3.063,280,2.244,281,2.146,282,2.244,283,2.146,284,4.106,285,2.244,286,2.146,287,2.244,288,2.057,289,2.244,290,2.146,291,3.063,292,3.063,293,2.244,294,2.244,295,2.146,296,2.057,297,2.244,336,2.936,434,4.744,436,2.628,438,2.354,446,2.354,453,2.354,456,3.541,458,3.324,459,3.36,460,3.324,479,3.324,482,3.324,483,6.042,484,3.775,485,3.775,486,5.388,487,3.775,488,3.027,489,3.775,490,3.775,491,4.321,492,3.775,493,2.805,494,3.775]],["title/classes/Category.html",[25,0.259,438,2.697]],["body/classes/Category.html",[3,0.111,4,0.063,5,0.099,7,0.384,10,1.008,11,0.01,13,0.642,16,0.592,17,0.205,24,0.159,25,0.308,30,0.007,31,0.007,62,1.028,63,0.561,77,1.522,89,1.326,94,0.801,102,3.235,118,0.801,120,0.928,124,3.627,125,3.79,132,4.019,133,2.663,134,2.926,135,2.663,136,3.021,137,2.926,139,2.926,141,2.926,142,0.915,146,2.503,193,2.337,438,4.599,478,3.825,488,4.128,495,3.825,496,5.147,497,5.134,498,4.945,499,5.147,500,3.825,501,5.147,502,5.147,503,4.532,504,5.147]],["title/classes/CategoryDto.html",[25,0.259,459,2.697]],["body/classes/CategoryDto.html",[3,0.101,4,0.057,5,0.09,7,0.35,10,1.186,11,0.01,13,0.755,16,0.505,17,0.198,22,0.972,24,0.152,25,0.422,30,0.007,31,0.007,62,0.982,63,0.55,89,1.028,94,0.974,118,0.73,120,0.872,142,1.336,149,2.321,150,1.616,151,2.222,152,2.222,153,2.201,156,2.455,157,2.906,158,2.555,159,2.505,160,2.749,161,2.555,162,2.555,163,2.138,164,1.46,165,2.194,166,1.46,167,1.928,168,1.331,169,1.048,170,1.048,174,1.386,175,1.548,176,1.386,446,2.924,453,2.924,459,3.903,497,5.233,500,3.484,505,3.484,506,4.688,507,4.128,508,4.688,509,3.411,510,5.018]],["title/classes/CategoryQueryDto.html",[25,0.259,446,2.697]],["body/classes/CategoryQueryDto.html",[3,0.11,4,0.062,5,0.098,7,0.38,10,1.001,11,0.01,13,0.637,16,0.365,17,0.204,22,1.056,24,0.158,25,0.439,30,0.007,31,0.007,62,0.71,63,0.483,89,0.837,94,1.142,118,0.793,120,0.921,142,1.38,149,1.904,150,1.168,151,2.169,152,2.169,163,2.227,164,1.587,165,2.419,166,1.587,167,2.008,168,1.406,169,1.139,170,1.139,174,2.169,175,1.921,176,2.169,177,3.602,446,4.123,453,3.177,459,3.177,497,5.108,500,3.786,505,3.786,509,3.602,510,5.884,511,5.095,512,5.095]],["title/classes/Comment.html",[25,0.259,513,2.842]],["body/classes/Comment.html",[3,0.086,4,0.068,5,0.076,7,0.297,10,1.162,11,0.01,13,0.74,16,0.61,17,0.202,24,0.139,25,0.239,30,0.006,31,0.006,63,0.571,77,1.178,89,1.294,94,0.872,102,2.723,118,0.62,120,0.781,121,2.938,122,4.037,124,4.18,125,3.91,127,4.204,128,3.492,129,1.696,132,4.293,133,2.241,134,2.266,135,2.241,136,2.542,137,2.266,139,2.266,140,2.369,141,2.266,142,0.708,146,1.938,193,3.187,498,5.496,513,4.254,514,2.775,515,6.473,516,4.037,517,5.931,518,3.986,519,6.182,520,3.986,521,3.898,522,3.986,523,4.931,524,3.986,525,3.986,526,5.7,527,3.986,528,3.51,529,2.266,530,3.51,531,3.51,532,3.196,533,4.931,534,3.328,535,3.986,536,3.986,537,3.196,538,3.196,539,2.775,540,2.962,541,3.51,542,3.986]],["title/classes/CommentDto.html",[25,0.259,543,2.697]],["body/classes/CommentDto.html",[3,0.102,4,0.058,5,0.091,7,0.353,10,1.19,11,0.01,13,0.758,16,0.563,17,0.186,22,0.981,24,0.152,25,0.424,30,0.007,31,0.007,63,0.517,89,1.239,94,0.98,118,0.737,120,0.878,121,3.213,142,1.341,149,2.327,150,1.623,151,2.231,152,2.231,153,2.957,156,2.478,157,2.92,158,2.579,159,2.52,160,2.766,161,2.579,162,2.579,163,2.148,164,1.474,165,2.205,166,1.474,167,1.937,168,1.505,169,1.058,170,1.408,174,1.399,175,1.558,176,1.399,516,4.414,543,3.927,544,3.517,545,4.732,546,4.732,547,2.951,548,5.05,549,2.951]],["title/classes/CommentQueryDto.html",[25,0.259,549,2.697]],["body/classes/CommentQueryDto.html",[3,0.111,4,0.063,5,0.099,7,0.385,10,1.01,11,0.01,13,0.643,16,0.477,17,0.194,22,1.07,24,0.159,25,0.442,30,0.007,31,0.007,63,0.439,89,1.095,94,1.149,118,0.803,120,0.929,121,2.343,142,1.387,149,1.92,150,1.184,151,2.183,152,2.183,163,2.24,164,1.608,165,2.431,166,1.608,167,2.021,168,1.57,169,1.154,170,1.491,174,2.183,175,1.93,176,2.183,177,3.633,516,3.219,543,3.219,544,3.835,547,3.219,548,5.92,549,4.157,550,5.161,551,5.161]],["title/controllers/CommentsController.html",[0,1.542,552,3.214]],["body/controllers/CommentsController.html",[0,1.064,2,1.064,3,0.064,4,0.036,5,0.057,7,0.223,8,1.45,10,0.996,11,0.01,13,0.634,15,2.104,16,0.544,17,0.182,18,0.619,21,1.627,22,0.619,24,0.064,25,0.179,26,1.627,27,1.095,28,2.282,30,0.005,31,0.005,61,2.049,62,0.917,63,0.531,64,1.627,182,1.627,184,2.524,185,3.256,186,1.929,187,1.929,188,2.331,191,3.91,193,3.514,194,4.449,195,2.576,196,2.694,198,4.602,199,1.774,201,2.922,203,2.331,204,3.256,205,1.774,210,3.636,212,3.636,213,1.774,214,1.774,217,3.91,221,2.694,224,2.576,225,2.576,226,1.563,227,1.774,228,1.774,229,1.774,230,1.774,233,4.116,234,4.677,235,1.27,238,1.774,239,1.563,240,1.774,244,3.91,245,4.602,246,1.774,247,3.91,248,3.91,249,1.961,251,3.636,252,2.078,260,1.774,513,5.488,543,4.102,547,4.624,549,4.319,552,3.368,553,2.628,554,3.991,555,2.985,556,4.821,557,2.985,558,5.478,559,2.985,560,2.985,561,2.985,562,2.985,563,6.925,564,2.985,565,2.985,566,2.985,567,2.985,568,2.985,569,2.985,570,2.985,571,2.985,572,2.985,573,2.826,574,2.628,575,2.628,576,2.628,577,2.985,578,2.985,579,2.985,580,2.985,581,2.985,582,2.985,583,2.985,584,2.985,585,2.985,586,4.532,587,2.985,588,2.985,589,2.985]],["title/modules/CommentsModule.html",[32,1.383,47,2.842]],["body/modules/CommentsModule.html",[2,2.451,3,0.117,4,0.066,5,0.104,11,0.01,17,0.216,18,1.122,24,0.117,25,0.324,30,0.007,31,0.007,32,2.415,34,2.378,35,2.378,36,2.541,37,2.541,38,2.457,39,3.317,40,3.545,47,5.593,52,3.226,53,2.541,54,2.541,56,2.632,62,0.754,76,2.95,77,1.6,133,2.166,269,3.076,513,3.557,540,5.107,552,5.611,573,5.528,574,4.766,590,4.766,591,4.766,592,4.766,593,5.412,594,4.766,595,5.412,596,5.412]],["title/injectables/CommentsService.html",[104,1.246,573,2.697]],["body/injectables/CommentsService.html",[3,0.087,4,0.049,5,0.077,7,0.3,8,1.801,11,0.01,13,0.777,15,2.46,16,0.551,17,0.208,18,0.833,24,0.087,25,0.241,27,1.474,30,0.006,31,0.006,61,2.46,62,1.101,63,0.52,64,1.953,77,1.188,93,3.841,104,1.622,105,1.765,107,2.188,113,2.738,120,0.785,135,1.608,142,1.001,150,1.491,157,3.257,184,2.323,186,2.396,187,2.396,188,2.396,189,2.19,190,1.954,201,2.902,203,2.396,235,1.71,272,4.345,273,3.201,274,3.069,276,3.84,279,3.201,280,2.388,281,2.284,282,2.388,283,2.284,284,4.191,285,2.388,286,2.284,287,2.388,288,2.19,289,2.388,290,2.284,291,3.201,292,3.201,293,2.388,294,2.388,295,2.284,296,2.19,297,2.388,513,2.64,532,3.222,543,3.512,547,2.506,549,2.506,556,2.797,573,3.512,575,3.538,576,3.538,594,3.538,597,3.538,598,4.018,599,4.018,600,5.631,601,4.018,602,4.018]],["title/classes/CommonName.html",[25,0.259,603,2.181]],["body/classes/CommonName.html",[3,0.111,4,0.063,5,0.099,7,0.386,10,1.011,11,0.01,13,0.644,16,0.56,17,0.195,24,0.159,25,0.31,30,0.007,31,0.007,62,1.03,63,0.532,77,1.53,89,1.214,94,1.039,102,3.246,118,0.805,120,0.931,122,4.61,124,3.639,125,3.246,127,4.202,128,4.164,129,2.841,132,4.029,133,2.672,134,2.941,135,2.672,136,3.031,137,2.941,139,2.941,140,3.075,141,2.941,142,0.92,146,2.516,603,3.727,604,3.871,605,4.202,606,3.845,607,5.174,608,5.174,609,4.149,610,3.845,611,4.556,612,5.174]],["title/classes/CommonNameDto.html",[25,0.259,613,2.265]],["body/classes/CommonNameDto.html",[3,0.105,4,0.06,5,0.094,7,0.364,10,1.157,11,0.01,13,0.737,16,0.515,17,0.189,22,1.012,24,0.155,25,0.43,30,0.007,31,0.007,62,1.002,63,0.503,89,1.056,94,1.001,118,0.76,120,0.896,142,1.358,149,2.348,150,1.649,151,2.258,152,2.258,153,2.293,156,2.557,157,2.965,158,2.661,159,2.573,160,2.824,161,2.661,162,2.661,163,2.181,164,1.521,165,2.239,166,1.521,167,1.967,168,1.367,169,1.092,170,1.092,174,1.444,175,1.59,176,1.444,604,3.367,613,3.367,614,3.822,615,3.399,616,4.883,617,3.045,618,5.155,619,3.045]],["title/classes/CommonNameQueryDto.html",[25,0.259,619,2.697]],["body/classes/CommonNameQueryDto.html",[3,0.111,4,0.063,5,0.099,7,0.385,10,1.01,11,0.01,13,0.643,16,0.37,17,0.194,22,1.07,24,0.159,25,0.442,30,0.007,31,0.007,62,0.719,63,0.439,89,0.848,94,1.149,118,0.803,120,0.929,142,1.387,149,1.92,150,1.184,151,2.183,152,2.183,163,2.24,164,1.608,165,2.431,166,1.608,167,2.021,168,1.417,169,1.154,170,1.154,174,2.183,175,1.93,176,2.183,177,3.633,604,3.867,613,2.703,614,4.388,615,3.593,617,3.219,618,5.92,619,4.157,620,5.161,621,5.161]],["title/controllers/CommonNamesController.html",[0,1.542,622,3.214]],["body/controllers/CommonNamesController.html",[0,1.025,2,1.025,3,0.062,4,0.035,5,0.055,7,0.214,8,1.408,10,0.98,11,0.01,13,0.624,15,2.068,16,0.538,17,0.18,18,0.596,21,1.566,22,0.596,24,0.062,25,0.172,26,1.566,27,1.054,28,2.243,30,0.005,31,0.005,61,2.014,62,0.901,63,0.527,64,1.599,182,1.566,184,2.668,185,3.181,186,2.277,187,2.277,188,2.277,191,3.844,193,3.479,194,4.424,195,2.502,196,2.616,198,4.556,199,1.708,201,2.893,203,2.277,204,3.181,205,1.708,210,3.565,212,3.565,213,1.708,214,1.708,217,3.844,221,2.616,224,2.502,225,3.042,226,1.505,227,1.708,228,2.616,229,1.708,230,1.708,233,4.055,234,4.634,235,1.223,238,1.708,239,1.505,240,1.708,244,3.844,245,4.556,246,1.708,247,3.844,248,3.844,251,3.565,260,1.708,603,4.184,604,3.573,605,3.878,613,3.387,617,4.569,619,4.255,622,3.271,623,2.53,624,2.802,625,4.712,626,2.873,627,4.75,628,2.873,629,5.351,630,2.873,631,2.873,632,2.873,633,2.873,634,4.055,635,2.873,636,2.873,637,2.873,638,2.873,639,2.873,640,2.873,641,2.873,642,2.873,643,2.873,644,2.893,645,2.53,646,3.876,647,2.893,648,2.53,649,2.873,650,2.873,651,2.873,652,2.873,653,2.304,654,2.873,655,2.873,656,5.351,657,2.873,658,2.873,659,2.873,660,2.873,661,2.873]],["title/modules/CommonNamesModule.html",[32,1.383,662,3.011]],["body/modules/CommonNamesModule.html",[2,2.468,3,0.118,4,0.067,5,0.105,11,0.01,17,0.217,18,1.134,24,0.118,25,0.328,30,0.008,31,0.008,32,2.427,34,2.404,35,2.404,36,2.569,37,2.569,38,2.484,39,3.334,40,2.569,52,3.249,53,2.569,54,2.569,56,2.661,62,0.763,76,2.982,77,1.618,133,2.19,269,3.11,603,2.759,604,2.866,605,3.11,610,5.142,622,5.639,624,3.974,644,5.521,645,4.818,662,5.849,663,4.818,664,4.818,665,5.472,666,4.388,667,5.472,668,4.818]],["title/injectables/CommonNamesService.html",[104,1.246,644,2.842]],["body/injectables/CommonNamesService.html",[3,0.079,4,0.045,5,0.07,7,0.272,8,1.683,11,0.01,13,0.772,15,2.456,16,0.534,17,0.207,18,0.757,24,0.079,25,0.219,27,1.339,30,0.006,31,0.006,61,2.392,62,1.096,63,0.505,64,1.899,77,1.079,93,3.864,94,0.819,99,2.713,104,1.516,105,1.604,107,2.044,113,2.558,120,0.733,135,1.461,136,1.657,142,0.935,150,1.414,157,3.168,184,2.17,186,2.238,187,2.238,188,2.238,189,1.99,190,1.775,201,2.812,203,2.238,235,1.554,272,4.256,273,2.99,274,2.867,276,3.678,279,2.99,280,2.17,281,2.075,282,2.17,283,2.075,284,4.06,285,2.17,286,2.075,287,2.17,288,1.99,289,2.17,290,2.075,291,2.99,292,2.99,293,2.17,294,2.17,295,2.075,296,1.99,297,2.17,336,2.867,483,5.974,491,4.218,493,2.713,603,1.841,604,3.23,605,3.505,609,2.927,613,2.755,617,2.277,619,2.277,624,3.23,625,3.215,627,2.542,644,3.457,647,3.457,648,3.215,653,2.927,666,2.927,669,3.215,670,3.651,671,3.651,672,5.26,673,3.651,674,3.651,675,3.651,676,3.651,677,3.651,678,3.651,679,3.651]],["title/classes/CreateArticleDto.html",[25,0.259,190,2.103]],["body/classes/CreateArticleDto.html",[3,0.121,4,0.069,5,0.108,7,0.421,10,1.069,11,0.01,13,0.68,16,0.578,17,0.149,24,0.121,25,0.338,30,0.008,31,0.008,63,0.464,89,1.324,118,0.878,120,0.983,121,3.493,123,4.194,168,1.636,169,1.262,170,1.803,190,3.43,680,6.777,681,4.968,682,4.399,683,4.223,684,4.394,685,4.635,686,5.642,687,5.242,688,5.642,689,3.844]],["title/classes/CreateCategoryDto.html",[25,0.259,436,3.011]],["body/classes/CreateCategoryDto.html",[3,0.121,4,0.069,5,0.108,7,0.421,10,1.069,11,0.01,13,0.68,16,0.578,17,0.149,24,0.121,25,0.338,30,0.008,31,0.008,63,0.464,89,1.324,118,0.878,120,0.983,121,3.493,123,4.194,168,1.636,169,1.262,170,1.803,436,4.911,682,4.399,683,4.223,684,4.394,685,4.635,687,5.242,689,3.844,690,6.777,691,4.968,692,5.642,693,5.642]],["title/classes/CreateCommentDto.html",[25,0.259,556,3.011]],["body/classes/CreateCommentDto.html",[3,0.118,4,0.067,5,0.105,7,0.409,10,1.151,11,0.01,13,0.733,16,0.602,17,0.144,24,0.118,25,0.328,30,0.008,31,0.008,63,0.5,89,1.311,118,0.854,120,0.966,121,3.449,168,1.75,169,1.227,170,1.785,516,4.739,517,6.093,556,4.826,682,4.323,683,4.181,684,3.778,685,4.555,689,3.778,694,7.029,695,4.831,696,5.487,697,5.487,698,5.487]],["title/classes/CreateCommonNameDto.html",[25,0.259,627,3.011]],["body/classes/CreateCommonNameDto.html",[3,0.13,4,0.074,5,0.115,7,0.449,10,0.911,11,0.01,13,0.58,16,0.526,17,0.158,24,0.13,25,0.36,30,0.008,31,0.008,62,1.104,63,0.396,89,1.205,118,0.937,120,1.023,168,1.561,169,1.345,170,1.641,604,3.844,615,4.188,624,3.844,627,5.11,682,3.752,683,3.844,684,4,689,3.279,699,6.463,700,7.339,701,6.016]],["title/classes/CreateManufacturerDto.html",[25,0.259,702,3.011]],["body/classes/CreateManufacturerDto.html",[3,0.131,4,0.074,5,0.117,7,0.454,10,0.923,11,0.01,13,0.587,16,0.53,17,0.16,24,0.131,25,0.365,30,0.008,31,0.008,62,1.11,63,0.401,89,1.214,118,0.948,120,1.031,168,1.572,169,1.362,170,1.654,682,3.798,683,3.872,684,4.029,687,5.494,689,3.319,702,5.147,703,6.51,704,5.362,705,6.089]],["title/classes/CreateReviewDto.html",[25,0.259,706,3.011]],["body/classes/CreateReviewDto.html",[3,0.121,4,0.069,5,0.108,7,0.421,10,1.069,11,0.01,13,0.68,16,0.578,17,0.149,24,0.121,25,0.338,30,0.008,31,0.008,63,0.464,89,1.324,118,0.878,120,0.983,121,3.493,123,4.194,168,1.636,169,1.262,170,1.803,682,4.399,683,4.223,684,4.394,685,4.635,687,5.242,689,3.844,706,4.911,707,6.777,708,4.968,709,5.642,710,5.642]],["title/classes/CreateSourceDto.html",[25,0.259,711,3.011]],["body/classes/CreateSourceDto.html",[3,0.123,4,0.07,5,0.109,7,0.426,10,1.076,11,0.01,13,0.685,16,0.58,17,0.15,24,0.123,25,0.342,30,0.008,31,0.008,63,0.468,89,1.395,118,0.888,120,0.99,153,2.679,168,1.645,169,1.276,170,1.73,682,3.559,683,3.721,684,3.872,685,4.668,689,3.11,711,4.946,712,6.812,713,5.025,714,5.749,715,5.386,716,4.431,717,5.706,718,5.706]],["title/classes/CreateSteroidDto.html",[25,0.259,719,3.011]],["body/classes/CreateSteroidDto.html",[3,0.121,4,0.069,5,0.108,7,0.419,10,1.163,11,0.01,13,0.74,16,0.606,17,0.148,24,0.121,25,0.336,30,0.008,31,0.008,62,1.07,63,0.505,89,1.389,118,0.873,120,0.98,153,3.604,168,1.711,169,1.255,170,1.717,634,4.563,719,4.894,720,7.086,721,4.94,722,4.563,723,5.61,724,5.61,725,5.61]],["title/classes/CreateUserDto.html",[25,0.259,313,3.011]],["body/classes/CreateUserDto.html",[3,0.081,4,0.046,5,0.072,7,0.279,10,1.265,11,0.01,13,0.806,16,0.608,17,0.141,24,0.081,25,0.224,30,0.006,31,0.006,63,0.55,64,1.858,89,1.446,118,0.582,120,0.746,153,2.513,159,2.142,168,1.329,169,0.836,170,1.849,175,1.858,313,3.726,341,3.715,391,4.056,405,4.107,726,7.42,727,3.293,728,4.351,729,4.351,730,4.351,731,4.351,732,6.25,733,4.351,734,4.107,735,4.351,736,4.351,737,4.351,738,3.74,739,3.74,740,3.74,741,3.293,742,3.74,743,5.012,744,3.74,745,5.352,746,3.74,747,3.293,748,3.74,749,3.74,750,3.74,751,3.293,752,3.74,753,3.74,754,3.74,755,3.74,756,3.74,757,2.603,758,3.181,759,3.181,760,3.726,761,3.317,762,4.107,763,3.181,764,3.726]],["title/injectables/CrudService.html",[104,1.246,272,2.265]],["body/injectables/CrudService.html",[3,0.064,4,0.036,5,0.057,7,0.221,8,1.44,11,0.01,13,0.713,15,2.207,16,0.543,17,0.143,18,0.613,24,0.064,25,0.269,27,1.085,28,2.394,30,0.005,31,0.005,61,2.235,62,1,63,0.454,64,1.774,89,0.486,93,3.809,94,1.151,104,1.297,105,1.3,107,1.749,113,2.961,117,3.798,120,0.627,150,1.503,174,1.331,176,1.331,184,1.857,186,1.915,187,1.915,188,1.915,189,2.453,190,1.438,201,3.005,203,1.915,226,1.549,272,2.357,273,4.078,274,2.453,276,2.969,279,3.097,281,2.558,283,2.558,284,4.128,286,2.558,288,2.453,290,2.558,291,3.461,292,3.097,296,4.128,336,3.761,343,4.897,393,2.198,394,1.3,410,4.994,420,2.605,765,2.605,766,4.501,767,2.958,768,4.501,769,2.958,770,2.958,771,2.958,772,2.958,773,2.958,774,2.958,775,5.769,776,2.372,777,2.372,778,2.605,779,3.964,780,4.501,781,2.958,782,4.883,783,2.605,784,2.958,785,4.798,786,2.958,787,6.551,788,3.964,789,4.883,790,5.362,791,5.362,792,5.362,793,3.793,794,2.958,795,2.958,796,2.958,797,2.059,798,2.958,799,2.958,800,2.958,801,5.448,802,4.798,803,2.958,804,4.501,805,2.958,806,2.958,807,2.958,808,2.958]],["title/classes/FileNotImageException.html",[25,0.259,809,3.468]],["body/classes/FileNotImageException.html",[3,0.133,4,0.076,5,0.119,11,0.01,13,0.596,16,0.574,17,0.163,18,1.282,24,0.133,25,0.37,30,0.008,31,0.008,61,1.926,62,0.862,63,0.407,64,1.529,107,2.403,118,0.963,142,1.326,411,5.984,809,5.984,810,6.571,811,5.445,812,8.015,813,7.463,814,6.184,815,6.184,816,6.184]],["title/classes/GeneratorProvider.html",[25,0.259,817,3.468]],["body/classes/GeneratorProvider.html",[3,0.092,4,0.052,5,0.082,7,0.32,8,1.884,11,0.01,13,0.775,15,2.57,16,0.638,17,0.113,24,0.092,25,0.257,28,2.334,30,0.006,31,0.006,61,2.256,62,1.01,63,0.477,64,1.792,94,0.667,118,0.667,125,2.863,175,1.457,343,4.196,410,4.1,817,4.722,818,6.564,819,3.774,820,8.823,821,5.185,822,6.728,823,5.889,824,6.728,825,5.889,826,5.889,827,7.076,828,5.185,829,4.285,830,5.185,831,4.285,832,4.285,833,4.285,834,4.285,835,4.285,836,4.285,837,4.285,838,5.889,839,4.285,840,5.889,841,5.889,842,4.285,843,5.889,844,4.285,845,3.774,846,4.285,847,5.889,848,4.285,849,4.285,850,4.285]],["title/injectables/GeneratorService.html",[104,1.246,851,2.842]],["body/injectables/GeneratorService.html",[3,0.121,4,0.069,5,0.108,7,0.42,8,2.252,11,0.01,13,0.679,15,2.252,16,0.615,17,0.185,18,1.166,24,0.121,25,0.337,28,2.443,30,0.008,31,0.008,61,1.753,62,0.784,63,0.37,64,1.392,104,2.029,105,2.472,821,6.2,827,7.559,828,6.2,830,6.2,845,4.954,851,4.627,852,4.954,853,7.45,854,5.626,855,5.626,856,5.626]],["title/interfaces/IApiFile.html",[857,2.265,858,3.468]],["body/interfaces/IApiFile.html",[3,0.136,4,0.077,5,0.121,7,0.472,11,0.009,16,0.58,24,0.136,30,0.008,31,0.008,62,1.169,63,0.498,64,1.87,120,1.054,857,3.31,858,6.064,859,4.154,860,5.566,861,6.231,862,5.633]],["title/interfaces/IFieldOptions.html",[857,2.265,863,2.842]],["body/interfaces/IFieldOptions.html",[3,0.031,4,0.018,5,0.028,7,0.108,10,0.976,11,0.01,16,0.418,17,0.147,18,0.299,22,0.299,24,0.165,25,0.15,28,2.653,30,0.003,31,0.003,63,0.495,64,1.377,89,0.411,94,1.071,102,2.382,107,0.561,120,0.349,125,3.133,142,0.445,146,3.719,159,1.001,160,1.736,167,0.395,168,0.84,170,0.884,175,1.377,394,0.634,428,1.072,429,1.004,509,0.786,521,5.282,683,0.755,684,1.363,689,2.154,716,4.732,758,1.487,759,1.487,760,1.004,761,1.216,762,1.644,763,0.857,764,1.004,857,1.735,859,0.948,861,2.461,862,4.697,863,4.339,864,1.004,865,3.169,866,3.169,867,5.295,868,1.157,869,2.006,870,2.006,871,1.157,872,2.006,873,1.157,874,1.157,875,1.157,876,2.006,877,2.006,878,2.006,879,2.006,880,2.006,881,1.157,882,2.006,883,1.072,884,1.072,885,1.157,886,1.859,887,1.072,888,1.859,889,2.461,890,1.859,891,1.157,892,1.072,893,1.859,894,1.859,895,1.072,896,2.006,897,4.907,898,1.157,899,1.157,900,2.306,901,1.157,902,4.361,903,2.461,904,2.461,905,2.461,906,6.751,907,6.133,908,6.133,909,5.167,910,5.167,911,6.18,912,5.167,913,4.861,914,3.585,915,3.169,916,1.157,917,1.157,918,1.157,919,2.006,920,1.157,921,1.157,922,1.157,923,1.157,924,1.157,925,1.157,926,5.167,927,3.169,928,1.157,929,1.157,930,1.157,931,1.157,932,1.157,933,1.157,934,1.157,935,1.157,936,1.157,937,1.072,938,1.859,939,1.072,940,1.859,941,2.006,942,1.072,943,3.929,944,3.929,945,3.929,946,3.641,947,3.585,948,3.585,949,2.656,950,2.006,951,2.006,952,2.006,953,1.157,954,1.157,955,1.157,956,1.157,957,0.82,958,2.656,959,2.006,960,2.656,961,1.157,962,1.157,963,1.157,964,1.072,965,1.157,966,1.072,967,1.859,968,1.859,969,1.157,970,1.157,971,1.072,972,1.859,973,1.072,974,1.072]],["title/interfaces/IFile.html",[857,2.265,975,3.468]],["body/interfaces/IFile.html",[3,0.123,4,0.07,5,0.109,7,0.426,11,0.01,16,0.639,24,0.123,30,0.008,31,0.008,63,0.559,120,0.99,175,1.913,857,2.989,859,3.75,975,5.697,976,5.025,977,8.611,978,8.096,979,8.096,980,7.129,981,8.096,982,7.129]],["title/interfaces/INumberFieldOptions.html",[857,2.265,900,3.011]],["body/interfaces/INumberFieldOptions.html",[3,0.031,4,0.018,5,0.028,7,0.107,10,0.976,11,0.01,16,0.376,17,0.146,18,0.299,22,0.299,24,0.165,25,0.15,28,2.652,30,0.003,31,0.003,63,0.495,64,1.376,89,0.41,94,1.07,102,2.38,107,0.56,120,0.348,125,3.131,142,0.588,146,3.718,159,1,160,1.735,167,0.394,168,0.84,170,0.322,175,1.593,394,0.633,428,1.07,429,1.003,509,0.785,521,5.28,683,0.754,684,1.362,689,2.152,716,4.597,758,1.485,759,1.485,760,1.003,761,1.215,762,1.642,763,0.856,764,1.003,857,1.733,859,0.947,861,2.459,862,4.483,863,4.337,864,1.003,865,1.155,866,1.155,867,5.293,868,1.155,869,2.003,870,2.003,871,1.155,872,2.003,873,1.155,874,1.155,875,1.155,876,3.582,877,2.003,878,2.003,879,3.582,880,3.582,881,1.155,882,2.003,883,1.07,884,1.07,885,1.155,886,1.857,887,1.07,888,1.857,889,2.459,890,1.857,891,1.155,892,1.07,893,1.857,894,1.857,895,1.07,896,2.003,897,4.905,898,1.155,899,1.155,900,2.749,901,3.166,902,4.358,903,2.459,904,2.459,905,2.459,906,6.75,907,6.131,908,6.131,909,5.164,910,5.164,911,6.178,912,5.164,913,4.858,914,3.582,915,3.166,916,1.155,917,1.155,918,1.155,919,2.003,920,1.155,921,1.155,922,1.155,923,1.155,924,1.155,925,1.155,926,5.164,927,3.166,928,1.155,929,1.155,930,1.155,931,1.155,932,1.155,933,1.155,934,1.155,935,1.155,936,1.155,937,1.07,938,1.857,939,1.07,940,1.857,941,2.003,942,1.07,943,3.926,944,3.926,945,3.926,946,3.638,947,3.582,948,3.582,949,2.653,950,2.003,951,2.003,952,2.003,953,1.155,954,1.155,955,1.155,956,1.155,957,0.819,958,2.653,959,2.003,960,2.653,961,1.155,962,1.155,963,1.155,964,1.07,965,1.155,966,1.07,967,1.857,968,1.857,969,1.155,970,1.155,971,1.07,972,1.857,973,1.07,974,1.07]],["title/interfaces/IStringFieldOptions.html",[857,2.265,902,3.011]],["body/interfaces/IStringFieldOptions.html",[3,0.031,4,0.018,5,0.028,7,0.107,10,0.976,11,0.01,16,0.376,17,0.146,18,0.299,22,0.299,24,0.165,25,0.15,28,2.652,30,0.003,31,0.003,63,0.495,64,1.376,89,0.41,94,1.07,102,2.38,107,0.56,120,0.348,125,3.131,142,0.588,146,3.718,159,1,160,1.735,167,0.394,168,0.84,170,0.322,175,1.593,394,0.633,428,1.07,429,1.003,509,0.785,521,5.28,683,0.754,684,2.434,689,2.864,716,4.597,758,1.485,759,1.485,760,1.003,761,1.215,762,1.642,763,0.856,764,1.003,857,1.733,859,0.947,861,2.459,862,4.483,863,4.337,864,1.003,865,1.155,866,1.155,867,5.293,868,1.155,869,2.003,870,2.003,871,1.155,872,2.003,873,1.155,874,1.155,875,1.155,876,2.003,877,2.003,878,2.003,879,2.003,880,2.003,881,1.155,882,2.003,883,1.07,884,1.07,885,1.155,886,1.857,887,1.07,888,1.857,889,3.638,890,3.319,891,1.155,892,1.07,893,1.857,894,1.857,895,1.07,896,2.003,897,4.905,898,1.155,899,1.155,900,2.303,901,1.155,902,4.483,903,2.459,904,2.459,905,2.459,906,6.75,907,6.131,908,6.131,909,5.164,910,5.164,911,6.178,912,5.164,913,4.858,914,3.582,915,3.166,916,1.155,917,1.155,918,1.155,919,2.003,920,1.155,921,1.155,922,1.155,923,1.155,924,1.155,925,1.155,926,5.164,927,3.166,928,1.155,929,1.155,930,1.155,931,1.155,932,1.155,933,1.155,934,1.155,935,1.155,936,1.155,937,1.07,938,1.857,939,1.07,940,1.857,941,2.003,942,1.07,943,3.926,944,3.926,945,3.926,946,3.638,947,3.582,948,3.582,949,2.653,950,2.003,951,2.003,952,2.003,953,1.155,954,1.155,955,1.155,956,1.155,957,0.819,958,2.653,959,2.003,960,2.653,961,1.155,962,1.155,963,1.155,964,1.07,965,1.155,966,1.07,967,1.857,968,1.857,969,1.155,970,1.155,971,1.07,972,1.857,973,1.07,974,1.07]],["title/injectables/JwtStrategy.html",[104,1.246,352,3.011]],["body/injectables/JwtStrategy.html",[3,0.096,4,0.055,5,0.086,7,0.333,8,1.938,11,0.01,13,0.584,15,1.429,16,0.32,17,0.221,18,0.926,24,0.096,25,0.267,27,2.222,28,1.55,30,0.007,31,0.007,61,1.887,62,0.845,63,0.507,64,1.499,73,5.657,74,2.936,82,3.32,93,3.12,94,0.943,104,1.745,105,1.963,107,2.354,112,4.502,113,2.946,129,2.925,142,1.077,150,1.025,201,2.287,239,2.34,315,2.435,324,4.189,333,4.858,336,2.435,339,3.583,341,3.601,343,3.778,352,4.218,360,3.583,363,3.583,365,3.934,368,3.934,381,4.858,389,4.858,390,3.934,391,3.601,402,3.934,410,4.218,779,3.934,983,3.934,984,6.058,985,6.058,986,4.468,987,4.468,988,6.058,989,4.468,990,6.874,991,4.468,992,4.468,993,4.468,994,3.934,995,3.934,996,4.468,997,4.468,998,4.468,999,4.468,1000,4.468,1001,4.468,1002,4.468,1003,4.468,1004,4.468,1005,4.468]],["title/classes/LoginPayloadDto.html",[25,0.259,308,3.214]],["body/classes/LoginPayloadDto.html",[3,0.115,4,0.065,5,0.102,7,0.398,10,1.032,11,0.01,13,0.724,17,0.198,24,0.115,25,0.32,30,0.007,31,0.007,61,1.663,62,0.744,63,0.494,64,1.321,107,2.075,118,0.831,120,0.95,129,3.474,169,1.194,308,5.063,310,7.564,315,4.624,321,4.282,387,5.907,957,4.265,995,4.702,1006,6.959,1007,4.282,1008,6.813,1009,6.813,1010,5.999,1011,5.34,1012,5.34,1013,5.34]],["title/classes/Manufacturer.html",[25,0.259,1014,2.181]],["body/classes/Manufacturer.html",[3,0.113,4,0.064,5,0.101,7,0.392,10,1.022,11,0.01,13,0.65,16,0.563,17,0.196,24,0.16,25,0.315,30,0.007,31,0.007,62,1.038,63,0.535,77,1.554,89,1.223,94,1.05,102,3.279,118,0.818,120,0.94,122,4.645,124,3.676,125,3.279,127,4.233,128,4.206,129,2.87,132,4.059,133,2.699,134,2.987,135,2.699,136,3.061,137,2.987,139,2.987,140,3.124,141,2.987,142,0.934,146,2.555,1014,3.755,1015,3.906,1016,5.256,1017,5.256,1018,4.214,1019,3.906,1020,4.628,1021,5.256]],["title/classes/ManufacturerDto.html",[25,0.259,1022,2.265]],["body/classes/ManufacturerDto.html",[3,0.106,4,0.06,5,0.095,7,0.368,10,1.162,11,0.01,13,0.739,16,0.517,17,0.19,22,1.022,24,0.155,25,0.432,30,0.007,31,0.007,62,1.007,63,0.505,89,1.063,94,1.007,118,0.768,120,0.902,142,1.363,149,2.354,150,1.656,151,2.267,152,2.267,153,2.315,156,2.583,157,2.98,158,2.687,159,2.59,160,2.843,161,2.687,162,2.687,163,2.192,164,1.536,165,2.25,166,1.536,167,1.977,168,1.376,169,1.103,170,1.103,174,1.458,175,1.601,176,1.458,1022,3.389,1023,3.664,1024,4.931,1025,3.075,1026,5.189,1027,3.075]],["title/classes/ManufacturerQueryDto.html",[25,0.259,1027,2.697]],["body/classes/ManufacturerQueryDto.html",[3,0.113,4,0.064,5,0.1,7,0.391,10,1.02,11,0.01,13,0.649,16,0.376,17,0.196,22,1.087,24,0.16,25,0.445,30,0.007,31,0.007,62,0.731,63,0.443,89,0.861,94,1.158,118,0.816,120,0.939,142,1.395,149,1.94,150,1.202,151,2.199,152,2.199,163,2.257,164,1.633,165,2.445,166,1.633,167,2.036,168,1.432,169,1.172,170,1.172,174,2.199,175,1.941,176,2.199,177,3.669,1022,2.745,1023,3.895,1025,3.269,1026,5.964,1027,4.199,1028,5.242,1029,5.242]],["title/controllers/ManufacturersController.html",[0,1.542,1030,3.214]],["body/controllers/ManufacturersController.html",[0,1.049,2,1.049,3,0.063,4,0.036,5,0.056,7,0.219,8,1.433,10,0.99,11,0.01,13,0.63,15,2.09,16,0.542,17,0.181,18,0.61,21,1.603,22,0.61,24,0.063,25,0.176,26,1.603,27,1.079,28,2.267,30,0.005,31,0.005,61,2.036,62,0.911,63,0.53,64,1.616,182,1.603,184,2.696,185,3.227,186,2.31,187,2.31,188,2.31,191,3.884,193,3.501,194,4.439,195,2.547,196,2.663,198,4.584,199,1.748,201,2.911,203,2.31,204,3.227,205,1.748,210,3.608,212,3.608,213,1.748,214,1.748,217,3.884,221,2.663,224,2.547,225,3.086,226,1.54,227,1.748,228,2.663,229,1.748,230,1.748,233,4.092,234,4.661,235,1.251,238,1.748,239,1.54,240,1.748,244,3.884,245,4.584,246,1.748,247,3.884,248,3.884,251,3.608,260,1.748,646,3.946,702,4.793,722,4.255,1014,4.201,1022,3.422,1025,4.603,1027,4.294,1030,3.33,1031,2.589,1032,3.593,1033,2.941,1034,2.941,1035,5.429,1036,2.941,1037,2.941,1038,2.941,1039,2.941,1040,2.941,1041,2.941,1042,2.941,1043,2.941,1044,2.941,1045,2.941,1046,2.941,1047,2.941,1048,2.941,1049,2.945,1050,2.589,1051,2.589,1052,2.589,1053,2.941,1054,2.941,1055,2.941,1056,2.941,1057,2.941,1058,2.941,1059,5.429,1060,2.941,1061,2.941,1062,2.941,1063,2.941,1064,2.941]],["title/modules/ManufacturersModule.html",[32,1.383,1065,3.011]],["body/modules/ManufacturersModule.html",[2,2.489,3,0.119,4,0.068,5,0.106,11,0.01,17,0.217,18,1.15,24,0.119,25,0.332,30,0.008,31,0.008,32,2.443,34,2.437,35,2.437,36,2.605,37,2.605,38,2.518,39,3.355,40,2.605,52,3.277,53,2.605,54,2.605,56,2.698,62,0.773,76,3.024,77,1.64,133,2.221,269,3.153,1014,2.797,1019,5.187,1030,5.675,1049,5.54,1050,4.885,1065,5.869,1066,4.885,1067,4.885,1068,5.548,1069,4.885,1070,5.548,1071,4.885]],["title/injectables/ManufacturersService.html",[104,1.246,1049,2.842]],["body/injectables/ManufacturersService.html",[3,0.08,4,0.045,5,0.071,7,0.277,8,1.705,11,0.01,13,0.776,15,2.47,16,0.537,17,0.208,18,0.771,24,0.08,25,0.223,27,1.364,30,0.006,31,0.006,61,2.405,62,1.101,63,0.508,64,1.91,77,1.099,93,3.876,94,0.83,99,2.763,104,1.536,105,1.634,107,2.071,113,2.592,120,0.743,135,1.488,136,1.688,142,0.947,150,1.429,157,3.185,184,2.199,186,2.268,187,2.268,188,2.268,189,2.027,190,1.808,201,2.829,203,2.268,235,1.582,272,4.274,273,3.03,274,2.905,276,3.709,279,3.03,280,2.21,281,2.114,282,2.21,283,2.114,284,4.086,285,2.21,286,2.114,287,2.21,288,2.027,289,2.21,290,2.114,291,3.03,292,3.03,293,2.21,294,2.21,295,2.114,296,2.027,297,2.21,336,2.905,483,6.012,491,4.274,493,2.763,702,2.589,1014,2.688,1018,2.982,1022,2.792,1025,2.319,1027,2.319,1049,3.503,1051,3.274,1052,3.274,1069,3.274,1072,3.274,1073,3.719,1074,3.719,1075,5.33,1076,3.719,1077,3.719,1078,3.719,1079,3.719,1080,3.719,1081,3.719,1082,3.719,1083,3.719]],["title/classes/PaginationQueryDto.html",[25,0.259,1084,3.468]],["body/classes/PaginationQueryDto.html",[3,0.126,4,0.072,5,0.112,7,0.437,10,1.094,11,0.01,13,0.696,17,0.19,22,1.214,24,0.126,25,0.351,30,0.008,31,0.008,63,0.475,64,2.021,118,0.912,120,1.006,163,2.375,167,2.142,169,1.31,174,2.314,175,2.021,176,2.314,177,3.935,1084,5.789,1085,6.892,1086,5.158,1087,5.857,1088,5.857]],["title/classes/Review.html",[25,0.259,534,2.571]],["body/classes/Review.html",[3,0.091,4,0.071,5,0.081,7,0.314,10,1.143,11,0.01,13,0.728,16,0.6,17,0.211,24,0.144,25,0.252,30,0.006,31,0.006,63,0.557,77,1.246,89,1.314,94,0.906,102,2.83,118,0.656,120,0.811,122,4.158,124,4.113,125,3.795,127,4.547,128,4.485,129,2.837,132,4.253,133,2.329,134,2.395,135,2.329,136,2.642,137,2.395,139,2.395,140,2.504,141,2.395,142,0.749,146,2.049,193,3.027,438,2.628,444,5.871,481,3.71,498,4.325,516,4.158,517,6.052,519,5.125,523,5.125,529,2.395,530,3.71,531,3.71,534,3.963,537,3.378,538,3.378,539,2.933,1089,3.131,1090,6.668,1091,4.213,1092,4.213,1093,4.213,1094,4.213,1095,4.213,1096,3.71,1097,4.213,1098,3.378,1099,3.131,1100,3.71,1101,4.213]],["title/classes/ReviewDto.html",[25,0.259,1102,2.697]],["body/classes/ReviewDto.html",[3,0.102,4,0.058,5,0.091,7,0.353,10,1.19,11,0.01,13,0.758,16,0.563,17,0.186,22,0.981,24,0.152,25,0.424,30,0.007,31,0.007,63,0.517,89,1.239,94,0.98,118,0.737,120,0.878,121,3.213,123,3.857,142,1.341,149,2.327,150,1.623,151,2.231,152,2.231,153,2.957,156,2.478,157,2.92,158,2.579,159,2.52,160,2.766,161,2.579,162,2.579,163,2.148,164,1.474,165,2.205,166,1.474,167,1.937,168,1.505,169,1.058,170,1.408,174,1.399,175,1.558,176,1.399,1102,3.927,1103,3.517,1104,4.732,1105,4.732,1106,2.951,1107,5.05,1108,2.951]],["title/classes/ReviewQueryDto.html",[25,0.259,1108,2.697]],["body/classes/ReviewQueryDto.html",[3,0.111,4,0.063,5,0.099,7,0.385,10,1.01,11,0.01,13,0.643,16,0.477,17,0.194,22,1.07,24,0.159,25,0.442,30,0.007,31,0.007,63,0.439,89,1.095,94,1.149,118,0.803,120,0.929,121,2.343,123,2.813,142,1.387,149,1.92,150,1.184,151,2.183,152,2.183,163,2.24,164,1.608,165,2.431,166,1.608,167,2.021,168,1.57,169,1.154,170,1.491,174,2.183,175,1.93,176,2.183,177,3.633,1102,3.219,1103,3.835,1106,3.219,1107,5.92,1108,4.157,1109,5.161,1110,5.161]],["title/controllers/ReviewsController.html",[0,1.542,1111,3.214]],["body/controllers/ReviewsController.html",[0,1.068,2,1.068,3,0.064,4,0.037,5,0.057,7,0.223,8,1.453,10,0.998,11,0.01,13,0.635,15,2.107,16,0.544,17,0.183,18,0.621,21,1.632,22,0.621,24,0.064,25,0.179,26,1.632,27,1.098,28,2.285,30,0.005,31,0.005,61,2.052,62,0.918,63,0.532,64,1.629,182,1.632,184,2.528,185,2.7,186,1.933,187,1.933,188,2.336,191,3.915,193,3.517,194,4.451,195,2.582,196,2.7,198,4.606,199,1.779,201,2.924,203,2.336,204,3.262,205,1.779,210,3.642,212,3.642,213,1.779,214,1.779,217,3.915,221,2.7,224,2.582,225,2.582,226,1.568,227,1.779,228,1.779,229,1.779,230,1.779,233,4.121,234,4.681,235,1.274,238,1.779,239,1.568,240,1.779,244,3.915,245,4.606,246,1.779,247,3.915,248,3.915,249,1.967,251,3.642,252,2.084,260,1.779,534,4.967,706,4.826,1102,4.108,1106,4.628,1108,4.324,1111,3.375,1112,2.636,1113,4.542,1114,2.994,1115,2.994,1116,5.488,1117,2.994,1118,2.994,1119,2.994,1120,2.994,1121,6.933,1122,2.994,1123,2.994,1124,2.994,1125,2.994,1126,2.994,1127,2.994,1128,2.994,1129,2.994,1130,2.994,1131,2.985,1132,2.636,1133,2.636,1134,2.636,1135,2.994,1136,2.994,1137,2.994,1138,2.994,1139,2.994,1140,2.994,1141,2.994,1142,2.994,1143,2.994,1144,2.994,1145,2.994,1146,2.994,1147,2.994,1148,2.994]],["title/modules/ReviewsModule.html",[32,1.383,48,3.011]],["body/modules/ReviewsModule.html",[2,2.498,3,0.12,4,0.068,5,0.107,11,0.01,17,0.218,18,1.157,24,0.12,25,0.334,30,0.008,31,0.008,32,2.449,34,2.451,35,2.451,36,2.619,37,2.619,38,2.532,39,3.364,40,2.619,48,5.878,52,3.289,53,2.619,54,2.619,56,2.713,62,0.778,76,3.04,77,1.649,133,2.233,269,3.171,534,3.316,1099,5.205,1111,5.69,1131,5.548,1132,4.913,1149,4.913,1150,4.913,1151,5.579,1152,4.913,1153,5.579,1154,5.579]],["title/injectables/ReviewsService.html",[104,1.246,1131,2.842]],["body/injectables/ReviewsService.html",[3,0.087,4,0.049,5,0.077,7,0.3,8,1.801,11,0.01,13,0.777,15,2.46,16,0.551,17,0.208,18,0.833,24,0.087,25,0.241,27,1.474,30,0.006,31,0.006,61,2.46,62,1.101,63,0.52,64,1.953,77,1.188,93,3.841,104,1.622,105,1.765,107,2.188,113,2.738,120,0.785,135,1.608,142,1.001,150,1.491,157,3.257,184,2.323,186,2.396,187,2.396,188,2.396,189,2.19,190,1.954,201,2.902,203,2.396,235,1.71,272,4.345,273,3.201,274,3.069,276,3.84,279,3.201,280,2.388,281,2.284,282,2.388,283,2.284,284,4.191,285,2.388,286,2.284,287,2.388,288,2.19,289,2.388,290,2.284,291,3.201,292,3.201,293,2.388,294,2.388,295,2.284,296,2.19,297,2.388,534,2.388,706,2.797,1098,3.222,1102,3.512,1106,2.506,1108,2.506,1131,3.7,1133,3.538,1134,3.538,1152,3.538,1155,3.538,1156,4.018,1157,4.018,1158,5.631,1159,4.018,1160,4.018]],["title/modules/SharedModule.html",[32,1.383,1161,3.214]],["body/modules/SharedModule.html",[3,0.114,4,0.065,5,0.102,11,0.01,17,0.208,18,1.101,24,0.114,25,0.318,30,0.007,31,0.007,32,2.394,34,2.333,35,2.333,36,2.494,37,2.494,38,2.411,39,3.581,40,3.514,52,3.188,53,2.494,54,2.494,56,2.583,63,0.35,94,0.827,851,5.778,1161,6.491,1162,4.677,1163,4.677,1164,4.677,1165,5.778,1166,4.259,1167,6.79,1168,5.979,1169,7.484,1170,4.677,1171,5.312,1172,5.312]],["title/classes/Source.html",[4,0.053,25,0.259]],["body/classes/Source.html",[3,0.105,4,0.093,5,0.094,7,0.365,10,1.09,11,0.01,13,0.694,16,0.596,17,0.201,24,0.155,25,0.293,30,0.007,31,0.007,63,0.547,77,1.447,89,1.305,94,1.002,102,3.131,118,0.762,120,0.898,122,4.488,124,3.922,125,3.718,127,4.091,128,4.016,129,3.062,132,4.167,133,2.577,134,2.782,135,2.577,136,2.923,137,2.782,139,2.782,140,2.91,141,2.782,142,0.87,146,2.38,193,2.923,528,4.31,539,3.408,715,5.01,1173,3.637,1174,7.197,1175,4.895,1176,4.895,1177,4.895,1178,3.925,1179,3.637,1180,4.31,1181,4.895]],["title/classes/SourceDto.html",[25,0.259,1182,2.697]],["body/classes/SourceDto.html",[3,0.101,4,0.057,5,0.09,7,0.35,10,1.186,11,0.01,13,0.755,16,0.561,17,0.185,22,0.972,24,0.152,25,0.422,30,0.007,31,0.007,63,0.516,89,1.323,94,0.974,118,0.73,120,0.872,142,1.336,149,2.321,150,1.616,151,2.222,152,2.222,153,2.938,156,2.455,157,2.906,158,2.555,159,2.505,160,2.749,161,2.555,162,2.555,163,2.138,164,1.46,165,2.194,166,1.46,167,1.928,168,1.498,169,1.048,170,1.4,174,1.386,175,1.548,176,1.386,714,5.235,715,4.904,716,3.903,1182,3.903,1183,3.484,1184,4.688,1185,4.688,1186,2.924,1187,5.018,1188,2.924]],["title/classes/SourceQueryDto.html",[25,0.259,1188,2.697]],["body/classes/SourceQueryDto.html",[3,0.111,4,0.063,5,0.098,7,0.383,10,1.006,11,0.01,13,0.641,16,0.476,17,0.194,22,1.064,24,0.159,25,0.441,30,0.007,31,0.007,63,0.437,89,1.21,94,1.146,118,0.799,120,0.926,142,1.384,149,1.914,150,1.177,151,2.177,152,2.177,163,2.235,164,1.599,165,2.426,166,1.599,167,2.016,168,1.566,169,1.148,170,1.486,174,2.177,175,1.926,176,2.177,177,3.62,714,3.815,715,3.574,716,3.202,1182,3.202,1183,3.815,1186,3.202,1187,5.906,1188,4.143,1189,5.134,1190,5.134]],["title/controllers/SourcesController.html",[0,1.542,1191,3.214]],["body/controllers/SourcesController.html",[0,1.068,2,1.068,3,0.064,4,0.103,5,0.057,7,0.223,8,1.453,10,0.998,11,0.01,13,0.635,15,2.107,16,0.544,17,0.183,18,0.621,21,1.632,22,0.621,24,0.064,25,0.179,26,1.632,27,1.098,28,2.285,30,0.005,31,0.005,61,2.052,62,0.918,63,0.532,64,1.629,182,1.632,184,2.528,185,2.7,186,1.933,187,1.933,188,2.336,191,3.915,193,3.517,194,4.451,195,2.582,196,2.7,198,4.606,199,1.779,201,2.924,203,2.336,204,3.262,205,1.779,210,3.642,212,3.642,213,1.779,214,1.779,217,3.915,221,2.7,224,2.582,225,2.582,226,1.568,227,1.779,228,1.779,229,1.779,230,1.779,233,4.121,234,4.681,235,1.274,238,1.779,239,1.568,240,1.779,244,3.915,245,4.606,246,1.779,247,3.915,248,3.915,249,1.967,251,3.642,252,2.084,260,1.779,711,4.826,1182,4.108,1186,4.628,1188,4.324,1191,3.375,1192,2.636,1193,4.542,1194,2.994,1195,2.994,1196,5.488,1197,2.994,1198,2.994,1199,2.994,1200,2.994,1201,6.933,1202,2.994,1203,2.994,1204,2.994,1205,2.994,1206,2.994,1207,2.994,1208,2.994,1209,2.994,1210,2.994,1211,2.985,1212,2.636,1213,2.636,1214,2.636,1215,2.994,1216,2.994,1217,2.994,1218,2.994,1219,2.994,1220,2.994,1221,2.994,1222,2.994,1223,2.994,1224,2.994,1225,2.994,1226,2.994,1227,2.994,1228,2.994]],["title/modules/SourcesModule.html",[32,1.383,49,3.011]],["body/modules/SourcesModule.html",[2,2.498,3,0.12,4,0.086,5,0.107,11,0.01,17,0.218,18,1.157,24,0.12,25,0.334,30,0.008,31,0.008,32,2.449,34,2.451,35,2.451,36,2.619,37,2.619,38,2.532,39,3.364,40,2.619,49,5.878,52,3.289,53,2.619,54,2.619,56,2.713,62,0.778,76,3.04,77,1.649,133,2.233,269,3.171,538,4.474,1179,5.205,1191,5.69,1211,5.548,1212,4.913,1229,4.913,1230,4.913,1231,5.579,1232,4.913,1233,5.579]],["title/injectables/SourcesService.html",[104,1.246,1211,2.842]],["body/injectables/SourcesService.html",[3,0.087,4,0.069,5,0.077,7,0.3,8,1.801,11,0.01,13,0.777,15,2.46,16,0.551,17,0.208,18,0.833,24,0.087,25,0.241,27,1.474,30,0.006,31,0.006,61,2.46,62,1.101,63,0.52,64,1.953,77,1.188,93,3.841,104,1.622,105,1.765,107,2.188,113,2.738,120,0.785,135,1.608,142,1.001,150,1.491,157,3.257,184,2.323,186,2.396,187,2.396,188,2.396,189,2.19,190,1.954,201,2.902,203,2.396,235,1.71,272,4.345,273,3.201,274,3.069,276,3.84,279,3.201,280,2.388,281,2.284,282,2.388,283,2.284,284,4.191,285,2.388,286,2.284,287,2.388,288,2.19,289,2.388,290,2.284,291,3.201,292,3.201,293,2.388,294,2.388,295,2.284,296,2.19,297,2.388,711,2.797,1178,3.222,1182,3.512,1186,2.506,1188,2.506,1211,3.7,1213,3.538,1214,3.538,1232,3.538,1234,3.538,1235,4.018,1236,4.018,1237,5.631,1238,4.018,1239,4.018]],["title/classes/Steroid.html",[25,0.259,529,2.458]],["body/classes/Steroid.html",[3,0.097,4,0.055,5,0.087,7,0.338,10,1.123,11,0.01,13,0.715,16,0.608,17,0.21,24,0.149,25,0.271,30,0.007,31,0.007,62,0.965,63,0.553,77,1.339,89,1.137,94,0.952,102,2.973,118,0.705,120,0.852,122,4.317,124,4.039,125,2.973,127,4.634,128,4.974,129,1.927,132,4.218,133,2.447,134,2.574,135,2.447,136,2.775,137,2.574,139,2.574,140,2.692,141,2.574,142,0.805,146,2.202,193,3.142,529,3.934,539,3.153,603,2.283,605,2.574,624,2.372,634,4.115,666,3.631,668,3.988,722,4.115,1014,2.283,1071,3.988,1096,3.988,1240,3.365,1241,4.528,1242,4.528,1243,4.528,1244,4.528,1245,4.528,1246,3.631,1247,3.365,1248,3.988,1249,4.528]],["title/classes/SteroidCommentsCountDto.html",[25,0.259,1250,2.571]],["body/classes/SteroidCommentsCountDto.html",[3,0.08,4,0.046,5,0.072,7,0.278,10,1.171,11,0.01,13,0.745,16,0.517,17,0.198,22,0.774,24,0.147,25,0.432,30,0.006,31,0.006,62,0.95,63,0.55,89,1.185,94,0.832,118,0.581,120,0.745,142,1.282,149,2.227,150,1.432,151,2.015,152,2.015,153,1.753,156,1.955,157,2.576,158,2.034,159,2.139,160,3.169,161,2.034,162,2.034,163,1.895,164,1.163,165,1.945,166,1.163,167,1.709,168,1.328,169,0.835,170,1.195,174,1.104,175,1.686,176,1.104,394,1.64,426,4.347,603,3.437,613,4.14,614,2.219,624,1.955,634,2.219,647,2.453,722,2.219,761,3.036,793,2.599,957,3.549,1010,4.706,1014,3.437,1022,4.14,1250,3.177,1251,2.599,1252,4.347,1253,3.733,1254,3.733,1255,3.733,1256,3.733,1257,3.894,1258,4.64,1259,2.774,1260,2.219,1261,3.972,1262,2.774,1263,3.972,1264,2.774,1265,2.219,1266,3.972,1267,2.328]],["title/classes/SteroidDto.html",[25,0.259,1260,2.571]],["body/classes/SteroidDto.html",[3,0.077,4,0.044,5,0.068,7,0.266,10,1.184,11,0.01,13,0.753,16,0.508,17,0.195,22,0.741,24,0.144,25,0.425,30,0.006,31,0.006,62,0.931,63,0.55,89,1.165,94,0.806,118,0.556,120,0.722,142,1.26,149,2.198,150,1.397,151,1.975,152,1.975,153,1.677,156,1.871,157,2.513,158,1.947,159,2.073,160,3.115,161,1.947,162,1.947,163,1.848,164,1.113,165,1.897,166,1.113,167,1.667,168,1.295,169,0.799,170,1.158,174,1.056,175,1.507,176,1.056,394,1.569,426,4.241,603,3.368,613,4.17,614,2.123,624,1.871,634,3.621,647,2.347,722,3.621,761,2.518,793,2.487,957,3.462,1014,3.368,1022,4.17,1250,2.123,1251,2.487,1252,2.487,1257,4.423,1258,4.527,1259,2.655,1260,3.078,1261,3.848,1262,3.848,1263,4.964,1264,3.848,1265,2.123,1266,3.848,1267,2.228,1268,5.178,1269,3.572,1270,5.178,1271,3.572,1272,3.572,1273,3.572,1274,3.572,1275,3.572,1276,3.572]],["title/classes/SteroidQueryDto.html",[25,0.259,1267,2.697]],["body/classes/SteroidQueryDto.html",[3,0.088,4,0.05,5,0.078,7,0.304,10,0.862,11,0.01,13,0.632,16,0.508,17,0.203,22,0.845,24,0.153,25,0.446,30,0.006,31,0.006,62,0.793,63,0.532,64,1.407,89,1.164,94,1.02,118,0.634,120,0.793,142,1.325,149,1.887,150,0.935,151,1.937,152,1.937,160,2.878,163,1.988,164,1.27,165,2.208,166,1.27,167,1.793,168,1.393,169,0.911,170,1.272,174,1.937,175,1.844,176,1.937,177,3.1,394,1.79,426,4.561,603,2.868,613,4.151,614,2.422,624,2.134,634,2.422,647,2.678,722,2.422,761,2.765,793,4.561,957,3.724,1014,2.868,1022,4.151,1250,2.422,1251,2.837,1252,2.837,1257,4.086,1258,4.868,1259,3.029,1260,2.422,1261,4.226,1262,3.029,1263,4.226,1264,3.029,1265,2.422,1266,4.868,1267,3.547,1277,4.075,1278,4.075,1279,4.075]],["title/controllers/SteroidsController.html",[0,1.542,1280,3.214]],["body/controllers/SteroidsController.html",[0,1.082,2,1.082,3,0.065,4,0.037,5,0.058,7,0.226,8,1.468,10,1.004,11,0.01,13,0.639,15,2.119,16,0.546,17,0.183,18,0.629,21,1.654,22,0.629,24,0.065,25,0.182,26,1.654,27,1.113,28,2.298,30,0.005,31,0.005,61,1.922,62,0.86,63,0.527,64,1.526,182,1.654,184,2.545,185,3.289,186,2.625,187,1.953,188,2.355,191,3.938,193,3.529,194,4.459,195,2.608,196,2.728,198,4.622,199,1.804,201,2.935,203,2.355,204,3.289,205,1.804,210,3.667,212,3.667,213,1.804,214,1.804,217,3.938,221,2.728,224,2.608,225,2.608,226,1.589,227,1.804,229,1.804,230,1.804,233,4.142,234,4.696,235,1.291,238,1.804,239,1.589,240,1.804,244,3.938,245,4.622,246,1.804,247,3.938,248,3.938,249,1.994,251,3.667,260,1.804,529,4.76,719,4.852,1250,1.804,1260,3.938,1265,4.43,1280,3.41,1281,2.672,1282,4.041,1283,3.035,1284,3.035,1285,5.534,1286,3.035,1287,3.035,1288,3.035,1289,3.035,1290,6.969,1291,3.035,1292,3.035,1293,3.035,1294,3.035,1295,3.035,1296,3.035,1297,3.035,1298,3.035,1299,3.016,1300,2.672,1301,2.672,1302,2.672,1303,3.035,1304,3.035,1305,3.035,1306,3.035,1307,3.035,1308,3.035,1309,3.035,1310,3.035,1311,3.035,1312,4.589,1313,3.035,1314,3.035,1315,3.035]],["title/modules/SteroidsModule.html",[32,1.383,1316,3.011]],["body/modules/SteroidsModule.html",[2,2.434,3,0.115,4,0.065,5,0.103,11,0.01,17,0.22,18,1.11,24,0.115,25,0.321,30,0.007,31,0.007,32,2.403,34,2.352,35,2.352,36,2.514,37,2.514,38,2.431,39,3.3,40,2.514,47,5.49,52,3.204,53,2.514,54,2.514,56,3.318,62,0.746,76,2.918,77,1.583,133,2.143,269,3.043,529,3.043,537,4.294,1247,5.072,1280,5.583,1299,5.49,1300,4.715,1316,5.984,1317,4.715,1318,4.715,1319,5.354,1320,5.354,1321,4.715,1322,5.354,1323,5.354]],["title/injectables/SteroidsService.html",[104,1.246,1299,2.842]],["body/injectables/SteroidsService.html",[3,0.078,4,0.044,5,0.07,7,0.271,8,1.678,11,0.01,13,0.771,15,2.453,16,0.533,17,0.214,18,0.754,24,0.078,25,0.314,27,1.924,28,1.262,30,0.006,31,0.006,61,2.389,62,1.069,63,0.505,64,1.897,77,1.075,93,3.862,94,0.566,104,1.512,105,1.598,107,2.039,113,2.992,120,0.731,135,1.456,142,0.933,150,1.411,157,3.164,184,2.164,186,2.233,187,2.233,188,2.233,189,1.982,190,1.769,201,2.963,203,2.233,228,2.162,235,1.548,272,4.253,273,2.982,274,2.859,276,3.671,279,2.982,280,2.162,281,2.067,282,2.162,283,2.067,284,4.055,285,2.162,286,2.067,287,2.162,288,1.982,289,2.162,290,2.067,291,2.982,292,2.982,293,2.162,294,2.162,295,2.067,296,1.982,297,2.162,336,1.982,393,2.703,394,1.598,529,2.982,573,4.784,719,2.532,1246,2.917,1250,2.162,1260,3.118,1265,2.162,1267,2.268,1282,3.203,1299,3.448,1301,3.203,1302,3.203,1321,3.203,1324,3.203,1325,6.736,1326,3.637,1327,3.637,1328,5.246,1329,3.637,1330,2.917,1331,3.637,1332,3.637,1333,3.637,1334,3.637,1335,3.637,1336,3.637,1337,3.637]],["title/classes/TokenPayloadDto.html",[25,0.259,387,3.011]],["body/classes/TokenPayloadDto.html",[3,0.127,4,0.072,5,0.113,7,0.44,10,1.098,11,0.01,13,0.699,16,0.519,17,0.155,24,0.127,25,0.353,30,0.008,31,0.008,63,0.477,89,1.345,118,0.917,120,1.01,153,2.766,168,1.541,169,1.318,170,1.62,175,1.792,387,5.045,397,6.91,399,6.91,743,4.724,761,3.523,1007,4.724,1338,6.91,1339,5.892,1340,5.892]],["title/classes/UpdateArticleDto.html",[25,0.259,171,2.697]],["body/classes/UpdateArticleDto.html",[3,0.118,4,0.067,5,0.105,11,0.01,16,0.496,17,0.2,22,1.134,24,0.163,25,0.454,30,0.008,31,0.008,89,1.137,94,1.181,118,0.852,121,2.484,123,2.982,142,1.417,147,3.413,148,4.066,149,1.994,150,1.587,151,2.244,152,2.244,163,2.303,164,1.705,165,2.484,166,1.705,167,2.077,168,1.614,169,1.224,170,1.547,171,4.315,172,6.085,173,3.413,174,1.618,175,1.711,176,1.618]],["title/classes/UpdateCategoryDto.html",[25,0.259,453,2.697]],["body/classes/UpdateCategoryDto.html",[3,0.116,4,0.066,5,0.103,11,0.01,16,0.387,17,0.209,22,1.119,24,0.162,25,0.451,30,0.007,31,0.007,62,0.752,63,0.355,89,0.887,94,1.174,118,0.84,142,1.41,149,1.976,150,1.573,151,2.229,152,2.229,163,2.288,164,1.681,165,2.472,166,1.681,167,2.064,168,1.459,169,1.207,170,1.207,174,1.596,175,1.697,176,1.596,446,3.366,453,4.278,459,3.366,497,5.25,500,4.011,505,4.011,509,3.739,510,6.047]],["title/classes/UpdateCommentDto.html",[25,0.259,547,2.697]],["body/classes/UpdateCommentDto.html",[3,0.118,4,0.067,5,0.105,11,0.01,16,0.496,17,0.2,22,1.134,24,0.163,25,0.454,30,0.008,31,0.008,89,1.137,94,1.181,118,0.852,121,2.484,142,1.417,149,1.994,150,1.587,151,2.244,152,2.244,163,2.303,164,1.705,165,2.484,166,1.705,167,2.077,168,1.614,169,1.224,170,1.547,174,1.618,175,1.711,176,1.618,516,3.413,543,3.413,544,4.066,547,4.315,548,6.085,549,3.413]],["title/classes/UpdateCommonNameDto.html",[25,0.259,617,2.697]],["body/classes/UpdateCommonNameDto.html",[3,0.119,4,0.068,5,0.106,11,0.01,16,0.396,17,0.201,22,1.147,24,0.164,25,0.457,30,0.008,31,0.008,62,0.771,89,0.909,94,1.187,118,0.861,142,1.423,149,2.007,150,1.598,151,2.255,152,2.255,163,2.315,164,1.723,165,2.494,166,1.723,167,2.088,168,1.482,169,1.237,170,1.237,174,1.636,175,1.723,176,1.636,604,2.897,613,2.897,614,3.289,615,3.852,617,4.346,618,6.116,619,3.45]],["title/classes/UpdateManufacturerDto.html",[25,0.259,1025,2.697]],["body/classes/UpdateManufacturerDto.html",[3,0.12,4,0.068,5,0.107,11,0.01,16,0.399,17,0.201,22,1.153,24,0.165,25,0.458,30,0.008,31,0.008,62,0.776,89,0.914,94,1.19,118,0.866,142,1.426,149,2.015,150,1.604,151,2.261,152,2.261,163,2.32,164,1.733,165,2.499,166,1.733,167,2.093,168,1.487,169,1.244,170,1.244,174,1.645,175,1.729,176,1.645,1022,2.914,1023,4.134,1025,4.361,1026,6.132,1027,3.47]],["title/classes/UpdateReviewDto.html",[25,0.259,1106,2.697]],["body/classes/UpdateReviewDto.html",[3,0.118,4,0.067,5,0.105,11,0.01,16,0.496,17,0.2,22,1.134,24,0.163,25,0.454,30,0.008,31,0.008,89,1.137,94,1.181,118,0.852,121,2.484,123,2.982,142,1.417,149,1.994,150,1.587,151,2.244,152,2.244,163,2.303,164,1.705,165,2.484,166,1.705,167,2.077,168,1.614,169,1.224,170,1.547,174,1.618,175,1.711,176,1.618,1102,3.413,1103,4.066,1106,4.315,1107,6.085,1108,3.413]],["title/classes/UpdateSourceDto.html",[25,0.259,1186,2.697]],["body/classes/UpdateSourceDto.html",[3,0.117,4,0.067,5,0.104,11,0.01,16,0.494,17,0.199,22,1.128,24,0.163,25,0.453,30,0.007,31,0.007,89,1.243,94,1.178,118,0.847,142,1.415,149,1.987,150,1.581,151,2.238,152,2.238,163,2.297,164,1.695,165,2.479,166,1.695,167,2.072,168,1.61,169,1.217,170,1.542,174,1.609,175,1.706,176,1.609,714,4.044,715,3.789,716,3.394,1182,3.394,1183,4.044,1186,4.301,1187,6.07,1188,3.394]],["title/classes/UpdateSteroidDto.html",[25,0.259,1265,2.571]],["body/classes/UpdateSteroidDto.html",[3,0.094,4,0.053,5,0.083,11,0.01,16,0.486,17,0.207,22,0.902,24,0.157,25,0.457,30,0.006,31,0.006,62,0.829,63,0.503,89,1.197,94,1.056,118,0.677,142,1.357,149,1.954,150,1.365,151,2.005,152,2.005,160,2.979,163,2.058,164,1.355,165,2.271,166,1.355,167,1.856,168,1.442,169,0.973,170,1.331,174,1.286,175,1.677,176,1.286,394,1.911,426,4.721,603,3,613,4.226,614,2.586,624,2.279,634,2.586,647,2.859,722,2.586,761,2.893,793,3.029,957,3.854,1014,3,1022,4.226,1250,2.586,1251,3.029,1252,3.029,1257,4.229,1258,5.039,1259,3.233,1260,2.586,1261,4.422,1262,3.233,1263,4.422,1264,3.233,1265,3.537,1266,5.039,1267,2.713]],["title/classes/UpdateUserDto.html",[25,0.259,1341,3.011]],["body/classes/UpdateUserDto.html",[3,0.098,4,0.056,5,0.087,11,0.01,16,0.572,17,0.204,22,0.943,24,0.149,25,0.445,30,0.007,31,0.007,89,1.381,94,1.08,118,0.708,142,1.32,149,1.767,150,1.407,151,2.051,152,2.051,159,1.821,163,2.105,164,1.417,165,2.313,166,1.417,167,1.899,168,1.579,169,1.017,170,1.881,174,1.345,175,1.917,176,1.345,315,2.479,341,2.704,391,4.124,394,1.998,405,2.989,509,3.342,728,3.167,729,3.167,730,3.167,731,3.167,733,3.167,734,2.989,735,3.167,736,3.167,737,3.167,757,3.167,758,3.645,759,3.645,761,3.611,763,3.645,797,5.17,1257,3.825,1341,4.27,1342,3.38,1343,5.564,1344,2.989]],["title/classes/User.html",[25,0.259,129,1.84]],["body/classes/User.html",[3,0.069,4,0.039,5,0.061,7,0.239,10,1.212,11,0.01,13,0.771,16,0.627,17,0.178,24,0.123,25,0.192,30,0.005,31,0.005,63,0.571,77,0.946,89,1.387,93,1.453,94,0.743,102,2.778,118,0.498,120,0.666,124,4.359,125,4.13,129,2.431,132,4.414,133,1.911,134,1.819,135,1.911,136,2.168,137,1.819,139,1.819,141,1.819,142,0.569,146,1.556,159,2.536,175,2.003,193,1.453,336,1.744,341,3.396,391,4.029,396,2.818,405,3.755,411,2.566,417,3.83,498,3.549,521,4.95,728,3.978,729,3.978,730,3.978,731,3.978,733,3.978,734,3.755,735,3.978,736,3.978,737,3.978,757,2.228,782,2.566,789,2.566,797,5.272,1345,2.378,1346,3.2,1347,3.2,1348,3.2,1349,3.2,1350,6.336,1351,3.2,1352,3.2,1353,3.2,1354,3.2,1355,3.2,1356,3.2,1357,3.2,1358,2.818,1359,2.566,1360,3.2,1361,2.378,1362,2.818,1363,3.2,1364,3.2,1365,4.776,1366,3.2,1367,3.2,1368,3.2]],["title/classes/UserDto.html",[25,0.259,315,2.357]],["body/classes/UserDto.html",[3,0.071,4,0.04,5,0.063,7,0.247,10,1.26,11,0.01,13,0.802,16,0.59,17,0.181,22,0.687,24,0.126,25,0.386,30,0.005,31,0.005,63,0.547,64,1.212,89,1.402,94,0.763,118,0.515,120,0.683,142,1.145,149,2.074,150,1.337,151,1.905,152,1.905,153,2.737,156,1.734,157,2.405,158,1.805,159,2.579,160,2.152,161,1.805,162,1.805,163,1.769,164,1.032,165,1.816,166,1.032,167,1.596,168,1.37,169,0.741,170,1.747,174,0.979,175,1.892,176,0.979,315,2.67,341,3.466,391,3.83,394,1.455,405,3.831,507,2.916,509,2.67,728,4.059,729,4.059,730,4.059,731,4.059,733,4.059,734,3.831,735,4.059,736,4.059,737,4.059,741,2.916,743,4.675,747,2.916,751,2.916,757,2.305,758,2.912,759,2.912,761,3.133,763,2.912,797,5.325,1257,3.636,1341,2.305,1342,2.461,1343,3.928,1344,2.176,1369,3.311,1370,3.311,1371,3.311,1372,3.311,1373,3.311,1374,3.311,1375,3.311,1376,3.311,1377,3.311,1378,3.311,1379,3.311]],["title/classes/UserLoginDto.html",[25,0.259,306,3.011]],["body/classes/UserLoginDto.html",[3,0.128,4,0.072,5,0.114,7,0.442,10,1.102,11,0.01,13,0.701,16,0.588,17,0.156,24,0.128,25,0.355,27,3.143,30,0.008,31,0.008,63,0.479,118,0.923,120,1.014,168,1.673,169,1.325,306,5.063,734,5.17,762,5.17,1380,6.928,1381,5.219,1382,7.868,1383,5.927,1384,5.927]],["title/classes/UserQueryDto.html",[25,0.259,1344,2.842]],["body/classes/UserQueryDto.html",[3,0.092,4,0.052,5,0.082,7,0.32,10,0.893,11,0.01,13,0.569,16,0.562,17,0.2,22,0.89,24,0.145,25,0.434,30,0.006,31,0.006,63,0.388,64,1.793,89,1.365,94,1.048,118,0.669,120,0.822,142,1.289,149,1.699,150,0.985,151,1.991,152,1.991,159,1.719,163,2.044,164,1.338,165,2.259,166,1.338,167,1.844,168,1.542,169,0.96,170,1.858,174,1.991,175,1.989,176,1.991,177,3.214,315,2.341,341,2.553,391,4.003,394,1.887,405,2.822,509,3.214,728,2.99,729,2.99,730,2.99,731,2.99,733,2.99,734,2.822,735,2.99,736,2.99,737,2.99,757,2.99,758,3.505,759,3.505,761,3.525,763,3.505,797,5.048,1257,3.678,1341,2.99,1342,3.191,1343,5.401,1344,3.875,1385,4.295,1386,4.295]],["title/controllers/UsersController.html",[0,1.542,1387,3.214]],["body/controllers/UsersController.html",[0,2.298,2,2.298,3,0.139,4,0.079,5,0.124,11,0.01,17,0.201,18,1.336,24,0.139,25,0.386,26,3.512,30,0.008,31,0.008,182,3.512,324,4.637,1387,5.684,1388,5.674,1389,6.443,1390,5.674,1391,6.443]],["title/modules/UsersModule.html",[32,1.383,50,2.842]],["body/modules/UsersModule.html",[2,2.451,3,0.117,4,0.066,5,0.104,11,0.01,17,0.216,18,1.122,24,0.117,25,0.324,30,0.007,31,0.007,32,2.415,34,2.378,35,2.378,36,2.541,37,2.541,38,2.457,39,3.317,40,3.545,50,5.593,52,3.226,53,2.541,54,2.541,56,2.632,62,0.754,76,2.95,77,1.6,129,2.303,133,2.166,269,3.076,324,5.038,539,3.768,1361,5.107,1387,5.611,1390,4.766,1392,4.766,1393,4.766,1394,4.766,1395,5.412,1396,4.766,1397,5.412]],["title/injectables/UsersService.html",[104,1.246,324,2.458]],["body/injectables/UsersService.html",[3,0.092,4,0.052,5,0.082,7,0.32,8,1.886,11,0.01,13,0.65,15,1.886,17,0.216,18,0.89,24,0.092,25,0.353,27,1.575,28,2.046,30,0.006,31,0.006,61,2.098,62,0.939,63,0.443,64,1.666,77,1.27,93,3.564,94,1.048,104,1.699,105,1.887,107,2.291,129,2.866,135,1.719,184,2.433,201,2.736,226,2.249,235,1.828,274,3.214,276,3.951,284,2.341,288,3.214,295,2.441,313,5.29,315,2.341,324,3.352,330,3.782,336,3.214,343,4.522,393,3.191,394,1.887,410,4.689,414,5.193,415,3.782,775,5.931,776,3.444,777,3.444,778,3.782,782,4.729,785,3.782,788,3.782,789,4.729,790,5.193,791,5.193,792,5.193,802,3.782,1344,4.764,1359,3.444,1396,3.782,1398,3.782,1399,4.295,1400,4.295,1401,5.897,1402,5.897,1403,4.295,1404,4.295,1405,4.295,1406,4.295,1407,4.295,1408,4.295,1409,4.295,1410,4.295,1411,4.295]],["title/injectables/ValidatorService.html",[104,1.246,1165,2.842]],["body/injectables/ValidatorService.html",[3,0.129,4,0.073,5,0.115,7,0.447,8,2.343,11,0.01,13,0.578,15,1.919,16,0.567,17,0.158,18,1.243,24,0.129,25,0.359,28,2.081,30,0.008,31,0.008,61,1.868,62,0.836,63,0.395,64,1.484,94,0.934,104,2.111,105,2.635,853,6.965,862,5.1,980,5.282,1165,4.814,1412,5.282,1413,7.326,1414,7.326,1415,5.998,1416,5.998,1417,5.998,1418,5.998,1419,5.998]],["title/modules/_SteroidsModule.html",[32,1.383,51,3.011]],["body/modules/_SteroidsModule.html",[3,0.112,4,0.064,5,0.1,11,0.01,17,0.206,18,1.078,24,0.112,25,0.311,30,0.007,31,0.007,32,2.37,34,2.285,35,2.285,36,2.442,37,2.442,38,2.361,39,2.285,40,3.479,51,6.166,52,3.145,53,2.442,54,2.442,56,3.257,605,2.956,624,2.724,662,6.137,1032,4.171,1065,6.137,1316,6.137,1420,4.58,1421,4.58,1422,4.58,1423,5.201,1424,5.201,1425,5.201]],["title/coverage.html",[1426,4.752]],["body/coverage.html",[0,2.3,1,1.156,4,0.019,5,0.03,6,1.37,11,0.01,19,1.023,25,0.515,30,0.003,31,0.003,38,0.706,39,0.684,63,0.102,104,2.028,106,1.37,117,0.971,119,2.607,127,3.108,129,0.662,136,0.706,143,1.156,146,4.197,147,0.971,148,2.607,149,0.448,167,0.426,168,0.331,171,0.971,173,0.971,180,1.156,181,1.37,190,0.757,231,1.023,271,1.37,272,0.815,296,0.848,300,1.156,301,1.37,306,1.083,308,1.156,313,1.083,315,0.848,324,0.884,326,1.023,343,0.971,352,1.083,374,1.37,387,1.083,395,1.37,416,1.37,422,1.37,432,1.156,433,1.37,436,1.083,438,0.971,446,0.971,453,0.971,456,1.023,459,0.971,478,1.156,482,1.37,493,6.77,495,1.985,505,2.607,509,0.848,513,1.023,514,2.442,529,0.884,534,0.925,540,1.156,543,0.971,544,2.607,547,0.971,549,0.971,552,1.156,553,1.37,556,1.083,573,0.971,597,1.37,603,0.785,604,3.157,605,2.662,606,2.607,610,1.156,613,0.815,614,2.085,615,2.896,617,0.971,619,0.971,622,1.156,623,1.37,624,0.815,627,1.083,644,1.023,669,1.37,680,1.37,681,1.37,685,2.734,690,1.37,691,1.37,694,1.37,695,1.37,699,1.37,702,1.083,703,1.37,704,1.37,706,1.083,707,1.37,708,1.37,711,1.083,712,1.37,713,1.37,719,1.083,720,1.37,721,1.37,726,1.37,727,1.37,758,0.925,759,0.925,760,1.083,761,0.757,762,1.023,763,0.925,764,1.083,765,1.37,776,1.248,777,2.141,809,1.248,810,1.37,811,1.37,817,1.248,818,1.248,819,1.37,851,1.023,852,1.37,857,2.452,858,1.248,860,1.37,863,1.023,864,5.519,883,1.156,884,1.156,886,1.156,887,1.156,888,1.156,889,1.156,890,1.156,892,1.156,893,1.156,894,1.156,895,1.156,897,1.156,900,1.083,902,1.083,937,1.156,938,1.156,939,1.156,940,1.156,942,1.156,957,0.884,964,1.156,966,1.156,967,1.156,968,1.156,971,1.156,972,1.156,973,1.156,974,1.156,975,1.248,976,1.37,983,1.37,1006,1.37,1007,2.141,1014,0.785,1015,2.607,1019,1.156,1022,0.815,1023,2.607,1025,0.971,1027,0.971,1030,1.156,1031,1.37,1049,1.023,1072,1.37,1084,1.248,1085,1.37,1086,1.37,1089,2.607,1099,1.156,1102,0.971,1103,2.607,1106,0.971,1108,0.971,1111,1.156,1112,1.37,1131,1.023,1155,1.37,1165,1.023,1166,1.248,1173,2.607,1179,1.156,1182,0.971,1183,2.607,1186,0.971,1188,0.971,1191,1.156,1192,1.37,1211,1.023,1234,1.37,1240,2.607,1247,1.156,1250,0.925,1251,2.896,1260,0.925,1265,0.925,1267,0.971,1280,1.156,1281,1.37,1299,1.023,1324,1.37,1330,1.248,1338,1.37,1341,1.083,1342,2.607,1344,1.023,1345,1.985,1358,1.37,1361,1.156,1380,1.37,1381,1.37,1387,1.156,1388,1.37,1398,1.37,1412,1.37,1426,1.248,1427,1.556,1428,1.556,1429,1.556,1430,6.029,1431,7.774,1432,5.111,1433,5.111,1434,8.85,1435,5.111,1436,1.556,1437,1.556,1438,1.556,1439,1.556,1440,4.16,1441,1.556,1442,1.556,1443,1.556,1444,1.556,1445,5.769,1446,1.556,1447,1.556,1448,1.556,1449,1.556,1450,1.556,1451,1.556,1452,4.683,1453,4.683,1454,1.556,1455,1.556,1456,2.671,1457,1.556,1458,1.556,1459,2.671,1460,4.16,1461,1.556,1462,4.16,1463,1.556,1464,1.556,1465,1.556,1466,7.349,1467,6.916,1468,4.16,1469,1.556,1470,1.37,1471,1.37,1472,1.556,1473,1.556,1474,1.556,1475,1.556,1476,1.556]],["title/dependencies.html",[35,2.288,1477,3.17]],["body/dependencies.html",[11,0.01,18,1.197,22,1.197,25,0.428,30,0.008,31,0.008,35,2.536,74,3.793,77,1.707,135,2.31,239,3.023,355,4.629,363,4.629,394,2.536,429,4.019,994,6.847,1170,5.083,1478,7.776,1479,5.772,1480,5.772,1481,5.772,1482,5.772,1483,7.155,1484,5.772,1485,5.772,1486,5.772,1487,5.772,1488,5.772,1489,5.772,1490,5.772,1491,5.772,1492,5.772,1493,5.772,1494,5.772,1495,5.772,1496,5.772,1497,5.772,1498,5.772,1499,5.772,1500,5.772,1501,5.772,1502,5.772]],["title/miscellaneous/enumerations.html",[1503,2.366,1504,4.586]],["body/miscellaneous/enumerations.html",[4,0.088,7,0.437,11,0.01,30,0.008,31,0.008,129,3.072,389,5.789,391,4.291,497,5.026,514,4.078,526,6.357,529,4.104,533,6.357,534,4.291,1503,3.849,1504,5.158,1505,5.857,1506,4.697,1507,5.857,1508,5.857,1509,5.857,1510,7.811,1511,5.857,1512,7.22,1513,7.22,1514,7.22,1515,5.857,1516,7.22,1517,7.22]],["title/index.html",[7,0.269,1518,3.6,1519,3.6]],["body/index.html",[4,0.065,9,5.436,11,0.01,30,0.007,31,0.007,194,2.774,783,4.665,946,3.937,1426,4.248,1520,5.298,1521,5.298,1522,6.778,1523,5.298,1524,5.298,1525,5.298,1526,5.298,1527,5.298,1528,5.298,1529,7.475,1530,5.298,1531,5.298,1532,7.475,1533,8.47,1534,5.298,1535,5.298,1536,5.298,1537,8.331,1538,5.298,1539,5.298,1540,6.778,1541,5.298,1542,5.298,1543,5.298,1544,5.298,1545,6.778,1546,5.298,1547,5.298,1548,5.298,1549,6.778,1550,6.778,1551,5.298,1552,4.665,1553,5.298,1554,5.298,1555,5.298,1556,4.665,1557,5.298,1558,5.298,1559,5.298,1560,5.298,1561,5.298,1562,5.298,1563,5.298,1564,5.298,1565,5.298,1566,5.298,1567,4.665,1568,5.298,1569,5.298,1570,5.298,1571,5.298,1572,5.298,1573,5.298,1574,4.665]],["title/modules.html",[34,2.603]],["body/modules.html",[11,0.008,30,0.008,31,0.008,33,4.265,34,2.521,44,3.996,45,3.996,46,3.996,47,3.771,48,3.996,49,3.996,50,3.771,51,3.996,662,3.996,1065,3.996,1161,4.265,1316,3.996,1556,7.896,1575,8.968,1576,8.968,1577,8.968]],["title/overview.html",[1578,5.218]],["body/overview.html",[2,1.304,11,0.01,19,4.056,30,0.006,31,0.006,32,1.17,33,6.482,34,1.607,35,1.607,36,1.717,37,1.717,38,1.66,39,1.607,40,1.717,41,3.22,42,3.22,43,3.22,44,4.983,45,5.66,46,4.983,47,5.049,48,4.983,49,4.983,50,5.049,51,5.791,52,2.473,53,1.717,54,1.717,105,1.607,118,0.569,231,4.056,264,3.22,265,3.22,324,4.367,326,5.049,348,3.22,350,3.22,351,3.22,352,4.298,456,4.056,475,3.22,476,3.22,573,4.791,590,3.22,591,3.22,592,3.22,644,4.056,662,5.576,663,3.22,664,3.22,851,5.049,859,2.403,1049,4.056,1065,5.576,1066,3.22,1067,3.22,1131,4.056,1149,3.22,1150,3.22,1161,5.843,1162,3.22,1163,3.22,1164,3.22,1165,5.049,1211,4.056,1229,3.22,1230,3.22,1299,4.056,1316,5.731,1317,3.22,1318,3.22,1392,3.22,1393,3.22,1394,3.22,1420,3.22,1421,3.22,1422,3.22,1578,3.22,1579,3.657,1580,3.657,1581,3.657,1582,3.657,1583,3.657]],["title/properties.html",[120,0.726,1477,3.17]],["body/properties.html",[11,0.01,30,0.009,31,0.009,120,0.95,194,3.57,1567,6.003,1574,6.003,1584,6.817,1585,6.817,1586,6.817]],["title/miscellaneous/typealiases.html",[1503,2.366,1587,5.208]],["body/miscellaneous/typealiases.html",[7,0.403,11,0.007,30,0.007,31,0.007,63,0.522,80,6.041,107,3.083,111,6.041,112,5.098,119,4.011,138,5.501,360,4.328,381,6.047,488,5.501,495,4.011,514,3.758,532,5.501,604,2.827,605,3.068,606,5.098,609,5.501,818,4.328,863,4.955,864,3.758,903,5.098,904,5.098,905,5.098,1015,4.011,1018,5.501,1089,4.011,1098,5.501,1173,4.011,1178,5.501,1240,4.011,1246,5.501,1345,4.011,1359,5.501,1503,3.547,1506,4.328,1588,5.398,1589,4.753,1590,4.753,1591,4.753,1592,7.935,1593,7.541,1594,7.541,1595,7.935,1596,4.753,1597,4.753,1598,4.753,1599,4.753,1600,4.753,1601,5.398,1602,5.398,1603,5.398]],["title/miscellaneous/variables.html",[1503,2.366,1604,4.586]],["body/miscellaneous/variables.html",[7,0.277,11,0.01,30,0.006,31,0.006,39,2.339,62,0.868,63,0.35,89,0.874,119,2.758,127,4.819,140,4.587,143,3.956,144,3.268,150,1.718,417,6.952,478,3.956,495,2.758,503,3.268,514,2.584,516,2.315,540,3.956,541,3.268,554,3.268,603,3.63,604,1.944,605,2.11,606,4.625,610,3.956,611,3.268,634,2.206,653,2.976,683,3.77,722,2.206,851,2.439,982,3.268,1014,3.63,1015,2.758,1019,3.956,1020,3.268,1032,2.976,1089,2.758,1099,3.956,1100,3.268,1165,2.439,1166,2.976,1168,3.268,1173,2.758,1179,3.956,1180,3.268,1240,2.758,1247,3.956,1248,3.268,1252,4.734,1330,4.269,1345,2.758,1361,3.956,1362,3.268,1470,3.268,1471,3.268,1503,2.439,1506,4.269,1510,7.634,1552,3.268,1589,4.688,1590,3.268,1591,4.688,1596,4.688,1597,4.688,1598,4.688,1599,4.688,1600,3.268,1604,3.268,1605,3.712,1606,3.712,1607,6.224,1608,6.224,1609,6.224,1610,5.323,1611,5.323,1612,5.323,1613,5.323,1614,3.712,1615,3.712,1616,6.8]]],"invertedIndex":[["",{"_index":11,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/Article.html":{},"classes/ArticleDto.html":{},"classes/ArticleQueryDto.html":{},"controllers/ArticlesController.html":{},"modules/ArticlesModule.html":{},"injectables/ArticlesService.html":{},"controllers/AuthController.html":{},"modules/AuthenticationModule.html":{},"injectables/AuthenticationService.html":{},"classes/Base.html":{},"classes/BaseDto.html":{},"controllers/CategoriesController.html":{},"modules/CategoriesModule.html":{},"injectables/CategoriesService.html":{},"classes/Category.html":{},"classes/CategoryDto.html":{},"classes/CategoryQueryDto.html":{},"classes/Comment.html":{},"classes/CommentDto.html":{},"classes/CommentQueryDto.html":{},"controllers/CommentsController.html":{},"modules/CommentsModule.html":{},"injectables/CommentsService.html":{},"classes/CommonName.html":{},"classes/CommonNameDto.html":{},"classes/CommonNameQueryDto.html":{},"controllers/CommonNamesController.html":{},"modules/CommonNamesModule.html":{},"injectables/CommonNamesService.html":{},"classes/CreateArticleDto.html":{},"classes/CreateCategoryDto.html":{},"classes/CreateCommentDto.html":{},"classes/CreateCommonNameDto.html":{},"classes/CreateManufacturerDto.html":{},"classes/CreateReviewDto.html":{},"classes/CreateSourceDto.html":{},"classes/CreateSteroidDto.html":{},"classes/CreateUserDto.html":{},"injectables/CrudService.html":{},"classes/FileNotImageException.html":{},"classes/GeneratorProvider.html":{},"injectables/GeneratorService.html":{},"interfaces/IApiFile.html":{},"interfaces/IFieldOptions.html":{},"interfaces/IFile.html":{},"interfaces/INumberFieldOptions.html":{},"interfaces/IStringFieldOptions.html":{},"injectables/JwtStrategy.html":{},"classes/LoginPayloadDto.html":{},"classes/Manufacturer.html":{},"classes/ManufacturerDto.html":{},"classes/ManufacturerQueryDto.html":{},"controllers/ManufacturersController.html":{},"modules/ManufacturersModule.html":{},"injectables/ManufacturersService.html":{},"classes/PaginationQueryDto.html":{},"classes/Review.html":{},"classes/ReviewDto.html":{},"classes/ReviewQueryDto.html":{},"controllers/ReviewsController.html":{},"modules/ReviewsModule.html":{},"injectables/ReviewsService.html":{},"modules/SharedModule.html":{},"classes/Source.html":{},"classes/SourceDto.html":{},"classes/SourceQueryDto.html":{},"controllers/SourcesController.html":{},"modules/SourcesModule.html":{},"injectables/SourcesService.html":{},"classes/Steroid.html":{},"classes/SteroidCommentsCountDto.html":{},"classes/SteroidDto.html":{},"classes/SteroidQueryDto.html":{},"controllers/SteroidsController.html":{},"modules/SteroidsModule.html":{},"injectables/SteroidsService.html":{},"classes/TokenPayloadDto.html":{},"classes/UpdateArticleDto.html":{},"classes/UpdateCategoryDto.html":{},"classes/UpdateCommentDto.html":{},"classes/UpdateCommonNameDto.html":{},"classes/UpdateManufacturerDto.html":{},"classes/UpdateReviewDto.html":{},"classes/UpdateSourceDto.html":{},"classes/UpdateSteroidDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"classes/UserDto.html":{},"classes/UserLoginDto.html":{},"classes/UserQueryDto.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"injectables/ValidatorService.html":{},"modules/_SteroidsModule.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":493,"title":{},"body":{"injectables/CategoriesService.html":{},"injectables/CommonNamesService.html":{},"injectables/ManufacturersService.html":{},"coverage.html":{}}}],["0.0.1",{"_index":1585,"title":{},"body":{"properties.html":{}}}],["0.1.13",{"_index":1500,"title":{},"body":{"dependencies.html":{}}}],["0.14.0",{"_index":1490,"title":{},"body":{"dependencies.html":{}}}],["0.5.1",{"_index":1489,"title":{},"body":{"dependencies.html":{}}}],["0.6.0",{"_index":1492,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":1434,"title":{},"body":{"coverage.html":{}}}],["0/10",{"_index":1468,"title":{},"body":{"coverage.html":{}}}],["0/12",{"_index":1474,"title":{},"body":{"coverage.html":{}}}],["0/13",{"_index":1472,"title":{},"body":{"coverage.html":{}}}],["0/15",{"_index":1473,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":1453,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":1431,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":1430,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":1433,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":1467,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":1456,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":1469,"title":{},"body":{"coverage.html":{}}}],["0/9",{"_index":1432,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":683,"title":{},"body":{"classes/CreateArticleDto.html":{},"classes/CreateCategoryDto.html":{},"classes/CreateCommentDto.html":{},"classes/CreateCommonNameDto.html":{},"classes/CreateManufacturerDto.html":{},"classes/CreateReviewDto.html":{},"classes/CreateSourceDto.html":{},"interfaces/IFieldOptions.html":{},"interfaces/INumberFieldOptions.html":{},"interfaces/IStringFieldOptions.html":{},"miscellaneous/variables.html":{}}}],["1.0.0",{"_index":1495,"title":{},"body":{"dependencies.html":{}}}],["1/1",{"_index":1460,"title":{},"body":{"coverage.html":{}}}],["1/8",{"_index":1455,"title":{},"body":{"coverage.html":{}}}],["10.0.0",{"_index":1478,"title":{},"body":{"dependencies.html":{}}}],["10.0.2",{"_index":1483,"title":{},"body":{"dependencies.html":{}}}],["10.2.0",{"_index":1482,"title":{},"body":{"dependencies.html":{}}}],["10.2.6",{"_index":1481,"title":{},"body":{"dependencies.html":{}}}],["100",{"_index":685,"title":{},"body":{"classes/CreateArticleDto.html":{},"classes/CreateCategoryDto.html":{},"classes/CreateCommentDto.html":{},"classes/CreateReviewDto.html":{},"classes/CreateSourceDto.html":{},"coverage.html":{}}}],["11",{"_index":1580,"title":{},"body":{"overview.html":{}}}],["12",{"_index":1454,"title":{},"body":{"coverage.html":{}}}],["13",{"_index":1579,"title":{},"body":{"overview.html":{}}}],["15",{"_index":1581,"title":{},"body":{"overview.html":{}}}],["200",{"_index":700,"title":{},"body":{"classes/CreateCommonNameDto.html":{}}}],["3.1.1",{"_index":1479,"title":{},"body":{"dependencies.html":{}}}],["4.0.1",{"_index":1493,"title":{},"body":{"dependencies.html":{}}}],["5",{"_index":1583,"title":{},"body":{"overview.html":{}}}],["5.1.1",{"_index":1488,"title":{},"body":{"dependencies.html":{}}}],["50",{"_index":687,"title":{},"body":{"classes/CreateArticleDto.html":{},"classes/CreateCategoryDto.html":{},"classes/CreateManufacturerDto.html":{},"classes/CreateReviewDto.html":{}}}],["54",{"_index":1582,"title":{},"body":{"overview.html":{}}}],["6",{"_index":936,"title":{},"body":{"interfaces/IFieldOptions.html":{},"interfaces/INumberFieldOptions.html":{},"interfaces/IStringFieldOptions.html":{}}}],["60000",{"_index":398,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["7.1.16",{"_index":1486,"title":{},"body":{"dependencies.html":{}}}],["7.8.1",{"_index":1502,"title":{},"body":{"dependencies.html":{}}}],["8.0.3",{"_index":1491,"title":{},"body":{"dependencies.html":{}}}],["8.11.3",{"_index":1497,"title":{},"body":{"dependencies.html":{}}}],["_id",{"_index":150,"title":{},"body":{"classes/ArticleDto.html":{},"classes/ArticleQueryDto.html":{},"injectables/ArticlesService.html":{},"classes/BaseDto.html":{},"injectables/CategoriesService.html":{},"classes/CategoryDto.html":{},"classes/CategoryQueryDto.html":{},"classes/CommentDto.html":{},"classes/CommentQueryDto.html":{},"injectables/CommentsService.html":{},"classes/CommonNameDto.html":{},"classes/CommonNameQueryDto.html":{},"injectables/CommonNamesService.html":{},"injectables/CrudService.html":{},"injectables/JwtStrategy.html":{},"classes/ManufacturerDto.html":{},"classes/ManufacturerQueryDto.html":{},"injectables/ManufacturersService.html":{},"classes/ReviewDto.html":{},"classes/ReviewQueryDto.html":{},"injectables/ReviewsService.html":{},"classes/SourceDto.html":{},"classes/SourceQueryDto.html":{},"injectables/SourcesService.html":{},"classes/SteroidCommentsCountDto.html":{},"classes/SteroidDto.html":{},"classes/SteroidQueryDto.html":{},"injectables/SteroidsService.html":{},"classes/UpdateArticleDto.html":{},"classes/UpdateCategoryDto.html":{},"classes/UpdateCommentDto.html":{},"classes/UpdateCommonNameDto.html":{},"classes/UpdateManufacturerDto.html":{},"classes/UpdateReviewDto.html":{},"classes/UpdateSourceDto.html":{},"classes/UpdateSteroidDto.html":{},"classes/UpdateUserDto.html":{},"classes/UserDto.html":{},"classes/UserQueryDto.html":{},"miscellaneous/variables.html":{}}}],["_steroidsmodule",{"_index":51,"title":{"modules/_SteroidsModule.html":{}},"body":{"modules/AppModule.html":{},"modules/_SteroidsModule.html":{},"modules.html":{},"overview.html":{}}}],["aboutme",{"_index":728,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"classes/UserDto.html":{},"classes/UserQueryDto.html":{}}}],["abstract",{"_index":420,"title":{},"body":{"classes/Base.html":{},"injectables/CrudService.html":{}}}],["access",{"_index":309,"title":{},"body":{"controllers/AuthController.html":{}}}],["access_token",{"_index":1516,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["accesstoken",{"_index":399,"title":{},"body":{"injectables/AuthenticationService.html":{},"classes/TokenPayloadDto.html":{}}}],["addfields",{"_index":1614,"title":{},"body":{"miscellaneous/variables.html":{}}}],["admin",{"_index":1513,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["aggregations",{"_index":1331,"title":{},"body":{"injectables/SteroidsService.html":{}}}],["aggregations/index.ts",{"_index":1471,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["algorithm",{"_index":370,"title":{},"body":{"modules/AuthenticationModule.html":{}}}],["algorithms",{"_index":373,"title":{},"body":{"modules/AuthenticationModule.html":{}}}],["aliases",{"_index":1588,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["amazing",{"_index":1557,"title":{},"body":{"index.html":{}}}],["any,@typescript",{"_index":953,"title":{},"body":{"interfaces/IFieldOptions.html":{},"interfaces/INumberFieldOptions.html":{},"interfaces/IStringFieldOptions.html":{}}}],["apibearerauth",{"_index":646,"title":{},"body":{"controllers/CommonNamesController.html":{},"controllers/ManufacturersController.html":{}}}],["apibooleanproperty",{"_index":1436,"title":{},"body":{"coverage.html":{}}}],["apibooleanpropertyoptional",{"_index":1437,"title":{},"body":{"coverage.html":{}}}],["apienumproperty",{"_index":883,"title":{},"body":{"interfaces/IFieldOptions.html":{},"interfaces/INumberFieldOptions.html":{},"interfaces/IStringFieldOptions.html":{},"coverage.html":{}}}],["apienumproperty(getenum",{"_index":956,"title":{},"body":{"interfaces/IFieldOptions.html":{},"interfaces/INumberFieldOptions.html":{},"interfaces/IStringFieldOptions.html":{}}}],["apienumpropertyoptional",{"_index":1438,"title":{},"body":{"coverage.html":{}}}],["apifile",{"_index":1441,"title":{},"body":{"coverage.html":{}}}],["apifiledecorator",{"_index":1442,"title":{},"body":{"coverage.html":{}}}],["apiokresponse",{"_index":319,"title":{},"body":{"controllers/AuthController.html":{}}}],["apioperation",{"_index":233,"title":{},"body":{"controllers/ArticlesController.html":{},"controllers/CategoriesController.html":{},"controllers/CommentsController.html":{},"controllers/CommonNamesController.html":{},"controllers/ManufacturersController.html":{},"controllers/ReviewsController.html":{},"controllers/SourcesController.html":{},"controllers/SteroidsController.html":{}}}],["apioperation({summary",{"_index":191,"title":{},"body":{"controllers/ArticlesController.html":{},"controllers/CategoriesController.html":{},"controllers/CommentsController.html":{},"controllers/CommonNamesController.html":{},"controllers/ManufacturersController.html":{},"controllers/ReviewsController.html":{},"controllers/SourcesController.html":{},"controllers/SteroidsController.html":{}}}],["apiproperty",{"_index":160,"title":{},"body":{"classes/ArticleDto.html":{},"classes/BaseDto.html":{},"classes/CategoryDto.html":{},"classes/CommentDto.html":{},"classes/CommonNameDto.html":{},"interfaces/IFieldOptions.html":{},"interfaces/INumberFieldOptions.html":{},"interfaces/IStringFieldOptions.html":{},"classes/ManufacturerDto.html":{},"classes/ReviewDto.html":{},"classes/SourceDto.html":{},"classes/SteroidCommentsCountDto.html":{},"classes/SteroidDto.html":{},"classes/SteroidQueryDto.html":{},"classes/UpdateSteroidDto.html":{},"classes/UserDto.html":{}}}],["apiproperty()@isuuid()@isoptional()@transform(value",{"_index":156,"title":{},"body":{"classes/ArticleDto.html":{},"classes/BaseDto.html":{},"classes/CategoryDto.html":{},"classes/CommentDto.html":{},"classes/CommonNameDto.html":{},"classes/ManufacturerDto.html":{},"classes/ReviewDto.html":{},"classes/SourceDto.html":{},"classes/SteroidCommentsCountDto.html":{},"classes/SteroidDto.html":{},"classes/UserDto.html":{}}}],["apipropertyoptional",{"_index":163,"title":{},"body":{"classes/ArticleDto.html":{},"classes/ArticleQueryDto.html":{},"classes/CategoryDto.html":{},"classes/CategoryQueryDto.html":{},"classes/CommentDto.html":{},"classes/CommentQueryDto.html":{},"classes/CommonNameDto.html":{},"classes/CommonNameQueryDto.html":{},"classes/ManufacturerDto.html":{},"classes/ManufacturerQueryDto.html":{},"classes/PaginationQueryDto.html":{},"classes/ReviewDto.html":{},"classes/ReviewQueryDto.html":{},"classes/SourceDto.html":{},"classes/SourceQueryDto.html":{},"classes/SteroidCommentsCountDto.html":{},"classes/SteroidDto.html":{},"classes/SteroidQueryDto.html":{},"classes/UpdateArticleDto.html":{},"classes/UpdateCategoryDto.html":{},"classes/UpdateCommentDto.html":{},"classes/UpdateCommonNameDto.html":{},"classes/UpdateManufacturerDto.html":{},"classes/UpdateReviewDto.html":{},"classes/UpdateSourceDto.html":{},"classes/UpdateSteroidDto.html":{},"classes/UpdateUserDto.html":{},"classes/UserDto.html":{},"classes/UserQueryDto.html":{}}}],["apipropertyoptional()@numberfieldoptional",{"_index":177,"title":{},"body":{"classes/ArticleQueryDto.html":{},"classes/CategoryQueryDto.html":{},"classes/CommentQueryDto.html":{},"classes/CommonNameQueryDto.html":{},"classes/ManufacturerQueryDto.html":{},"classes/PaginationQueryDto.html":{},"classes/ReviewQueryDto.html":{},"classes/SourceQueryDto.html":{},"classes/SteroidQueryDto.html":{},"classes/UserQueryDto.html":{}}}],["apipropertyoptions",{"_index":868,"title":{},"body":{"interfaces/IFieldOptions.html":{},"interfaces/INumberFieldOptions.html":{},"interfaces/IStringFieldOptions.html":{}}}],["apiresponse",{"_index":234,"title":{},"body":{"controllers/ArticlesController.html":{},"controllers/CategoriesController.html":{},"controllers/CommentsController.html":{},"controllers/CommonNamesController.html":{},"controllers/ManufacturersController.html":{},"controllers/ReviewsController.html":{},"controllers/SourcesController.html":{},"controllers/SteroidsController.html":{}}}],["apitags",{"_index":21,"title":{},"body":{"controllers/AppController.html":{},"controllers/ArticlesController.html":{},"controllers/AuthController.html":{},"controllers/CategoriesController.html":{},"controllers/CommentsController.html":{},"controllers/CommonNamesController.html":{},"controllers/ManufacturersController.html":{},"controllers/ReviewsController.html":{},"controllers/SourcesController.html":{},"controllers/SteroidsController.html":{}}}],["apitags('articles",{"_index":241,"title":{},"body":{"controllers/ArticlesController.html":{}}}],["apitags('authentication",{"_index":332,"title":{},"body":{"controllers/AuthController.html":{}}}],["apitags('categories",{"_index":461,"title":{},"body":{"controllers/CategoriesController.html":{}}}],["apitags('comments",{"_index":577,"title":{},"body":{"controllers/CommentsController.html":{}}}],["apitags('common",{"_index":649,"title":{},"body":{"controllers/CommonNamesController.html":{}}}],["apitags('health",{"_index":23,"title":{},"body":{"controllers/AppController.html":{}}}],["apitags('manufacturers",{"_index":1053,"title":{},"body":{"controllers/ManufacturersController.html":{}}}],["apitags('reviews",{"_index":1135,"title":{},"body":{"controllers/ReviewsController.html":{}}}],["apitags('sources",{"_index":1215,"title":{},"body":{"controllers/SourcesController.html":{}}}],["apitags('steroids",{"_index":1303,"title":{},"body":{"controllers/SteroidsController.html":{}}}],["apiuuidproperty",{"_index":884,"title":{},"body":{"interfaces/IFieldOptions.html":{},"interfaces/INumberFieldOptions.html":{},"interfaces/IStringFieldOptions.html":{},"coverage.html":{}}}],["apiuuidpropertyoptional",{"_index":1439,"title":{},"body":{"coverage.html":{}}}],["app",{"_index":1535,"title":{},"body":{"index.html":{}}}],["app.controller",{"_index":71,"title":{},"body":{"modules/AppModule.html":{}}}],["app.service",{"_index":20,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{}}}],["appcontroller",{"_index":1,"title":{"controllers/AppController.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"coverage.html":{}}}],["applications",{"_index":1528,"title":{},"body":{"index.html":{}}}],["apply((req",{"_index":100,"title":{},"body":{"modules/AppModule.html":{}}}],["applydecorators",{"_index":867,"title":{},"body":{"interfaces/IFieldOptions.html":{},"interfaces/INumberFieldOptions.html":{},"interfaces/IStringFieldOptions.html":{}}}],["applydecorators(...decorators",{"_index":926,"title":{},"body":{"interfaces/IFieldOptions.html":{},"interfaces/INumberFieldOptions.html":{},"interfaces/IStringFieldOptions.html":{}}}],["appmodule",{"_index":33,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["appservice",{"_index":19,"title":{"injectables/AppService.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"coverage.html":{},"overview.html":{}}}],["args",{"_index":779,"title":{},"body":{"injectables/CrudService.html":{},"injectables/JwtStrategy.html":{}}}],["args.role",{"_index":1005,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["args.type",{"_index":1002,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["args.userid",{"_index":1004,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["article",{"_index":117,"title":{"classes/Article.html":{}},"body":{"classes/Article.html":{},"controllers/ArticlesController.html":{},"modules/ArticlesModule.html":{},"injectables/ArticlesService.html":{},"injectables/CrudService.html":{},"coverage.html":{}}}],["article'})@apiresponse({status",{"_index":192,"title":{},"body":{"controllers/ArticlesController.html":{}}}],["article.dto",{"_index":236,"title":{},"body":{"controllers/ArticlesController.html":{},"injectables/ArticlesService.html":{}}}],["article.dto.ts",{"_index":681,"title":{},"body":{"classes/CreateArticleDto.html":{},"coverage.html":{}}}],["article.dto.ts:5",{"_index":688,"title":{},"body":{"classes/CreateArticleDto.html":{}}}],["article.dto.ts:8",{"_index":686,"title":{},"body":{"classes/CreateArticleDto.html":{}}}],["article.name",{"_index":270,"title":{},"body":{"modules/ArticlesModule.html":{}}}],["article.schema",{"_index":267,"title":{},"body":{"modules/ArticlesModule.html":{},"injectables/ArticlesService.html":{}}}],["article.toobject",{"_index":804,"title":{},"body":{"injectables/CrudService.html":{}}}],["articledocument",{"_index":138,"title":{},"body":{"classes/Article.html":{},"injectables/ArticlesService.html":{},"miscellaneous/typealiases.html":{}}}],["articledto",{"_index":147,"title":{"classes/ArticleDto.html":{}},"body":{"classes/ArticleDto.html":{},"classes/ArticleQueryDto.html":{},"controllers/ArticlesController.html":{},"injectables/ArticlesService.html":{},"classes/UpdateArticleDto.html":{},"coverage.html":{}}}],["articledto})@apiresponse({status",{"_index":197,"title":{},"body":{"controllers/ArticlesController.html":{}}}],["articleid",{"_index":208,"title":{},"body":{"controllers/ArticlesController.html":{}}}],["articlemodel",{"_index":278,"title":{},"body":{"injectables/ArticlesService.html":{}}}],["articlequerydto",{"_index":173,"title":{"classes/ArticleQueryDto.html":{}},"body":{"classes/ArticleDto.html":{},"classes/ArticleQueryDto.html":{},"controllers/ArticlesController.html":{},"injectables/ArticlesService.html":{},"classes/UpdateArticleDto.html":{},"coverage.html":{}}}],["articles",{"_index":183,"title":{},"body":{"controllers/ArticlesController.html":{}}}],["articles'})@apiresponse({status",{"_index":211,"title":{},"body":{"controllers/ArticlesController.html":{}}}],["articles.controller",{"_index":268,"title":{},"body":{"modules/ArticlesModule.html":{}}}],["articles.service",{"_index":232,"title":{},"body":{"controllers/ArticlesController.html":{},"modules/ArticlesModule.html":{}}}],["articleschema",{"_index":143,"title":{},"body":{"classes/Article.html":{},"modules/ArticlesModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["articleschema.pre('save",{"_index":145,"title":{},"body":{"classes/Article.html":{}}}],["articlescontroller",{"_index":180,"title":{"controllers/ArticlesController.html":{}},"body":{"controllers/ArticlesController.html":{},"modules/ArticlesModule.html":{},"coverage.html":{}}}],["articleservice",{"_index":243,"title":{},"body":{"controllers/ArticlesController.html":{}}}],["articlesmodule",{"_index":44,"title":{"modules/ArticlesModule.html":{}},"body":{"modules/AppModule.html":{},"modules/ArticlesModule.html":{},"modules.html":{},"overview.html":{}}}],["articlesservice",{"_index":231,"title":{"injectables/ArticlesService.html":{}},"body":{"controllers/ArticlesController.html":{},"modules/ArticlesModule.html":{},"injectables/ArticlesService.html":{},"coverage.html":{},"overview.html":{}}}],["async",{"_index":93,"title":{},"body":{"modules/AppModule.html":{},"injectables/ArticlesService.html":{},"controllers/AuthController.html":{},"injectables/AuthenticationService.html":{},"injectables/CategoriesService.html":{},"injectables/CommentsService.html":{},"injectables/CommonNamesService.html":{},"injectables/CrudService.html":{},"injectables/JwtStrategy.html":{},"injectables/ManufacturersService.html":{},"injectables/ReviewsService.html":{},"injectables/SourcesService.html":{},"injectables/SteroidsService.html":{},"classes/User.html":{},"injectables/UsersService.html":{}}}],["auth",{"_index":302,"title":{},"body":{"controllers/AuthController.html":{}}}],["authcontroller",{"_index":300,"title":{"controllers/AuthController.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthenticationModule.html":{},"coverage.html":{}}}],["authentication.controller",{"_index":359,"title":{},"body":{"modules/AuthenticationModule.html":{}}}],["authentication.service",{"_index":327,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthenticationModule.html":{}}}],["authenticationmodule",{"_index":45,"title":{"modules/AuthenticationModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthenticationModule.html":{},"modules.html":{},"overview.html":{}}}],["authenticationservice",{"_index":326,"title":{"injectables/AuthenticationService.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthenticationModule.html":{},"injectables/AuthenticationService.html":{},"coverage.html":{},"overview.html":{}}}],["authguard",{"_index":238,"title":{},"body":{"controllers/ArticlesController.html":{},"controllers/CategoriesController.html":{},"controllers/CommentsController.html":{},"controllers/CommonNamesController.html":{},"controllers/ManufacturersController.html":{},"controllers/ReviewsController.html":{},"controllers/SourcesController.html":{},"controllers/SteroidsController.html":{}}}],["author",{"_index":1567,"title":{},"body":{"index.html":{},"properties.html":{}}}],["autocreate",{"_index":141,"title":{},"body":{"classes/Article.html":{},"classes/Category.html":{},"classes/Comment.html":{},"classes/CommonName.html":{},"classes/Manufacturer.html":{},"classes/Review.html":{},"classes/Source.html":{},"classes/Steroid.html":{},"classes/User.html":{}}}],["avatar",{"_index":729,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"classes/UserDto.html":{},"classes/UserQueryDto.html":{}}}],["await",{"_index":336,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthenticationService.html":{},"injectables/CategoriesService.html":{},"injectables/CommonNamesService.html":{},"injectables/CrudService.html":{},"injectables/JwtStrategy.html":{},"injectables/ManufacturersService.html":{},"injectables/SteroidsService.html":{},"classes/User.html":{},"injectables/UsersService.html":{}}}],["backers",{"_index":1558,"title":{},"body":{"index.html":{}}}],["bad",{"_index":198,"title":{},"body":{"controllers/ArticlesController.html":{},"controllers/CategoriesController.html":{},"controllers/CommentsController.html":{},"controllers/CommonNamesController.html":{},"controllers/ManufacturersController.html":{},"controllers/ReviewsController.html":{},"controllers/SourcesController.html":{},"controllers/SteroidsController.html":{}}}],["badrequestexception",{"_index":812,"title":{},"body":{"classes/FileNotImageException.html":{}}}],["base",{"_index":136,"title":{"classes/Base.html":{}},"body":{"classes/Article.html":{},"classes/Base.html":{},"injectables/CategoriesService.html":{},"classes/Category.html":{},"classes/Comment.html":{},"classes/CommonName.html":{},"injectables/CommonNamesService.html":{},"classes/Manufacturer.html":{},"injectables/ManufacturersService.html":{},"classes/Review.html":{},"classes/Source.html":{},"classes/Steroid.html":{},"classes/User.html":{},"coverage.html":{}}}],["basedto",{"_index":149,"title":{"classes/BaseDto.html":{}},"body":{"classes/ArticleDto.html":{},"classes/ArticleQueryDto.html":{},"classes/BaseDto.html":{},"classes/CategoryDto.html":{},"classes/CategoryQueryDto.html":{},"classes/CommentDto.html":{},"classes/CommentQueryDto.html":{},"classes/CommonNameDto.html":{},"classes/CommonNameQueryDto.html":{},"classes/ManufacturerDto.html":{},"classes/ManufacturerQueryDto.html":{},"classes/ReviewDto.html":{},"classes/ReviewQueryDto.html":{},"classes/SourceDto.html":{},"classes/SourceQueryDto.html":{},"classes/SteroidCommentsCountDto.html":{},"classes/SteroidDto.html":{},"classes/SteroidQueryDto.html":{},"classes/UpdateArticleDto.html":{},"classes/UpdateCategoryDto.html":{},"classes/UpdateCommentDto.html":{},"classes/UpdateCommonNameDto.html":{},"classes/UpdateManufacturerDto.html":{},"classes/UpdateReviewDto.html":{},"classes/UpdateSourceDto.html":{},"classes/UpdateSteroidDto.html":{},"classes/UpdateUserDto.html":{},"classes/UserDto.html":{},"classes/UserQueryDto.html":{},"coverage.html":{}}}],["basedto:10",{"_index":158,"title":{},"body":{"classes/ArticleDto.html":{},"classes/CategoryDto.html":{},"classes/CommentDto.html":{},"classes/CommonNameDto.html":{},"classes/ManufacturerDto.html":{},"classes/ReviewDto.html":{},"classes/SourceDto.html":{},"classes/SteroidCommentsCountDto.html":{},"classes/SteroidDto.html":{},"classes/UserDto.html":{}}}],["basedto:13",{"_index":161,"title":{},"body":{"classes/ArticleDto.html":{},"classes/CategoryDto.html":{},"classes/CommentDto.html":{},"classes/CommonNameDto.html":{},"classes/ManufacturerDto.html":{},"classes/ReviewDto.html":{},"classes/SourceDto.html":{},"classes/SteroidCommentsCountDto.html":{},"classes/SteroidDto.html":{},"classes/UserDto.html":{}}}],["basedto:16",{"_index":162,"title":{},"body":{"classes/ArticleDto.html":{},"classes/CategoryDto.html":{},"classes/CommentDto.html":{},"classes/CommonNameDto.html":{},"classes/ManufacturerDto.html":{},"classes/ReviewDto.html":{},"classes/SourceDto.html":{},"classes/SteroidCommentsCountDto.html":{},"classes/SteroidDto.html":{},"classes/UserDto.html":{}}}],["bcrypt",{"_index":1487,"title":{},"body":{"dependencies.html":{}}}],["birthdate",{"_index":730,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"classes/UserDto.html":{},"classes/UserQueryDto.html":{}}}],["body",{"_index":225,"title":{},"body":{"controllers/ArticlesController.html":{},"controllers/AuthController.html":{},"controllers/CategoriesController.html":{},"controllers/CommentsController.html":{},"controllers/CommonNamesController.html":{},"controllers/ManufacturersController.html":{},"controllers/ReviewsController.html":{},"controllers/SourcesController.html":{},"controllers/SteroidsController.html":{}}}],["bodyfat",{"_index":731,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"classes/UserDto.html":{},"classes/UserQueryDto.html":{}}}],["boolean",{"_index":862,"title":{},"body":{"interfaces/IApiFile.html":{},"interfaces/IFieldOptions.html":{},"interfaces/INumberFieldOptions.html":{},"interfaces/IStringFieldOptions.html":{},"injectables/ValidatorService.html":{}}}],["booleanfield",{"_index":938,"title":{},"body":{"interfaces/IFieldOptions.html":{},"interfaces/INumberFieldOptions.html":{},"interfaces/IStringFieldOptions.html":{},"coverage.html":{}}}],["booleanfieldoptional",{"_index":939,"title":{},"body":{"interfaces/IFieldOptions.html":{},"interfaces/INumberFieldOptions.html":{},"interfaces/IStringFieldOptions.html":{},"coverage.html":{}}}],["bootstrap",{"_index":38,"title":{},"body":{"modules/AppModule.html":{},"modules/ArticlesModule.html":{},"modules/AuthenticationModule.html":{},"modules/CategoriesModule.html":{},"modules/CommentsModule.html":{},"modules/CommonNamesModule.html":{},"modules/ManufacturersModule.html":{},"modules/ReviewsModule.html":{},"modules/SharedModule.html":{},"modules/SourcesModule.html":{},"modules/SteroidsModule.html":{},"modules/UsersModule.html":{},"modules/_SteroidsModule.html":{},"coverage.html":{},"overview.html":{}}}],["browse",{"_index":1577,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":1575,"title":{},"body":{"modules.html":{}}}],["buffer",{"_index":977,"title":{},"body":{"interfaces/IFile.html":{}}}],["building",{"_index":1523,"title":{},"body":{"index.html":{}}}],["catch",{"_index":789,"title":{},"body":{"injectables/CrudService.html":{},"classes/User.html":{},"injectables/UsersService.html":{}}}],["categories",{"_index":434,"title":{},"body":{"controllers/CategoriesController.html":{},"injectables/CategoriesService.html":{}}}],["categories'})@apiresponse({status",{"_index":447,"title":{},"body":{"controllers/CategoriesController.html":{}}}],["categories.controller",{"_index":480,"title":{},"body":{"modules/CategoriesModule.html":{}}}],["categories.service",{"_index":457,"title":{},"body":{"controllers/CategoriesController.html":{},"modules/CategoriesModule.html":{}}}],["categories/category.schema",{"_index":1097,"title":{},"body":{"classes/Review.html":{}}}],["categoriescontroller",{"_index":432,"title":{"controllers/CategoriesController.html":{}},"body":{"controllers/CategoriesController.html":{},"modules/CategoriesModule.html":{},"coverage.html":{}}}],["categoriesmodule",{"_index":46,"title":{"modules/CategoriesModule.html":{}},"body":{"modules/AppModule.html":{},"modules/CategoriesModule.html":{},"modules.html":{},"overview.html":{}}}],["categoriesservice",{"_index":456,"title":{"injectables/CategoriesService.html":{}},"body":{"controllers/CategoriesController.html":{},"modules/CategoriesModule.html":{},"injectables/CategoriesService.html":{},"coverage.html":{},"overview.html":{}}}],["category",{"_index":438,"title":{"classes/Category.html":{}},"body":{"controllers/CategoriesController.html":{},"modules/CategoriesModule.html":{},"injectables/CategoriesService.html":{},"classes/Category.html":{},"classes/Review.html":{},"coverage.html":{}}}],["category'})@apiresponse({status",{"_index":437,"title":{},"body":{"controllers/CategoriesController.html":{}}}],["category.dto",{"_index":458,"title":{},"body":{"controllers/CategoriesController.html":{},"injectables/CategoriesService.html":{}}}],["category.dto.ts",{"_index":691,"title":{},"body":{"classes/CreateCategoryDto.html":{},"coverage.html":{}}}],["category.dto.ts:5",{"_index":693,"title":{},"body":{"classes/CreateCategoryDto.html":{}}}],["category.dto.ts:8",{"_index":692,"title":{},"body":{"classes/CreateCategoryDto.html":{}}}],["category.name",{"_index":481,"title":{},"body":{"modules/CategoriesModule.html":{},"classes/Review.html":{}}}],["category.schema",{"_index":479,"title":{},"body":{"modules/CategoriesModule.html":{},"injectables/CategoriesService.html":{}}}],["category.types",{"_index":500,"title":{},"body":{"classes/Category.html":{},"classes/CategoryDto.html":{},"classes/CategoryQueryDto.html":{},"classes/UpdateCategoryDto.html":{}}}],["categorydocument",{"_index":488,"title":{},"body":{"injectables/CategoriesService.html":{},"classes/Category.html":{},"miscellaneous/typealiases.html":{}}}],["categorydto",{"_index":459,"title":{"classes/CategoryDto.html":{}},"body":{"controllers/CategoriesController.html":{},"injectables/CategoriesService.html":{},"classes/CategoryDto.html":{},"classes/CategoryQueryDto.html":{},"classes/UpdateCategoryDto.html":{},"coverage.html":{}}}],["categorydto})@apiresponse({status",{"_index":439,"title":{},"body":{"controllers/CategoriesController.html":{}}}],["categoryid",{"_index":444,"title":{},"body":{"controllers/CategoriesController.html":{},"classes/Review.html":{}}}],["categorymodel",{"_index":486,"title":{},"body":{"injectables/CategoriesService.html":{}}}],["categoryquerydto",{"_index":446,"title":{"classes/CategoryQueryDto.html":{}},"body":{"controllers/CategoriesController.html":{},"injectables/CategoriesService.html":{},"classes/CategoryDto.html":{},"classes/CategoryQueryDto.html":{},"classes/UpdateCategoryDto.html":{},"coverage.html":{}}}],["categoryschema",{"_index":478,"title":{},"body":{"modules/CategoriesModule.html":{},"classes/Category.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["categoryschema.pre('save",{"_index":504,"title":{},"body":{"classes/Category.html":{}}}],["categoryservice",{"_index":463,"title":{},"body":{"controllers/CategoriesController.html":{}}}],["categorytype",{"_index":497,"title":{},"body":{"classes/Category.html":{},"classes/CategoryDto.html":{},"classes/CategoryQueryDto.html":{},"classes/UpdateCategoryDto.html":{},"miscellaneous/enumerations.html":{}}}],["categorytype.source",{"_index":501,"title":{},"body":{"classes/Category.html":{}}}],["categorytype.steroid",{"_index":502,"title":{},"body":{"classes/Category.html":{}}}],["class",{"_index":25,"title":{"classes/Article.html":{},"classes/ArticleDto.html":{},"classes/ArticleQueryDto.html":{},"classes/Base.html":{},"classes/BaseDto.html":{},"classes/Category.html":{},"classes/CategoryDto.html":{},"classes/CategoryQueryDto.html":{},"classes/Comment.html":{},"classes/CommentDto.html":{},"classes/CommentQueryDto.html":{},"classes/CommonName.html":{},"classes/CommonNameDto.html":{},"classes/CommonNameQueryDto.html":{},"classes/CreateArticleDto.html":{},"classes/CreateCategoryDto.html":{},"classes/CreateCommentDto.html":{},"classes/CreateCommonNameDto.html":{},"classes/CreateManufacturerDto.html":{},"classes/CreateReviewDto.html":{},"classes/CreateSourceDto.html":{},"classes/CreateSteroidDto.html":{},"classes/CreateUserDto.html":{},"classes/FileNotImageException.html":{},"classes/GeneratorProvider.html":{},"classes/LoginPayloadDto.html":{},"classes/Manufacturer.html":{},"classes/ManufacturerDto.html":{},"classes/ManufacturerQueryDto.html":{},"classes/PaginationQueryDto.html":{},"classes/Review.html":{},"classes/ReviewDto.html":{},"classes/ReviewQueryDto.html":{},"classes/Source.html":{},"classes/SourceDto.html":{},"classes/SourceQueryDto.html":{},"classes/Steroid.html":{},"classes/SteroidCommentsCountDto.html":{},"classes/SteroidDto.html":{},"classes/SteroidQueryDto.html":{},"classes/TokenPayloadDto.html":{},"classes/UpdateArticleDto.html":{},"classes/UpdateCategoryDto.html":{},"classes/UpdateCommentDto.html":{},"classes/UpdateCommonNameDto.html":{},"classes/UpdateManufacturerDto.html":{},"classes/UpdateReviewDto.html":{},"classes/UpdateSourceDto.html":{},"classes/UpdateSteroidDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"classes/UserDto.html":{},"classes/UserLoginDto.html":{},"classes/UserQueryDto.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/Article.html":{},"classes/ArticleDto.html":{},"classes/ArticleQueryDto.html":{},"controllers/ArticlesController.html":{},"modules/ArticlesModule.html":{},"injectables/ArticlesService.html":{},"controllers/AuthController.html":{},"modules/AuthenticationModule.html":{},"injectables/AuthenticationService.html":{},"classes/Base.html":{},"classes/BaseDto.html":{},"controllers/CategoriesController.html":{},"modules/CategoriesModule.html":{},"injectables/CategoriesService.html":{},"classes/Category.html":{},"classes/CategoryDto.html":{},"classes/CategoryQueryDto.html":{},"classes/Comment.html":{},"classes/CommentDto.html":{},"classes/CommentQueryDto.html":{},"controllers/CommentsController.html":{},"modules/CommentsModule.html":{},"injectables/CommentsService.html":{},"classes/CommonName.html":{},"classes/CommonNameDto.html":{},"classes/CommonNameQueryDto.html":{},"controllers/CommonNamesController.html":{},"modules/CommonNamesModule.html":{},"injectables/CommonNamesService.html":{},"classes/CreateArticleDto.html":{},"classes/CreateCategoryDto.html":{},"classes/CreateCommentDto.html":{},"classes/CreateCommonNameDto.html":{},"classes/CreateManufacturerDto.html":{},"classes/CreateReviewDto.html":{},"classes/CreateSourceDto.html":{},"classes/CreateSteroidDto.html":{},"classes/CreateUserDto.html":{},"injectables/CrudService.html":{},"classes/FileNotImageException.html":{},"classes/GeneratorProvider.html":{},"injectables/GeneratorService.html":{},"interfaces/IFieldOptions.html":{},"interfaces/INumberFieldOptions.html":{},"interfaces/IStringFieldOptions.html":{},"injectables/JwtStrategy.html":{},"classes/LoginPayloadDto.html":{},"classes/Manufacturer.html":{},"classes/ManufacturerDto.html":{},"classes/ManufacturerQueryDto.html":{},"controllers/ManufacturersController.html":{},"modules/ManufacturersModule.html":{},"injectables/ManufacturersService.html":{},"classes/PaginationQueryDto.html":{},"classes/Review.html":{},"classes/ReviewDto.html":{},"classes/ReviewQueryDto.html":{},"controllers/ReviewsController.html":{},"modules/ReviewsModule.html":{},"injectables/ReviewsService.html":{},"modules/SharedModule.html":{},"classes/Source.html":{},"classes/SourceDto.html":{},"classes/SourceQueryDto.html":{},"controllers/SourcesController.html":{},"modules/SourcesModule.html":{},"injectables/SourcesService.html":{},"classes/Steroid.html":{},"classes/SteroidCommentsCountDto.html":{},"classes/SteroidDto.html":{},"classes/SteroidQueryDto.html":{},"controllers/SteroidsController.html":{},"modules/SteroidsModule.html":{},"injectables/SteroidsService.html":{},"classes/TokenPayloadDto.html":{},"classes/UpdateArticleDto.html":{},"classes/UpdateCategoryDto.html":{},"classes/UpdateCommentDto.html":{},"classes/UpdateCommonNameDto.html":{},"classes/UpdateManufacturerDto.html":{},"classes/UpdateReviewDto.html":{},"classes/UpdateSourceDto.html":{},"classes/UpdateSteroidDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"classes/UserDto.html":{},"classes/UserLoginDto.html":{},"classes/UserQueryDto.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"injectables/ValidatorService.html":{},"modules/_SteroidsModule.html":{},"coverage.html":{},"dependencies.html":{}}}],["classes",{"_index":118,"title":{},"body":{"classes/Article.html":{},"classes/ArticleDto.html":{},"classes/ArticleQueryDto.html":{},"classes/Base.html":{},"classes/BaseDto.html":{},"classes/Category.html":{},"classes/CategoryDto.html":{},"classes/CategoryQueryDto.html":{},"classes/Comment.html":{},"classes/CommentDto.html":{},"classes/CommentQueryDto.html":{},"classes/CommonName.html":{},"classes/CommonNameDto.html":{},"classes/CommonNameQueryDto.html":{},"classes/CreateArticleDto.html":{},"classes/CreateCategoryDto.html":{},"classes/CreateCommentDto.html":{},"classes/CreateCommonNameDto.html":{},"classes/CreateManufacturerDto.html":{},"classes/CreateReviewDto.html":{},"classes/CreateSourceDto.html":{},"classes/CreateSteroidDto.html":{},"classes/CreateUserDto.html":{},"classes/FileNotImageException.html":{},"classes/GeneratorProvider.html":{},"classes/LoginPayloadDto.html":{},"classes/Manufacturer.html":{},"classes/ManufacturerDto.html":{},"classes/ManufacturerQueryDto.html":{},"classes/PaginationQueryDto.html":{},"classes/Review.html":{},"classes/ReviewDto.html":{},"classes/ReviewQueryDto.html":{},"classes/Source.html":{},"classes/SourceDto.html":{},"classes/SourceQueryDto.html":{},"classes/Steroid.html":{},"classes/SteroidCommentsCountDto.html":{},"classes/SteroidDto.html":{},"classes/SteroidQueryDto.html":{},"classes/TokenPayloadDto.html":{},"classes/UpdateArticleDto.html":{},"classes/UpdateCategoryDto.html":{},"classes/UpdateCommentDto.html":{},"classes/UpdateCommonNameDto.html":{},"classes/UpdateManufacturerDto.html":{},"classes/UpdateReviewDto.html":{},"classes/UpdateSourceDto.html":{},"classes/UpdateSteroidDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"classes/UserDto.html":{},"classes/UserLoginDto.html":{},"classes/UserQueryDto.html":{},"overview.html":{}}}],["classfield",{"_index":957,"title":{},"body":{"interfaces/IFieldOptions.html":{},"interfaces/INumberFieldOptions.html":{},"interfaces/IStringFieldOptions.html":{},"classes/LoginPayloadDto.html":{},"classes/SteroidCommentsCountDto.html":{},"classes/SteroidDto.html":{},"classes/SteroidQueryDto.html":{},"classes/UpdateSteroidDto.html":{},"coverage.html":{}}}],["classfield(getclass",{"_index":965,"title":{},"body":{"interfaces/IFieldOptions.html":{},"interfaces/INumberFieldOptions.html":{},"interfaces/IStringFieldOptions.html":{}}}],["classfield(undefined",{"_index":1010,"title":{},"body":{"classes/LoginPayloadDto.html":{},"classes/SteroidCommentsCountDto.html":{}}}],["classfieldoptional",{"_index":964,"title":{},"body":{"interfaces/IFieldOptions.html":{},"interfaces/INumberFieldOptions.html":{},"interfaces/IStringFieldOptions.html":{},"coverage.html":{}}}],["classvalue",{"_index":960,"title":{},"body":{"interfaces/IFieldOptions.html":{},"interfaces/INumberFieldOptions.html":{},"interfaces/IStringFieldOptions.html":{}}}],["cluster__steroidsmodule",{"_index":1420,"title":{},"body":{"modules/_SteroidsModule.html":{},"overview.html":{}}}],["cluster__steroidsmodule_exports",{"_index":1422,"title":{},"body":{"modules/_SteroidsModule.html":{},"overview.html":{}}}],["cluster__steroidsmodule_imports",{"_index":1421,"title":{},"body":{"modules/_SteroidsModule.html":{},"overview.html":{}}}],["cluster_appmodule",{"_index":41,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":42,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_providers",{"_index":43,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_articlesmodule",{"_index":264,"title":{},"body":{"modules/ArticlesModule.html":{},"overview.html":{}}}],["cluster_articlesmodule_providers",{"_index":265,"title":{},"body":{"modules/ArticlesModule.html":{},"overview.html":{}}}],["cluster_authenticationmodule",{"_index":348,"title":{},"body":{"modules/AuthenticationModule.html":{},"overview.html":{}}}],["cluster_authenticationmodule_exports",{"_index":350,"title":{},"body":{"modules/AuthenticationModule.html":{},"overview.html":{}}}],["cluster_authenticationmodule_imports",{"_index":349,"title":{},"body":{"modules/AuthenticationModule.html":{}}}],["cluster_authenticationmodule_providers",{"_index":351,"title":{},"body":{"modules/AuthenticationModule.html":{},"overview.html":{}}}],["cluster_categoriesmodule",{"_index":475,"title":{},"body":{"modules/CategoriesModule.html":{},"overview.html":{}}}],["cluster_categoriesmodule_providers",{"_index":476,"title":{},"body":{"modules/CategoriesModule.html":{},"overview.html":{}}}],["cluster_commentsmodule",{"_index":590,"title":{},"body":{"modules/CommentsModule.html":{},"overview.html":{}}}],["cluster_commentsmodule_exports",{"_index":592,"title":{},"body":{"modules/CommentsModule.html":{},"overview.html":{}}}],["cluster_commentsmodule_providers",{"_index":591,"title":{},"body":{"modules/CommentsModule.html":{},"overview.html":{}}}],["cluster_commonnamesmodule",{"_index":663,"title":{},"body":{"modules/CommonNamesModule.html":{},"overview.html":{}}}],["cluster_commonnamesmodule_providers",{"_index":664,"title":{},"body":{"modules/CommonNamesModule.html":{},"overview.html":{}}}],["cluster_manufacturersmodule",{"_index":1066,"title":{},"body":{"modules/ManufacturersModule.html":{},"overview.html":{}}}],["cluster_manufacturersmodule_providers",{"_index":1067,"title":{},"body":{"modules/ManufacturersModule.html":{},"overview.html":{}}}],["cluster_reviewsmodule",{"_index":1149,"title":{},"body":{"modules/ReviewsModule.html":{},"overview.html":{}}}],["cluster_reviewsmodule_providers",{"_index":1150,"title":{},"body":{"modules/ReviewsModule.html":{},"overview.html":{}}}],["cluster_sharedmodule",{"_index":1162,"title":{},"body":{"modules/SharedModule.html":{},"overview.html":{}}}],["cluster_sharedmodule_exports",{"_index":1163,"title":{},"body":{"modules/SharedModule.html":{},"overview.html":{}}}],["cluster_sharedmodule_providers",{"_index":1164,"title":{},"body":{"modules/SharedModule.html":{},"overview.html":{}}}],["cluster_sourcesmodule",{"_index":1229,"title":{},"body":{"modules/SourcesModule.html":{},"overview.html":{}}}],["cluster_sourcesmodule_providers",{"_index":1230,"title":{},"body":{"modules/SourcesModule.html":{},"overview.html":{}}}],["cluster_steroidsmodule",{"_index":1317,"title":{},"body":{"modules/SteroidsModule.html":{},"overview.html":{}}}],["cluster_steroidsmodule_imports",{"_index":1319,"title":{},"body":{"modules/SteroidsModule.html":{}}}],["cluster_steroidsmodule_providers",{"_index":1318,"title":{},"body":{"modules/SteroidsModule.html":{},"overview.html":{}}}],["cluster_usersmodule",{"_index":1392,"title":{},"body":{"modules/UsersModule.html":{},"overview.html":{}}}],["cluster_usersmodule_exports",{"_index":1393,"title":{},"body":{"modules/UsersModule.html":{},"overview.html":{}}}],["cluster_usersmodule_providers",{"_index":1394,"title":{},"body":{"modules/UsersModule.html":{},"overview.html":{}}}],["comment",{"_index":513,"title":{"classes/Comment.html":{}},"body":{"classes/Comment.html":{},"controllers/CommentsController.html":{},"modules/CommentsModule.html":{},"injectables/CommentsService.html":{},"coverage.html":{}}}],["comment'})@apiresponse({status",{"_index":557,"title":{},"body":{"controllers/CommentsController.html":{}}}],["comment.dto",{"_index":575,"title":{},"body":{"controllers/CommentsController.html":{},"injectables/CommentsService.html":{}}}],["comment.dto.ts",{"_index":695,"title":{},"body":{"classes/CreateCommentDto.html":{},"coverage.html":{}}}],["comment.dto.ts:11",{"_index":697,"title":{},"body":{"classes/CreateCommentDto.html":{}}}],["comment.dto.ts:5",{"_index":696,"title":{},"body":{"classes/CreateCommentDto.html":{}}}],["comment.dto.ts:8",{"_index":698,"title":{},"body":{"classes/CreateCommentDto.html":{}}}],["comment.name",{"_index":596,"title":{},"body":{"modules/CommentsModule.html":{}}}],["comment.schema",{"_index":594,"title":{},"body":{"modules/CommentsModule.html":{},"injectables/CommentsService.html":{}}}],["commentary",{"_index":533,"title":{},"body":{"classes/Comment.html":{},"miscellaneous/enumerations.html":{}}}],["commentcount",{"_index":1252,"title":{},"body":{"classes/SteroidCommentsCountDto.html":{},"classes/SteroidDto.html":{},"classes/SteroidQueryDto.html":{},"classes/UpdateSteroidDto.html":{},"miscellaneous/variables.html":{}}}],["commentdocument",{"_index":532,"title":{},"body":{"classes/Comment.html":{},"injectables/CommentsService.html":{},"miscellaneous/typealiases.html":{}}}],["commentdto",{"_index":543,"title":{"classes/CommentDto.html":{}},"body":{"classes/CommentDto.html":{},"classes/CommentQueryDto.html":{},"controllers/CommentsController.html":{},"injectables/CommentsService.html":{},"classes/UpdateCommentDto.html":{},"coverage.html":{}}}],["commentdto})@apiresponse({status",{"_index":558,"title":{},"body":{"controllers/CommentsController.html":{}}}],["commentid",{"_index":563,"title":{},"body":{"controllers/CommentsController.html":{}}}],["commentmodel",{"_index":600,"title":{},"body":{"injectables/CommentsService.html":{}}}],["commentquerydto",{"_index":549,"title":{"classes/CommentQueryDto.html":{}},"body":{"classes/CommentDto.html":{},"classes/CommentQueryDto.html":{},"controllers/CommentsController.html":{},"injectables/CommentsService.html":{},"classes/UpdateCommentDto.html":{},"coverage.html":{}}}],["comments",{"_index":554,"title":{},"body":{"controllers/CommentsController.html":{},"miscellaneous/variables.html":{}}}],["comments'})@apiresponse({status",{"_index":565,"title":{},"body":{"controllers/CommentsController.html":{}}}],["comments.controller",{"_index":595,"title":{},"body":{"modules/CommentsModule.html":{}}}],["comments.service",{"_index":574,"title":{},"body":{"controllers/CommentsController.html":{},"modules/CommentsModule.html":{}}}],["commentsaggregation",{"_index":1330,"title":{},"body":{"injectables/SteroidsService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["commentschema",{"_index":540,"title":{},"body":{"classes/Comment.html":{},"modules/CommentsModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["commentschema.pre('save",{"_index":542,"title":{},"body":{"classes/Comment.html":{}}}],["commentscontroller",{"_index":552,"title":{"controllers/CommentsController.html":{}},"body":{"controllers/CommentsController.html":{},"modules/CommentsModule.html":{},"coverage.html":{}}}],["commentservice",{"_index":579,"title":{},"body":{"controllers/CommentsController.html":{}}}],["commentsmodule",{"_index":47,"title":{"modules/CommentsModule.html":{}},"body":{"modules/AppModule.html":{},"modules/CommentsModule.html":{},"modules/SteroidsModule.html":{},"modules.html":{},"overview.html":{}}}],["commentsservice",{"_index":573,"title":{"injectables/CommentsService.html":{}},"body":{"controllers/CommentsController.html":{},"modules/CommentsModule.html":{},"injectables/CommentsService.html":{},"injectables/SteroidsService.html":{},"coverage.html":{},"overview.html":{}}}],["commenttypes",{"_index":526,"title":{},"body":{"classes/Comment.html":{},"miscellaneous/enumerations.html":{}}}],["commenttypes.commentary",{"_index":535,"title":{},"body":{"classes/Comment.html":{}}}],["commenttypes.review",{"_index":536,"title":{},"body":{"classes/Comment.html":{}}}],["common",{"_index":624,"title":{},"body":{"controllers/CommonNamesController.html":{},"modules/CommonNamesModule.html":{},"injectables/CommonNamesService.html":{},"classes/CreateCommonNameDto.html":{},"classes/Steroid.html":{},"classes/SteroidCommentsCountDto.html":{},"classes/SteroidDto.html":{},"classes/SteroidQueryDto.html":{},"classes/UpdateSteroidDto.html":{},"modules/_SteroidsModule.html":{},"coverage.html":{}}}],["common/env",{"_index":81,"title":{},"body":{"modules/AppModule.html":{},"injectables/AppService.html":{}}}],["commonname",{"_index":603,"title":{"classes/CommonName.html":{}},"body":{"classes/CommonName.html":{},"controllers/CommonNamesController.html":{},"modules/CommonNamesModule.html":{},"injectables/CommonNamesService.html":{},"classes/Steroid.html":{},"classes/SteroidCommentsCountDto.html":{},"classes/SteroidDto.html":{},"classes/SteroidQueryDto.html":{},"classes/UpdateSteroidDto.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["commonname'})@apiresponse({status",{"_index":628,"title":{},"body":{"controllers/CommonNamesController.html":{}}}],["commonname.name",{"_index":668,"title":{},"body":{"modules/CommonNamesModule.html":{},"classes/Steroid.html":{}}}],["commonnamedocument",{"_index":609,"title":{},"body":{"classes/CommonName.html":{},"injectables/CommonNamesService.html":{},"miscellaneous/typealiases.html":{}}}],["commonnamedto",{"_index":613,"title":{"classes/CommonNameDto.html":{}},"body":{"classes/CommonNameDto.html":{},"classes/CommonNameQueryDto.html":{},"controllers/CommonNamesController.html":{},"injectables/CommonNamesService.html":{},"classes/SteroidCommentsCountDto.html":{},"classes/SteroidDto.html":{},"classes/SteroidQueryDto.html":{},"classes/UpdateCommonNameDto.html":{},"classes/UpdateSteroidDto.html":{},"coverage.html":{}}}],["commonnamedto})@apiresponse({status",{"_index":629,"title":{},"body":{"controllers/CommonNamesController.html":{}}}],["commonnamedto})@transform",{"_index":1269,"title":{},"body":{"classes/SteroidDto.html":{}}}],["commonnameid",{"_index":634,"title":{},"body":{"controllers/CommonNamesController.html":{},"classes/CreateSteroidDto.html":{},"classes/Steroid.html":{},"classes/SteroidCommentsCountDto.html":{},"classes/SteroidDto.html":{},"classes/SteroidQueryDto.html":{},"classes/UpdateSteroidDto.html":{},"miscellaneous/variables.html":{}}}],["commonnamemodel",{"_index":672,"title":{},"body":{"injectables/CommonNamesService.html":{}}}],["commonnamequerydto",{"_index":619,"title":{"classes/CommonNameQueryDto.html":{}},"body":{"classes/CommonNameDto.html":{},"classes/CommonNameQueryDto.html":{},"controllers/CommonNamesController.html":{},"injectables/CommonNamesService.html":{},"classes/UpdateCommonNameDto.html":{},"coverage.html":{}}}],["commonnames",{"_index":653,"title":{},"body":{"controllers/CommonNamesController.html":{},"injectables/CommonNamesService.html":{},"miscellaneous/variables.html":{}}}],["commonnames'})@apiresponse({status",{"_index":636,"title":{},"body":{"controllers/CommonNamesController.html":{}}}],["commonnames.map((name",{"_index":678,"title":{},"body":{"injectables/CommonNamesService.html":{}}}],["commonnameschema",{"_index":610,"title":{},"body":{"classes/CommonName.html":{},"modules/CommonNamesModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["commonnameschema.pre('save",{"_index":612,"title":{},"body":{"classes/CommonName.html":{}}}],["commonnamescontroller",{"_index":622,"title":{"controllers/CommonNamesController.html":{}},"body":{"controllers/CommonNamesController.html":{},"modules/CommonNamesModule.html":{},"coverage.html":{}}}],["commonnamesdtos",{"_index":677,"title":{},"body":{"injectables/CommonNamesService.html":{}}}],["commonnameservice",{"_index":651,"title":{},"body":{"controllers/CommonNamesController.html":{}}}],["commonnamesmodule",{"_index":662,"title":{"modules/CommonNamesModule.html":{}},"body":{"modules/CommonNamesModule.html":{},"modules/_SteroidsModule.html":{},"modules.html":{},"overview.html":{}}}],["commonnamesservice",{"_index":644,"title":{"injectables/CommonNamesService.html":{}},"body":{"controllers/CommonNamesController.html":{},"modules/CommonNamesModule.html":{},"injectables/CommonNamesService.html":{},"coverage.html":{},"overview.html":{}}}],["config",{"_index":84,"title":{},"body":{"modules/AppModule.html":{}}}],["configmodule",{"_index":72,"title":{},"body":{"modules/AppModule.html":{}}}],["configmodule.forroot",{"_index":87,"title":{},"body":{"modules/AppModule.html":{}}}],["configservice",{"_index":73,"title":{},"body":{"modules/AppModule.html":{},"injectables/AppService.html":{},"modules/AuthenticationModule.html":{},"injectables/AuthenticationService.html":{},"injectables/JwtStrategy.html":{}}}],["configservice.get('db",{"_index":95,"title":{},"body":{"modules/AppModule.html":{}}}],["configservice.get('jwt",{"_index":365,"title":{},"body":{"modules/AuthenticationModule.html":{},"injectables/JwtStrategy.html":{}}}],["configuration/config",{"_index":85,"title":{},"body":{"modules/AppModule.html":{}}}],["configuration/config.type",{"_index":82,"title":{},"body":{"modules/AppModule.html":{},"injectables/AppService.html":{},"modules/AuthenticationModule.html":{},"injectables/JwtStrategy.html":{}}}],["configuration/config.type.ts",{"_index":1603,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["configure",{"_index":57,"title":{},"body":{"modules/AppModule.html":{}}}],["configure(consumer",{"_index":58,"title":{},"body":{"modules/AppModule.html":{}}}],["confirmpassword",{"_index":732,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["console.log(jwtconfig",{"_index":115,"title":{},"body":{"injectables/AppService.html":{}}}],["const",{"_index":94,"title":{},"body":{"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/Article.html":{},"classes/ArticleDto.html":{},"classes/ArticleQueryDto.html":{},"controllers/AuthController.html":{},"modules/AuthenticationModule.html":{},"injectables/AuthenticationService.html":{},"injectables/CategoriesService.html":{},"classes/Category.html":{},"classes/CategoryDto.html":{},"classes/CategoryQueryDto.html":{},"classes/Comment.html":{},"classes/CommentDto.html":{},"classes/CommentQueryDto.html":{},"classes/CommonName.html":{},"classes/CommonNameDto.html":{},"classes/CommonNameQueryDto.html":{},"injectables/CommonNamesService.html":{},"injectables/CrudService.html":{},"classes/GeneratorProvider.html":{},"interfaces/IFieldOptions.html":{},"interfaces/INumberFieldOptions.html":{},"interfaces/IStringFieldOptions.html":{},"injectables/JwtStrategy.html":{},"classes/Manufacturer.html":{},"classes/ManufacturerDto.html":{},"classes/ManufacturerQueryDto.html":{},"injectables/ManufacturersService.html":{},"classes/Review.html":{},"classes/ReviewDto.html":{},"classes/ReviewQueryDto.html":{},"modules/SharedModule.html":{},"classes/Source.html":{},"classes/SourceDto.html":{},"classes/SourceQueryDto.html":{},"classes/Steroid.html":{},"classes/SteroidCommentsCountDto.html":{},"classes/SteroidDto.html":{},"classes/SteroidQueryDto.html":{},"injectables/SteroidsService.html":{},"classes/UpdateArticleDto.html":{},"classes/UpdateCategoryDto.html":{},"classes/UpdateCommentDto.html":{},"classes/UpdateCommonNameDto.html":{},"classes/UpdateManufacturerDto.html":{},"classes/UpdateReviewDto.html":{},"classes/UpdateSourceDto.html":{},"classes/UpdateSteroidDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"classes/UserDto.html":{},"classes/UserQueryDto.html":{},"injectables/UsersService.html":{},"injectables/ValidatorService.html":{}}}],["constructor",{"_index":107,"title":{},"body":{"injectables/AppService.html":{},"injectables/ArticlesService.html":{},"controllers/AuthController.html":{},"injectables/AuthenticationService.html":{},"injectables/CategoriesService.html":{},"injectables/CommentsService.html":{},"injectables/CommonNamesService.html":{},"injectables/CrudService.html":{},"classes/FileNotImageException.html":{},"interfaces/IFieldOptions.html":{},"interfaces/INumberFieldOptions.html":{},"interfaces/IStringFieldOptions.html":{},"injectables/JwtStrategy.html":{},"classes/LoginPayloadDto.html":{},"injectables/ManufacturersService.html":{},"injectables/ReviewsService.html":{},"injectables/SourcesService.html":{},"injectables/SteroidsService.html":{},"injectables/UsersService.html":{},"miscellaneous/typealiases.html":{}}}],["constructor(articlemodel",{"_index":275,"title":{},"body":{"injectables/ArticlesService.html":{}}}],["constructor(categorymodel",{"_index":484,"title":{},"body":{"injectables/CategoriesService.html":{}}}],["constructor(commentmodel",{"_index":598,"title":{},"body":{"injectables/CommentsService.html":{}}}],["constructor(commonnamemodel",{"_index":670,"title":{},"body":{"injectables/CommonNamesService.html":{}}}],["constructor(configservice",{"_index":108,"title":{},"body":{"injectables/AppService.html":{}}}],["constructor(error",{"_index":813,"title":{},"body":{"classes/FileNotImageException.html":{}}}],["constructor(jwtservice",{"_index":377,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["constructor(manufacturermodel",{"_index":1073,"title":{},"body":{"injectables/ManufacturersService.html":{}}}],["constructor(model",{"_index":767,"title":{},"body":{"injectables/CrudService.html":{}}}],["constructor(private",{"_index":26,"title":{},"body":{"controllers/AppController.html":{},"controllers/ArticlesController.html":{},"controllers/CategoriesController.html":{},"controllers/CommentsController.html":{},"controllers/CommonNamesController.html":{},"controllers/ManufacturersController.html":{},"controllers/ReviewsController.html":{},"controllers/SourcesController.html":{},"controllers/SteroidsController.html":{},"controllers/UsersController.html":{}}}],["constructor(reviewmodel",{"_index":1156,"title":{},"body":{"injectables/ReviewsService.html":{}}}],["constructor(sourcemodel",{"_index":1235,"title":{},"body":{"injectables/SourcesService.html":{}}}],["constructor(steroidmodel",{"_index":1326,"title":{},"body":{"injectables/SteroidsService.html":{}}}],["constructor(user",{"_index":1008,"title":{},"body":{"classes/LoginPayloadDto.html":{}}}],["constructor(usermodel",{"_index":1399,"title":{},"body":{"injectables/UsersService.html":{}}}],["constructor(userservice",{"_index":986,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["consumer",{"_index":65,"title":{},"body":{"modules/AppModule.html":{}}}],["content",{"_index":121,"title":{},"body":{"classes/Article.html":{},"classes/ArticleDto.html":{},"classes/ArticleQueryDto.html":{},"classes/Comment.html":{},"classes/CommentDto.html":{},"classes/CommentQueryDto.html":{},"classes/CreateArticleDto.html":{},"classes/CreateCategoryDto.html":{},"classes/CreateCommentDto.html":{},"classes/CreateReviewDto.html":{},"classes/ReviewDto.html":{},"classes/ReviewQueryDto.html":{},"classes/UpdateArticleDto.html":{},"classes/UpdateCommentDto.html":{},"classes/UpdateReviewDto.html":{}}}],["controller",{"_index":0,"title":{"controllers/AppController.html":{},"controllers/ArticlesController.html":{},"controllers/AuthController.html":{},"controllers/CategoriesController.html":{},"controllers/CommentsController.html":{},"controllers/CommonNamesController.html":{},"controllers/ManufacturersController.html":{},"controllers/ReviewsController.html":{},"controllers/SourcesController.html":{},"controllers/SteroidsController.html":{},"controllers/UsersController.html":{}},"body":{"controllers/AppController.html":{},"controllers/ArticlesController.html":{},"controllers/AuthController.html":{},"controllers/CategoriesController.html":{},"controllers/CommentsController.html":{},"controllers/CommonNamesController.html":{},"controllers/ManufacturersController.html":{},"controllers/ReviewsController.html":{},"controllers/SourcesController.html":{},"controllers/SteroidsController.html":{},"controllers/UsersController.html":{},"coverage.html":{}}}],["controller('articles",{"_index":242,"title":{},"body":{"controllers/ArticlesController.html":{}}}],["controller('auth",{"_index":331,"title":{},"body":{"controllers/AuthController.html":{}}}],["controller('categories",{"_index":462,"title":{},"body":{"controllers/CategoriesController.html":{}}}],["controller('comments",{"_index":578,"title":{},"body":{"controllers/CommentsController.html":{}}}],["controller('common",{"_index":650,"title":{},"body":{"controllers/CommonNamesController.html":{}}}],["controller('manufacturers",{"_index":1054,"title":{},"body":{"controllers/ManufacturersController.html":{}}}],["controller('reviews",{"_index":1136,"title":{},"body":{"controllers/ReviewsController.html":{}}}],["controller('sources",{"_index":1216,"title":{},"body":{"controllers/SourcesController.html":{}}}],["controller('steroids",{"_index":1304,"title":{},"body":{"controllers/SteroidsController.html":{}}}],["controller('users",{"_index":1391,"title":{},"body":{"controllers/UsersController.html":{}}}],["controllers",{"_index":2,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/ArticlesController.html":{},"modules/ArticlesModule.html":{},"controllers/AuthController.html":{},"modules/AuthenticationModule.html":{},"controllers/CategoriesController.html":{},"modules/CategoriesModule.html":{},"controllers/CommentsController.html":{},"modules/CommentsModule.html":{},"controllers/CommonNamesController.html":{},"modules/CommonNamesModule.html":{},"controllers/ManufacturersController.html":{},"modules/ManufacturersModule.html":{},"controllers/ReviewsController.html":{},"modules/ReviewsModule.html":{},"controllers/SourcesController.html":{},"modules/SourcesModule.html":{},"controllers/SteroidsController.html":{},"modules/SteroidsModule.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["count",{"_index":491,"title":{},"body":{"injectables/CategoriesService.html":{},"injectables/CommonNamesService.html":{},"injectables/ManufacturersService.html":{}}}],["coverage",{"_index":1426,"title":{"coverage.html":{}},"body":{"coverage.html":{},"index.html":{}}}],["cqrsmodule",{"_index":1169,"title":{},"body":{"modules/SharedModule.html":{}}}],["create",{"_index":184,"title":{},"body":{"controllers/ArticlesController.html":{},"injectables/ArticlesService.html":{},"controllers/CategoriesController.html":{},"injectables/CategoriesService.html":{},"controllers/CommentsController.html":{},"injectables/CommentsService.html":{},"controllers/CommonNamesController.html":{},"injectables/CommonNamesService.html":{},"injectables/CrudService.html":{},"controllers/ManufacturersController.html":{},"injectables/ManufacturersService.html":{},"controllers/ReviewsController.html":{},"injectables/ReviewsService.html":{},"controllers/SourcesController.html":{},"injectables/SourcesService.html":{},"controllers/SteroidsController.html":{},"injectables/SteroidsService.html":{},"injectables/UsersService.html":{}}}],["create(@body",{"_index":249,"title":{},"body":{"controllers/ArticlesController.html":{},"controllers/CategoriesController.html":{},"controllers/CommentsController.html":{},"controllers/ReviewsController.html":{},"controllers/SourcesController.html":{},"controllers/SteroidsController.html":{}}}],["create(createarticledto",{"_index":189,"title":{},"body":{"controllers/ArticlesController.html":{},"injectables/ArticlesService.html":{},"injectables/CategoriesService.html":{},"injectables/CommentsService.html":{},"injectables/CommonNamesService.html":{},"injectables/CrudService.html":{},"injectables/ManufacturersService.html":{},"injectables/ReviewsService.html":{},"injectables/SourcesService.html":{},"injectables/SteroidsService.html":{}}}],["create(createcategorydto",{"_index":435,"title":{},"body":{"controllers/CategoriesController.html":{}}}],["create(createcommentdto",{"_index":555,"title":{},"body":{"controllers/CommentsController.html":{}}}],["create(createcommonnamedto",{"_index":626,"title":{},"body":{"controllers/CommonNamesController.html":{}}}],["create(createmanufacturerdto",{"_index":1033,"title":{},"body":{"controllers/ManufacturersController.html":{}}}],["create(createreviewdto",{"_index":1114,"title":{},"body":{"controllers/ReviewsController.html":{}}}],["create(createsourcedto",{"_index":1194,"title":{},"body":{"controllers/SourcesController.html":{}}}],["create(createsteroiddto",{"_index":1283,"title":{},"body":{"controllers/SteroidsController.html":{}}}],["create(createuserdto",{"_index":1402,"title":{},"body":{"injectables/UsersService.html":{}}}],["createaccesstoken",{"_index":375,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["createaccesstoken(data",{"_index":380,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["createarticledto",{"_index":190,"title":{"classes/CreateArticleDto.html":{}},"body":{"controllers/ArticlesController.html":{},"injectables/ArticlesService.html":{},"injectables/CategoriesService.html":{},"injectables/CommentsService.html":{},"injectables/CommonNamesService.html":{},"classes/CreateArticleDto.html":{},"injectables/CrudService.html":{},"injectables/ManufacturersService.html":{},"injectables/ReviewsService.html":{},"injectables/SourcesService.html":{},"injectables/SteroidsService.html":{},"coverage.html":{}}}],["createcategorydto",{"_index":436,"title":{"classes/CreateCategoryDto.html":{}},"body":{"controllers/CategoriesController.html":{},"injectables/CategoriesService.html":{},"classes/CreateCategoryDto.html":{},"coverage.html":{}}}],["createcommentdto",{"_index":556,"title":{"classes/CreateCommentDto.html":{}},"body":{"controllers/CommentsController.html":{},"injectables/CommentsService.html":{},"classes/CreateCommentDto.html":{},"coverage.html":{}}}],["createcommonnamedto",{"_index":627,"title":{"classes/CreateCommonNameDto.html":{}},"body":{"controllers/CommonNamesController.html":{},"injectables/CommonNamesService.html":{},"classes/CreateCommonNameDto.html":{},"coverage.html":{}}}],["created",{"_index":196,"title":{},"body":{"controllers/ArticlesController.html":{},"controllers/CategoriesController.html":{},"controllers/CommentsController.html":{},"controllers/CommonNamesController.html":{},"controllers/ManufacturersController.html":{},"controllers/ReviewsController.html":{},"controllers/SourcesController.html":{},"controllers/SteroidsController.html":{}}}],["createdat",{"_index":151,"title":{},"body":{"classes/ArticleDto.html":{},"classes/ArticleQueryDto.html":{},"classes/Base.html":{},"classes/BaseDto.html":{},"classes/CategoryDto.html":{},"classes/CategoryQueryDto.html":{},"classes/CommentDto.html":{},"classes/CommentQueryDto.html":{},"classes/CommonNameDto.html":{},"classes/CommonNameQueryDto.html":{},"classes/ManufacturerDto.html":{},"classes/ManufacturerQueryDto.html":{},"classes/ReviewDto.html":{},"classes/ReviewQueryDto.html":{},"classes/SourceDto.html":{},"classes/SourceQueryDto.html":{},"classes/SteroidCommentsCountDto.html":{},"classes/SteroidDto.html":{},"classes/SteroidQueryDto.html":{},"classes/UpdateArticleDto.html":{},"classes/UpdateCategoryDto.html":{},"classes/UpdateCommentDto.html":{},"classes/UpdateCommonNameDto.html":{},"classes/UpdateManufacturerDto.html":{},"classes/UpdateReviewDto.html":{},"classes/UpdateSourceDto.html":{},"classes/UpdateSteroidDto.html":{},"classes/UpdateUserDto.html":{},"classes/UserDto.html":{},"classes/UserQueryDto.html":{}}}],["createdto",{"_index":279,"title":{},"body":{"injectables/ArticlesService.html":{},"injectables/CategoriesService.html":{},"injectables/CommentsService.html":{},"injectables/CommonNamesService.html":{},"injectables/CrudService.html":{},"injectables/ManufacturersService.html":{},"injectables/ReviewsService.html":{},"injectables/SourcesService.html":{},"injectables/SteroidsService.html":{}}}],["createmanufacturerdto",{"_index":702,"title":{"classes/CreateManufacturerDto.html":{}},"body":{"classes/CreateManufacturerDto.html":{},"controllers/ManufacturersController.html":{},"injectables/ManufacturersService.html":{},"coverage.html":{}}}],["createreviewdto",{"_index":706,"title":{"classes/CreateReviewDto.html":{}},"body":{"classes/CreateReviewDto.html":{},"controllers/ReviewsController.html":{},"injectables/ReviewsService.html":{},"coverage.html":{}}}],["createsourcedto",{"_index":711,"title":{"classes/CreateSourceDto.html":{}},"body":{"classes/CreateSourceDto.html":{},"controllers/SourcesController.html":{},"injectables/SourcesService.html":{},"coverage.html":{}}}],["createsteroiddto",{"_index":719,"title":{"classes/CreateSteroidDto.html":{}},"body":{"classes/CreateSteroidDto.html":{},"controllers/SteroidsController.html":{},"injectables/SteroidsService.html":{},"coverage.html":{}}}],["createuserdto",{"_index":313,"title":{"classes/CreateUserDto.html":{}},"body":{"controllers/AuthController.html":{},"classes/CreateUserDto.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["creator",{"_index":122,"title":{},"body":{"classes/Article.html":{},"classes/Comment.html":{},"classes/CommonName.html":{},"classes/Manufacturer.html":{},"classes/Review.html":{},"classes/Source.html":{},"classes/Steroid.html":{}}}],["credentials",{"_index":413,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["crudservice",{"_index":272,"title":{"injectables/CrudService.html":{}},"body":{"injectables/ArticlesService.html":{},"injectables/CategoriesService.html":{},"injectables/CommentsService.html":{},"injectables/CommonNamesService.html":{},"injectables/CrudService.html":{},"injectables/ManufacturersService.html":{},"injectables/ReviewsService.html":{},"injectables/SourcesService.html":{},"injectables/SteroidsService.html":{},"coverage.html":{}}}],["crudservice:12",{"_index":294,"title":{},"body":{"injectables/ArticlesService.html":{},"injectables/CategoriesService.html":{},"injectables/CommentsService.html":{},"injectables/CommonNamesService.html":{},"injectables/ManufacturersService.html":{},"injectables/ReviewsService.html":{},"injectables/SourcesService.html":{},"injectables/SteroidsService.html":{}}}],["crudservice:20",{"_index":280,"title":{},"body":{"injectables/ArticlesService.html":{},"injectables/CategoriesService.html":{},"injectables/CommentsService.html":{},"injectables/CommonNamesService.html":{},"injectables/ManufacturersService.html":{},"injectables/ReviewsService.html":{},"injectables/SourcesService.html":{},"injectables/SteroidsService.html":{}}}],["crudservice:33",{"_index":285,"title":{},"body":{"injectables/ArticlesService.html":{},"injectables/CategoriesService.html":{},"injectables/CommentsService.html":{},"injectables/CommonNamesService.html":{},"injectables/ManufacturersService.html":{},"injectables/ReviewsService.html":{},"injectables/SourcesService.html":{},"injectables/SteroidsService.html":{}}}],["crudservice:44",{"_index":287,"title":{},"body":{"injectables/ArticlesService.html":{},"injectables/CategoriesService.html":{},"injectables/CommentsService.html":{},"injectables/CommonNamesService.html":{},"injectables/ManufacturersService.html":{},"injectables/ReviewsService.html":{},"injectables/SourcesService.html":{},"injectables/SteroidsService.html":{}}}],["crudservice:60",{"_index":289,"title":{},"body":{"injectables/ArticlesService.html":{},"injectables/CategoriesService.html":{},"injectables/CommentsService.html":{},"injectables/CommonNamesService.html":{},"injectables/ManufacturersService.html":{},"injectables/ReviewsService.html":{},"injectables/SourcesService.html":{},"injectables/SteroidsService.html":{}}}],["crudservice:75",{"_index":293,"title":{},"body":{"injectables/ArticlesService.html":{},"injectables/CategoriesService.html":{},"injectables/CommentsService.html":{},"injectables/CommonNamesService.html":{},"injectables/ManufacturersService.html":{},"injectables/ReviewsService.html":{},"injectables/SourcesService.html":{},"injectables/SteroidsService.html":{}}}],["crudservice:93",{"_index":282,"title":{},"body":{"injectables/ArticlesService.html":{},"injectables/CategoriesService.html":{},"injectables/CommentsService.html":{},"injectables/CommonNamesService.html":{},"injectables/ManufacturersService.html":{},"injectables/ReviewsService.html":{},"injectables/SourcesService.html":{},"injectables/SteroidsService.html":{}}}],["data",{"_index":383,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["data.role",{"_index":403,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["data.userid",{"_index":401,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["date",{"_index":159,"title":{},"body":{"classes/ArticleDto.html":{},"classes/Base.html":{},"classes/BaseDto.html":{},"classes/CategoryDto.html":{},"classes/CommentDto.html":{},"classes/CommonNameDto.html":{},"classes/CreateUserDto.html":{},"interfaces/IFieldOptions.html":{},"interfaces/INumberFieldOptions.html":{},"interfaces/IStringFieldOptions.html":{},"classes/ManufacturerDto.html":{},"classes/ReviewDto.html":{},"classes/SourceDto.html":{},"classes/SteroidCommentsCountDto.html":{},"classes/SteroidDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"classes/UserDto.html":{},"classes/UserQueryDto.html":{}}}],["date.now",{"_index":421,"title":{},"body":{"classes/Base.html":{}}}],["datefield",{"_index":758,"title":{},"body":{"classes/CreateUserDto.html":{},"interfaces/IFieldOptions.html":{},"interfaces/INumberFieldOptions.html":{},"interfaces/IStringFieldOptions.html":{},"classes/UpdateUserDto.html":{},"classes/UserDto.html":{},"classes/UserQueryDto.html":{},"coverage.html":{}}}],["datefield({swagger",{"_index":741,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/UserDto.html":{}}}],["datefieldoptional",{"_index":974,"title":{},"body":{"interfaces/IFieldOptions.html":{},"interfaces/INumberFieldOptions.html":{},"interfaces/IStringFieldOptions.html":{},"coverage.html":{}}}],["dbconfig",{"_index":80,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/typealiases.html":{}}}],["dbconfig.connectionstring",{"_index":97,"title":{},"body":{"modules/AppModule.html":{}}}],["declarations",{"_index":37,"title":{},"body":{"modules/AppModule.html":{},"modules/ArticlesModule.html":{},"modules/AuthenticationModule.html":{},"modules/CategoriesModule.html":{},"modules/CommentsModule.html":{},"modules/CommonNamesModule.html":{},"modules/ManufacturersModule.html":{},"modules/ReviewsModule.html":{},"modules/SharedModule.html":{},"modules/SourcesModule.html":{},"modules/SteroidsModule.html":{},"modules/UsersModule.html":{},"modules/_SteroidsModule.html":{},"overview.html":{}}}],["decorators",{"_index":10,"title":{},"body":{"controllers/AppController.html":{},"classes/Article.html":{},"classes/ArticleDto.html":{},"classes/ArticleQueryDto.html":{},"controllers/ArticlesController.html":{},"controllers/AuthController.html":{},"classes/Base.html":{},"classes/BaseDto.html":{},"controllers/CategoriesController.html":{},"classes/Category.html":{},"classes/CategoryDto.html":{},"classes/CategoryQueryDto.html":{},"classes/Comment.html":{},"classes/CommentDto.html":{},"classes/CommentQueryDto.html":{},"controllers/CommentsController.html":{},"classes/CommonName.html":{},"classes/CommonNameDto.html":{},"classes/CommonNameQueryDto.html":{},"controllers/CommonNamesController.html":{},"classes/CreateArticleDto.html":{},"classes/CreateCategoryDto.html":{},"classes/CreateCommentDto.html":{},"classes/CreateCommonNameDto.html":{},"classes/CreateManufacturerDto.html":{},"classes/CreateReviewDto.html":{},"classes/CreateSourceDto.html":{},"classes/CreateSteroidDto.html":{},"classes/CreateUserDto.html":{},"interfaces/IFieldOptions.html":{},"interfaces/INumberFieldOptions.html":{},"interfaces/IStringFieldOptions.html":{},"classes/LoginPayloadDto.html":{},"classes/Manufacturer.html":{},"classes/ManufacturerDto.html":{},"classes/ManufacturerQueryDto.html":{},"controllers/ManufacturersController.html":{},"classes/PaginationQueryDto.html":{},"classes/Review.html":{},"classes/ReviewDto.html":{},"classes/ReviewQueryDto.html":{},"controllers/ReviewsController.html":{},"classes/Source.html":{},"classes/SourceDto.html":{},"classes/SourceQueryDto.html":{},"controllers/SourcesController.html":{},"classes/Steroid.html":{},"classes/SteroidCommentsCountDto.html":{},"classes/SteroidDto.html":{},"classes/SteroidQueryDto.html":{},"controllers/SteroidsController.html":{},"classes/TokenPayloadDto.html":{},"classes/User.html":{},"classes/UserDto.html":{},"classes/UserLoginDto.html":{},"classes/UserQueryDto.html":{}}}],["decorators.push",{"_index":927,"title":{},"body":{"interfaces/IFieldOptions.html":{},"interfaces/INumberFieldOptions.html":{},"interfaces/IStringFieldOptions.html":{}}}],["decorators.push(apiproperty",{"_index":914,"title":{},"body":{"interfaces/IFieldOptions.html":{},"interfaces/INumberFieldOptions.html":{},"interfaces/IStringFieldOptions.html":{}}}],["decorators.push(apiuuidproperty(options",{"_index":970,"title":{},"body":{"interfaces/IFieldOptions.html":{},"interfaces/INumberFieldOptions.html":{},"interfaces/IStringFieldOptions.html":{}}}],["decorators.push(isdefined",{"_index":962,"title":{},"body":{"interfaces/IFieldOptions.html":{},"interfaces/INumberFieldOptions.html":{},"interfaces/IStringFieldOptions.html":{}}}],["decorators.push(isint",{"_index":917,"title":{},"body":{"interfaces/IFieldOptions.html":{},"interfaces/INumberFieldOptions.html":{},"interfaces/IStringFieldOptions.html":{}}}],["decorators.push(isnullable",{"_index":910,"title":{},"body":{"interfaces/IFieldOptions.html":{},"interfaces/INumberFieldOptions.html":{},"interfaces/IStringFieldOptions.html":{}}}],["decorators.push(isnumber",{"_index":918,"title":{},"body":{"interfaces/IFieldOptions.html":{},"interfaces/INumberFieldOptions.html":{},"interfaces/IStringFieldOptions.html":{}}}],["decorators.push(ispositive",{"_index":925,"title":{},"body":{"interfaces/IFieldOptions.html":{},"interfaces/INumberFieldOptions.html":{},"interfaces/IStringFieldOptions.html":{}}}],["decorators.push(max(options.max",{"_index":923,"title":{},"body":{"interfaces/IFieldOptions.html":{},"interfaces/INumberFieldOptions.html":{},"interfaces/IStringFieldOptions.html":{}}}],["decorators.push(maxlength(options.maxlength",{"_index":931,"title":{},"body":{"interfaces/IFieldOptions.html":{},"interfaces/INumberFieldOptions.html":{},"interfaces/IStringFieldOptions.html":{}}}],["decorators.push(min(options.min",{"_index":921,"title":{},"body":{"interfaces/IFieldOptions.html":{},"interfaces/INumberFieldOptions.html":{},"interfaces/IStringFieldOptions.html":{}}}],["decorators.push(minlength(minlength",{"_index":929,"title":{},"body":{"interfaces/IFieldOptions.html":{},"interfaces/INumberFieldOptions.html":{},"interfaces/IStringFieldOptions.html":{}}}],["decorators.push(notequals(null",{"_index":912,"title":{},"body":{"interfaces/IFieldOptions.html":{},"interfaces/INumberFieldOptions.html":{},"interfaces/IStringFieldOptions.html":{}}}],["decorators.push(toarray",{"_index":915,"title":{},"body":{"interfaces/IFieldOptions.html":{},"interfaces/INumberFieldOptions.html":{},"interfaces/IStringFieldOptions.html":{}}}],["decorators.push(tolowercase",{"_index":933,"title":{},"body":{"interfaces/IFieldOptions.html":{},"interfaces/INumberFieldOptions.html":{},"interfaces/IStringFieldOptions.html":{}}}],["decorators.push(touppercase",{"_index":935,"title":{},"body":{"interfaces/IFieldOptions.html":{},"interfaces/INumberFieldOptions.html":{},"interfaces/IStringFieldOptions.html":{}}}],["default",{"_index":417,"title":{},"body":{"classes/Base.html":{},"classes/User.html":{},"miscellaneous/variables.html":{}}}],["defaultstrategy",{"_index":362,"title":{},"body":{"modules/AuthenticationModule.html":{}}}],["defined",{"_index":13,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/Article.html":{},"classes/ArticleDto.html":{},"classes/ArticleQueryDto.html":{},"controllers/ArticlesController.html":{},"injectables/ArticlesService.html":{},"controllers/AuthController.html":{},"injectables/AuthenticationService.html":{},"classes/Base.html":{},"classes/BaseDto.html":{},"controllers/CategoriesController.html":{},"injectables/CategoriesService.html":{},"classes/Category.html":{},"classes/CategoryDto.html":{},"classes/CategoryQueryDto.html":{},"classes/Comment.html":{},"classes/CommentDto.html":{},"classes/CommentQueryDto.html":{},"controllers/CommentsController.html":{},"injectables/CommentsService.html":{},"classes/CommonName.html":{},"classes/CommonNameDto.html":{},"classes/CommonNameQueryDto.html":{},"controllers/CommonNamesController.html":{},"injectables/CommonNamesService.html":{},"classes/CreateArticleDto.html":{},"classes/CreateCategoryDto.html":{},"classes/CreateCommentDto.html":{},"classes/CreateCommonNameDto.html":{},"classes/CreateManufacturerDto.html":{},"classes/CreateReviewDto.html":{},"classes/CreateSourceDto.html":{},"classes/CreateSteroidDto.html":{},"classes/CreateUserDto.html":{},"injectables/CrudService.html":{},"classes/FileNotImageException.html":{},"classes/GeneratorProvider.html":{},"injectables/GeneratorService.html":{},"injectables/JwtStrategy.html":{},"classes/LoginPayloadDto.html":{},"classes/Manufacturer.html":{},"classes/ManufacturerDto.html":{},"classes/ManufacturerQueryDto.html":{},"controllers/ManufacturersController.html":{},"injectables/ManufacturersService.html":{},"classes/PaginationQueryDto.html":{},"classes/Review.html":{},"classes/ReviewDto.html":{},"classes/ReviewQueryDto.html":{},"controllers/ReviewsController.html":{},"injectables/ReviewsService.html":{},"classes/Source.html":{},"classes/SourceDto.html":{},"classes/SourceQueryDto.html":{},"controllers/SourcesController.html":{},"injectables/SourcesService.html":{},"classes/Steroid.html":{},"classes/SteroidCommentsCountDto.html":{},"classes/SteroidDto.html":{},"classes/SteroidQueryDto.html":{},"controllers/SteroidsController.html":{},"injectables/SteroidsService.html":{},"classes/TokenPayloadDto.html":{},"classes/User.html":{},"classes/UserDto.html":{},"classes/UserLoginDto.html":{},"classes/UserQueryDto.html":{},"injectables/UsersService.html":{},"injectables/ValidatorService.html":{}}}],["delete",{"_index":203,"title":{},"body":{"controllers/ArticlesController.html":{},"injectables/ArticlesService.html":{},"controllers/CategoriesController.html":{},"injectables/CategoriesService.html":{},"controllers/CommentsController.html":{},"injectables/CommentsService.html":{},"controllers/CommonNamesController.html":{},"injectables/CommonNamesService.html":{},"injectables/CrudService.html":{},"controllers/ManufacturersController.html":{},"injectables/ManufacturersService.html":{},"controllers/ReviewsController.html":{},"injectables/ReviewsService.html":{},"controllers/SourcesController.html":{},"injectables/SourcesService.html":{},"controllers/SteroidsController.html":{},"injectables/SteroidsService.html":{}}}],["delete(':articleid",{"_index":261,"title":{},"body":{"controllers/ArticlesController.html":{}}}],["delete(':categoryid",{"_index":472,"title":{},"body":{"controllers/CategoriesController.html":{}}}],["delete(':commentid",{"_index":588,"title":{},"body":{"controllers/CommentsController.html":{}}}],["delete(':commonnameid",{"_index":660,"title":{},"body":{"controllers/CommonNamesController.html":{}}}],["delete(':manufacturerid",{"_index":1063,"title":{},"body":{"controllers/ManufacturersController.html":{}}}],["delete(':reviewid",{"_index":1146,"title":{},"body":{"controllers/ReviewsController.html":{}}}],["delete(':sourceid",{"_index":1226,"title":{},"body":{"controllers/SourcesController.html":{}}}],["delete(':steroidid",{"_index":1314,"title":{},"body":{"controllers/SteroidsController.html":{}}}],["delete(_id",{"_index":281,"title":{},"body":{"injectables/ArticlesService.html":{},"injectables/CategoriesService.html":{},"injectables/CommentsService.html":{},"injectables/CommonNamesService.html":{},"injectables/CrudService.html":{},"injectables/ManufacturersService.html":{},"injectables/ReviewsService.html":{},"injectables/SourcesService.html":{},"injectables/SteroidsService.html":{}}}],["deletebyid",{"_index":185,"title":{},"body":{"controllers/ArticlesController.html":{},"controllers/CategoriesController.html":{},"controllers/CommentsController.html":{},"controllers/CommonNamesController.html":{},"controllers/ManufacturersController.html":{},"controllers/ReviewsController.html":{},"controllers/SourcesController.html":{},"controllers/SteroidsController.html":{}}}],["deletebyid(@param('articleid",{"_index":262,"title":{},"body":{"controllers/ArticlesController.html":{}}}],["deletebyid(@param('categoryid",{"_index":473,"title":{},"body":{"controllers/CategoriesController.html":{}}}],["deletebyid(@param('reviewid",{"_index":1147,"title":{},"body":{"controllers/ReviewsController.html":{}}}],["deletebyid(@param('sourceid",{"_index":1227,"title":{},"body":{"controllers/SourcesController.html":{}}}],["deletebyid(articleid",{"_index":202,"title":{},"body":{"controllers/ArticlesController.html":{}}}],["deletebyid(categoryid",{"_index":441,"title":{},"body":{"controllers/CategoriesController.html":{}}}],["deletebyid(commentid",{"_index":560,"title":{},"body":{"controllers/CommentsController.html":{}}}],["deletebyid(commonnameid",{"_index":631,"title":{},"body":{"controllers/CommonNamesController.html":{}}}],["deletebyid(manufacturerid",{"_index":1037,"title":{},"body":{"controllers/ManufacturersController.html":{}}}],["deletebyid(reviewid",{"_index":1118,"title":{},"body":{"controllers/ReviewsController.html":{}}}],["deletebyid(sourceid",{"_index":1198,"title":{},"body":{"controllers/SourcesController.html":{}}}],["deletebyid(steroidid",{"_index":1287,"title":{},"body":{"controllers/SteroidsController.html":{}}}],["deleted",{"_index":260,"title":{},"body":{"controllers/ArticlesController.html":{},"controllers/CategoriesController.html":{},"controllers/CommentsController.html":{},"controllers/CommonNamesController.html":{},"controllers/ManufacturersController.html":{},"controllers/ReviewsController.html":{},"controllers/SourcesController.html":{},"controllers/SteroidsController.html":{}}}],["deleted.'})@apiresponse({status",{"_index":205,"title":{},"body":{"controllers/ArticlesController.html":{},"controllers/CategoriesController.html":{},"controllers/CommentsController.html":{},"controllers/CommonNamesController.html":{},"controllers/ManufacturersController.html":{},"controllers/ReviewsController.html":{},"controllers/SourcesController.html":{},"controllers/SteroidsController.html":{}}}],["dependencies",{"_index":35,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/ArticlesModule.html":{},"modules/AuthenticationModule.html":{},"modules/CategoriesModule.html":{},"modules/CommentsModule.html":{},"modules/CommonNamesModule.html":{},"modules/ManufacturersModule.html":{},"modules/ReviewsModule.html":{},"modules/SharedModule.html":{},"modules/SourcesModule.html":{},"modules/SteroidsModule.html":{},"modules/UsersModule.html":{},"modules/_SteroidsModule.html":{},"dependencies.html":{},"overview.html":{}}}],["description",{"_index":194,"title":{},"body":{"controllers/ArticlesController.html":{},"controllers/AuthController.html":{},"controllers/CategoriesController.html":{},"controllers/CommentsController.html":{},"controllers/CommonNamesController.html":{},"controllers/ManufacturersController.html":{},"controllers/ReviewsController.html":{},"controllers/SourcesController.html":{},"controllers/SteroidsController.html":{},"index.html":{},"properties.html":{}}}],["development",{"_index":1536,"title":{},"body":{"index.html":{}}}],["disable",{"_index":944,"title":{},"body":{"interfaces/IFieldOptions.html":{},"interfaces/INumberFieldOptions.html":{},"interfaces/IStringFieldOptions.html":{}}}],["docs",{"_index":1610,"title":{},"body":{"miscellaneous/variables.html":{}}}],["documentation",{"_index":1427,"title":{},"body":{"coverage.html":{}}}],["dto",{"_index":780,"title":{},"body":{"injectables/CrudService.html":{}}}],["dto.decorator.ts",{"_index":1450,"title":{},"body":{"coverage.html":{}}}],["dto/article.dto",{"_index":237,"title":{},"body":{"controllers/ArticlesController.html":{},"injectables/ArticlesService.html":{}}}],["dto/category.dto",{"_index":460,"title":{},"body":{"controllers/CategoriesController.html":{},"injectables/CategoriesService.html":{}}}],["dto/comment.dto",{"_index":576,"title":{},"body":{"controllers/CommentsController.html":{},"injectables/CommentsService.html":{}}}],["dto/common",{"_index":648,"title":{},"body":{"controllers/CommonNamesController.html":{},"injectables/CommonNamesService.html":{}}}],["dto/create",{"_index":235,"title":{},"body":{"controllers/ArticlesController.html":{},"injectables/ArticlesService.html":{},"controllers/CategoriesController.html":{},"injectables/CategoriesService.html":{},"controllers/CommentsController.html":{},"injectables/CommentsService.html":{},"controllers/CommonNamesController.html":{},"injectables/CommonNamesService.html":{},"controllers/ManufacturersController.html":{},"injectables/ManufacturersService.html":{},"controllers/ReviewsController.html":{},"injectables/ReviewsService.html":{},"controllers/SourcesController.html":{},"injectables/SourcesService.html":{},"controllers/SteroidsController.html":{},"injectables/SteroidsService.html":{},"injectables/UsersService.html":{}}}],["dto/login",{"_index":320,"title":{},"body":{"controllers/AuthController.html":{}}}],["dto/manufacturer.dto",{"_index":1052,"title":{},"body":{"controllers/ManufacturersController.html":{},"injectables/ManufacturersService.html":{}}}],["dto/review.dto",{"_index":1134,"title":{},"body":{"controllers/ReviewsController.html":{},"injectables/ReviewsService.html":{}}}],["dto/source.dto",{"_index":1214,"title":{},"body":{"controllers/SourcesController.html":{},"injectables/SourcesService.html":{}}}],["dto/steroid.dto",{"_index":1302,"title":{},"body":{"controllers/SteroidsController.html":{},"injectables/SteroidsService.html":{}}}],["dto/token",{"_index":388,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["dto/user",{"_index":322,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthenticationService.html":{}}}],["dto/user.dto",{"_index":1405,"title":{},"body":{"injectables/UsersService.html":{}}}],["dtoclass",{"_index":273,"title":{},"body":{"injectables/ArticlesService.html":{},"injectables/CategoriesService.html":{},"injectables/CommentsService.html":{},"injectables/CommonNamesService.html":{},"injectables/CrudService.html":{},"injectables/ManufacturersService.html":{},"injectables/ReviewsService.html":{},"injectables/SourcesService.html":{},"injectables/SteroidsService.html":{}}}],["e2e",{"_index":1546,"title":{},"body":{"index.html":{}}}],["each",{"_index":716,"title":{},"body":{"classes/CreateSourceDto.html":{},"interfaces/IFieldOptions.html":{},"interfaces/INumberFieldOptions.html":{},"interfaces/IStringFieldOptions.html":{},"classes/SourceDto.html":{},"classes/SourceQueryDto.html":{},"classes/UpdateSourceDto.html":{}}}],["efficient",{"_index":1524,"title":{},"body":{"index.html":{}}}],["email",{"_index":405,"title":{},"body":{"injectables/AuthenticationService.html":{},"classes/CreateUserDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"classes/UserDto.html":{},"classes/UserQueryDto.html":{}}}],["emailfield",{"_index":759,"title":{},"body":{"classes/CreateUserDto.html":{},"interfaces/IFieldOptions.html":{},"interfaces/INumberFieldOptions.html":{},"interfaces/IStringFieldOptions.html":{},"classes/UpdateUserDto.html":{},"classes/UserDto.html":{},"classes/UserQueryDto.html":{},"coverage.html":{}}}],["emailfield({swagger",{"_index":747,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/UserDto.html":{}}}],["emailfieldoptional",{"_index":966,"title":{},"body":{"interfaces/IFieldOptions.html":{},"interfaces/INumberFieldOptions.html":{},"interfaces/IStringFieldOptions.html":{},"coverage.html":{}}}],["encoding",{"_index":978,"title":{},"body":{"interfaces/IFile.html":{}}}],["enum",{"_index":498,"title":{},"body":{"classes/Category.html":{},"classes/Comment.html":{},"classes/Review.html":{},"classes/User.html":{}}}],["enumerations",{"_index":1504,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["enumfield",{"_index":509,"title":{},"body":{"classes/CategoryDto.html":{},"classes/CategoryQueryDto.html":{},"interfaces/IFieldOptions.html":{},"interfaces/INumberFieldOptions.html":{},"interfaces/IStringFieldOptions.html":{},"classes/UpdateCategoryDto.html":{},"classes/UpdateUserDto.html":{},"classes/UserDto.html":{},"classes/UserQueryDto.html":{},"coverage.html":{}}}],["enumfield(getenum",{"_index":963,"title":{},"body":{"interfaces/IFieldOptions.html":{},"interfaces/INumberFieldOptions.html":{},"interfaces/IStringFieldOptions.html":{}}}],["enumfield(undefined",{"_index":507,"title":{},"body":{"classes/CategoryDto.html":{},"classes/UserDto.html":{}}}],["enumfieldoptional",{"_index":760,"title":{},"body":{"classes/CreateUserDto.html":{},"interfaces/IFieldOptions.html":{},"interfaces/INumberFieldOptions.html":{},"interfaces/IStringFieldOptions.html":{},"coverage.html":{}}}],["enumfieldoptional(undefined",{"_index":753,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["enumvalue",{"_index":954,"title":{},"body":{"interfaces/IFieldOptions.html":{},"interfaces/INumberFieldOptions.html":{},"interfaces/IStringFieldOptions.html":{}}}],["envconfiguration",{"_index":111,"title":{},"body":{"injectables/AppService.html":{},"miscellaneous/typealiases.html":{}}}],["error",{"_index":411,"title":{},"body":{"injectables/AuthenticationService.html":{},"classes/FileNotImageException.html":{},"classes/User.html":{}}}],["error(`${this.model.modelname",{"_index":801,"title":{},"body":{"injectables/CrudService.html":{}}}],["error(`${this.usermodel.modelname",{"_index":1408,"title":{},"body":{"injectables/UsersService.html":{}}}],["eslint",{"_index":943,"title":{},"body":{"interfaces/IFieldOptions.html":{},"interfaces/INumberFieldOptions.html":{},"interfaces/IStringFieldOptions.html":{}}}],["eslint/ban",{"_index":947,"title":{},"body":{"interfaces/IFieldOptions.html":{},"interfaces/INumberFieldOptions.html":{},"interfaces/IStringFieldOptions.html":{}}}],["eslint/no",{"_index":951,"title":{},"body":{"interfaces/IFieldOptions.html":{},"interfaces/INumberFieldOptions.html":{},"interfaces/IStringFieldOptions.html":{}}}],["ex",{"_index":790,"title":{},"body":{"injectables/CrudService.html":{},"injectables/UsersService.html":{}}}],["example",{"_index":1532,"title":{},"body":{"index.html":{}}}],["exclude",{"_index":1257,"title":{},"body":{"classes/SteroidCommentsCountDto.html":{},"classes/SteroidDto.html":{},"classes/SteroidQueryDto.html":{},"classes/UpdateSteroidDto.html":{},"classes/UpdateUserDto.html":{},"classes/UserDto.html":{},"classes/UserQueryDto.html":{}}}],["exec",{"_index":849,"title":{},"body":{"classes/GeneratorProvider.html":{}}}],["expiresin",{"_index":397,"title":{},"body":{"injectables/AuthenticationService.html":{},"classes/TokenPayloadDto.html":{}}}],["explicit",{"_index":952,"title":{},"body":{"interfaces/IFieldOptions.html":{},"interfaces/INumberFieldOptions.html":{},"interfaces/IStringFieldOptions.html":{}}}],["explore",{"_index":1443,"title":{},"body":{"coverage.html":{}}}],["export",{"_index":24,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/Article.html":{},"classes/ArticleDto.html":{},"classes/ArticleQueryDto.html":{},"controllers/ArticlesController.html":{},"modules/ArticlesModule.html":{},"injectables/ArticlesService.html":{},"controllers/AuthController.html":{},"modules/AuthenticationModule.html":{},"injectables/AuthenticationService.html":{},"classes/Base.html":{},"classes/BaseDto.html":{},"controllers/CategoriesController.html":{},"modules/CategoriesModule.html":{},"injectables/CategoriesService.html":{},"classes/Category.html":{},"classes/CategoryDto.html":{},"classes/CategoryQueryDto.html":{},"classes/Comment.html":{},"classes/CommentDto.html":{},"classes/CommentQueryDto.html":{},"controllers/CommentsController.html":{},"modules/CommentsModule.html":{},"injectables/CommentsService.html":{},"classes/CommonName.html":{},"classes/CommonNameDto.html":{},"classes/CommonNameQueryDto.html":{},"controllers/CommonNamesController.html":{},"modules/CommonNamesModule.html":{},"injectables/CommonNamesService.html":{},"classes/CreateArticleDto.html":{},"classes/CreateCategoryDto.html":{},"classes/CreateCommentDto.html":{},"classes/CreateCommonNameDto.html":{},"classes/CreateManufacturerDto.html":{},"classes/CreateReviewDto.html":{},"classes/CreateSourceDto.html":{},"classes/CreateSteroidDto.html":{},"classes/CreateUserDto.html":{},"injectables/CrudService.html":{},"classes/FileNotImageException.html":{},"classes/GeneratorProvider.html":{},"injectables/GeneratorService.html":{},"interfaces/IApiFile.html":{},"interfaces/IFieldOptions.html":{},"interfaces/IFile.html":{},"interfaces/INumberFieldOptions.html":{},"interfaces/IStringFieldOptions.html":{},"injectables/JwtStrategy.html":{},"classes/LoginPayloadDto.html":{},"classes/Manufacturer.html":{},"classes/ManufacturerDto.html":{},"classes/ManufacturerQueryDto.html":{},"controllers/ManufacturersController.html":{},"modules/ManufacturersModule.html":{},"injectables/ManufacturersService.html":{},"classes/PaginationQueryDto.html":{},"classes/Review.html":{},"classes/ReviewDto.html":{},"classes/ReviewQueryDto.html":{},"controllers/ReviewsController.html":{},"modules/ReviewsModule.html":{},"injectables/ReviewsService.html":{},"modules/SharedModule.html":{},"classes/Source.html":{},"classes/SourceDto.html":{},"classes/SourceQueryDto.html":{},"controllers/SourcesController.html":{},"modules/SourcesModule.html":{},"injectables/SourcesService.html":{},"classes/Steroid.html":{},"classes/SteroidCommentsCountDto.html":{},"classes/SteroidDto.html":{},"classes/SteroidQueryDto.html":{},"controllers/SteroidsController.html":{},"modules/SteroidsModule.html":{},"injectables/SteroidsService.html":{},"classes/TokenPayloadDto.html":{},"classes/UpdateArticleDto.html":{},"classes/UpdateCategoryDto.html":{},"classes/UpdateCommentDto.html":{},"classes/UpdateCommonNameDto.html":{},"classes/UpdateManufacturerDto.html":{},"classes/UpdateReviewDto.html":{},"classes/UpdateSourceDto.html":{},"classes/UpdateSteroidDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"classes/UserDto.html":{},"classes/UserLoginDto.html":{},"classes/UserQueryDto.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"injectables/ValidatorService.html":{},"modules/_SteroidsModule.html":{}}}],["exports",{"_index":40,"title":{},"body":{"modules/AppModule.html":{},"modules/ArticlesModule.html":{},"modules/AuthenticationModule.html":{},"modules/CategoriesModule.html":{},"modules/CommentsModule.html":{},"modules/CommonNamesModule.html":{},"modules/ManufacturersModule.html":{},"modules/ReviewsModule.html":{},"modules/SharedModule.html":{},"modules/SourcesModule.html":{},"modules/SteroidsModule.html":{},"modules/UsersModule.html":{},"modules/_SteroidsModule.html":{},"overview.html":{}}}],["expose",{"_index":1258,"title":{},"body":{"classes/SteroidCommentsCountDto.html":{},"classes/SteroidDto.html":{},"classes/SteroidQueryDto.html":{},"classes/UpdateSteroidDto.html":{}}}],["expose()@apiproperty({type",{"_index":1268,"title":{},"body":{"classes/SteroidDto.html":{}}}],["express",{"_index":1485,"title":{},"body":{"dependencies.html":{}}}],["ext",{"_index":830,"title":{},"body":{"classes/GeneratorProvider.html":{},"injectables/GeneratorService.html":{}}}],["extends",{"_index":142,"title":{},"body":{"classes/Article.html":{},"classes/ArticleDto.html":{},"classes/ArticleQueryDto.html":{},"injectables/ArticlesService.html":{},"injectables/CategoriesService.html":{},"classes/Category.html":{},"classes/CategoryDto.html":{},"classes/CategoryQueryDto.html":{},"classes/Comment.html":{},"classes/CommentDto.html":{},"classes/CommentQueryDto.html":{},"injectables/CommentsService.html":{},"classes/CommonName.html":{},"classes/CommonNameDto.html":{},"classes/CommonNameQueryDto.html":{},"injectables/CommonNamesService.html":{},"classes/FileNotImageException.html":{},"interfaces/IFieldOptions.html":{},"interfaces/INumberFieldOptions.html":{},"interfaces/IStringFieldOptions.html":{},"injectables/JwtStrategy.html":{},"classes/Manufacturer.html":{},"classes/ManufacturerDto.html":{},"classes/ManufacturerQueryDto.html":{},"injectables/ManufacturersService.html":{},"classes/Review.html":{},"classes/ReviewDto.html":{},"classes/ReviewQueryDto.html":{},"injectables/ReviewsService.html":{},"classes/Source.html":{},"classes/SourceDto.html":{},"classes/SourceQueryDto.html":{},"injectables/SourcesService.html":{},"classes/Steroid.html":{},"classes/SteroidCommentsCountDto.html":{},"classes/SteroidDto.html":{},"classes/SteroidQueryDto.html":{},"injectables/SteroidsService.html":{},"classes/UpdateArticleDto.html":{},"classes/UpdateCategoryDto.html":{},"classes/UpdateCommentDto.html":{},"classes/UpdateCommonNameDto.html":{},"classes/UpdateManufacturerDto.html":{},"classes/UpdateReviewDto.html":{},"classes/UpdateSourceDto.html":{},"classes/UpdateSteroidDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"classes/UserDto.html":{},"classes/UserQueryDto.html":{}}}],["extractjwt",{"_index":992,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["extractjwt.fromauthheaderasbearertoken",{"_index":1000,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["extractkey",{"_index":1458,"title":{},"body":{"coverage.html":{}}}],["false",{"_index":521,"title":{},"body":{"classes/Comment.html":{},"interfaces/IFieldOptions.html":{},"interfaces/INumberFieldOptions.html":{},"interfaces/IStringFieldOptions.html":{},"classes/User.html":{}}}],["fieldname",{"_index":979,"title":{},"body":{"interfaces/IFile.html":{}}}],["file",{"_index":5,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/Article.html":{},"classes/ArticleDto.html":{},"classes/ArticleQueryDto.html":{},"controllers/ArticlesController.html":{},"modules/ArticlesModule.html":{},"injectables/ArticlesService.html":{},"controllers/AuthController.html":{},"modules/AuthenticationModule.html":{},"injectables/AuthenticationService.html":{},"classes/Base.html":{},"classes/BaseDto.html":{},"controllers/CategoriesController.html":{},"modules/CategoriesModule.html":{},"injectables/CategoriesService.html":{},"classes/Category.html":{},"classes/CategoryDto.html":{},"classes/CategoryQueryDto.html":{},"classes/Comment.html":{},"classes/CommentDto.html":{},"classes/CommentQueryDto.html":{},"controllers/CommentsController.html":{},"modules/CommentsModule.html":{},"injectables/CommentsService.html":{},"classes/CommonName.html":{},"classes/CommonNameDto.html":{},"classes/CommonNameQueryDto.html":{},"controllers/CommonNamesController.html":{},"modules/CommonNamesModule.html":{},"injectables/CommonNamesService.html":{},"classes/CreateArticleDto.html":{},"classes/CreateCategoryDto.html":{},"classes/CreateCommentDto.html":{},"classes/CreateCommonNameDto.html":{},"classes/CreateManufacturerDto.html":{},"classes/CreateReviewDto.html":{},"classes/CreateSourceDto.html":{},"classes/CreateSteroidDto.html":{},"classes/CreateUserDto.html":{},"injectables/CrudService.html":{},"classes/FileNotImageException.html":{},"classes/GeneratorProvider.html":{},"injectables/GeneratorService.html":{},"interfaces/IApiFile.html":{},"interfaces/IFieldOptions.html":{},"interfaces/IFile.html":{},"interfaces/INumberFieldOptions.html":{},"interfaces/IStringFieldOptions.html":{},"injectables/JwtStrategy.html":{},"classes/LoginPayloadDto.html":{},"classes/Manufacturer.html":{},"classes/ManufacturerDto.html":{},"classes/ManufacturerQueryDto.html":{},"controllers/ManufacturersController.html":{},"modules/ManufacturersModule.html":{},"injectables/ManufacturersService.html":{},"classes/PaginationQueryDto.html":{},"classes/Review.html":{},"classes/ReviewDto.html":{},"classes/ReviewQueryDto.html":{},"controllers/ReviewsController.html":{},"modules/ReviewsModule.html":{},"injectables/ReviewsService.html":{},"modules/SharedModule.html":{},"classes/Source.html":{},"classes/SourceDto.html":{},"classes/SourceQueryDto.html":{},"controllers/SourcesController.html":{},"modules/SourcesModule.html":{},"injectables/SourcesService.html":{},"classes/Steroid.html":{},"classes/SteroidCommentsCountDto.html":{},"classes/SteroidDto.html":{},"classes/SteroidQueryDto.html":{},"controllers/SteroidsController.html":{},"modules/SteroidsModule.html":{},"injectables/SteroidsService.html":{},"classes/TokenPayloadDto.html":{},"classes/UpdateArticleDto.html":{},"classes/UpdateCategoryDto.html":{},"classes/UpdateCommentDto.html":{},"classes/UpdateCommonNameDto.html":{},"classes/UpdateManufacturerDto.html":{},"classes/UpdateReviewDto.html":{},"classes/UpdateSourceDto.html":{},"classes/UpdateSteroidDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"classes/UserDto.html":{},"classes/UserLoginDto.html":{},"classes/UserQueryDto.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"injectables/ValidatorService.html":{},"modules/_SteroidsModule.html":{},"coverage.html":{}}}],["filename",{"_index":821,"title":{},"body":{"classes/GeneratorProvider.html":{},"injectables/GeneratorService.html":{}}}],["filename(ext",{"_index":828,"title":{},"body":{"classes/GeneratorProvider.html":{},"injectables/GeneratorService.html":{}}}],["filenotimageexception",{"_index":809,"title":{"classes/FileNotImageException.html":{}},"body":{"classes/FileNotImageException.html":{},"coverage.html":{}}}],["find",{"_index":186,"title":{},"body":{"controllers/ArticlesController.html":{},"injectables/ArticlesService.html":{},"controllers/CategoriesController.html":{},"injectables/CategoriesService.html":{},"controllers/CommentsController.html":{},"injectables/CommentsService.html":{},"controllers/CommonNamesController.html":{},"injectables/CommonNamesService.html":{},"injectables/CrudService.html":{},"controllers/ManufacturersController.html":{},"injectables/ManufacturersService.html":{},"controllers/ReviewsController.html":{},"injectables/ReviewsService.html":{},"controllers/SourcesController.html":{},"injectables/SourcesService.html":{},"controllers/SteroidsController.html":{},"injectables/SteroidsService.html":{}}}],["find(@query",{"_index":252,"title":{},"body":{"controllers/ArticlesController.html":{},"controllers/CategoriesController.html":{},"controllers/CommentsController.html":{},"controllers/ReviewsController.html":{},"controllers/SourcesController.html":{}}}],["find(articlequerydto",{"_index":209,"title":{},"body":{"controllers/ArticlesController.html":{}}}],["find(categoryquerydto",{"_index":445,"title":{},"body":{"controllers/CategoriesController.html":{}}}],["find(commentquerydto",{"_index":564,"title":{},"body":{"controllers/CommentsController.html":{}}}],["find(commonnamequerydto",{"_index":635,"title":{},"body":{"controllers/CommonNamesController.html":{}}}],["find(manufacturerquerydto",{"_index":1040,"title":{},"body":{"controllers/ManufacturersController.html":{}}}],["find(querydto",{"_index":283,"title":{},"body":{"injectables/ArticlesService.html":{},"injectables/CategoriesService.html":{},"injectables/CommentsService.html":{},"injectables/CommonNamesService.html":{},"injectables/CrudService.html":{},"injectables/ManufacturersService.html":{},"injectables/ReviewsService.html":{},"injectables/SourcesService.html":{},"injectables/SteroidsService.html":{}}}],["find(reviewquerydto",{"_index":1122,"title":{},"body":{"controllers/ReviewsController.html":{}}}],["find(sourcequerydto",{"_index":1202,"title":{},"body":{"controllers/SourcesController.html":{}}}],["findbyid",{"_index":187,"title":{},"body":{"controllers/ArticlesController.html":{},"injectables/ArticlesService.html":{},"controllers/CategoriesController.html":{},"injectables/CategoriesService.html":{},"controllers/CommentsController.html":{},"injectables/CommentsService.html":{},"controllers/CommonNamesController.html":{},"injectables/CommonNamesService.html":{},"injectables/CrudService.html":{},"controllers/ManufacturersController.html":{},"injectables/ManufacturersService.html":{},"controllers/ReviewsController.html":{},"injectables/ReviewsService.html":{},"controllers/SourcesController.html":{},"injectables/SourcesService.html":{},"controllers/SteroidsController.html":{},"injectables/SteroidsService.html":{}}}],["findbyid(@param('articleid",{"_index":255,"title":{},"body":{"controllers/ArticlesController.html":{}}}],["findbyid(@param('categoryid",{"_index":467,"title":{},"body":{"controllers/CategoriesController.html":{}}}],["findbyid(@param('commentid",{"_index":583,"title":{},"body":{"controllers/CommentsController.html":{}}}],["findbyid(@param('reviewid",{"_index":1141,"title":{},"body":{"controllers/ReviewsController.html":{}}}],["findbyid(@param('sourceid",{"_index":1221,"title":{},"body":{"controllers/SourcesController.html":{}}}],["findbyid(@param('steroidid",{"_index":1309,"title":{},"body":{"controllers/SteroidsController.html":{}}}],["findbyid(_id",{"_index":286,"title":{},"body":{"injectables/ArticlesService.html":{},"injectables/CategoriesService.html":{},"injectables/CommentsService.html":{},"injectables/CommonNamesService.html":{},"injectables/CrudService.html":{},"injectables/ManufacturersService.html":{},"injectables/ReviewsService.html":{},"injectables/SourcesService.html":{},"injectables/SteroidsService.html":{}}}],["findbyid(articleid",{"_index":216,"title":{},"body":{"controllers/ArticlesController.html":{}}}],["findbyid(categoryid",{"_index":449,"title":{},"body":{"controllers/CategoriesController.html":{}}}],["findbyid(commentid",{"_index":567,"title":{},"body":{"controllers/CommentsController.html":{}}}],["findbyid(commonnameid",{"_index":638,"title":{},"body":{"controllers/CommonNamesController.html":{}}}],["findbyid(manufacturerid",{"_index":1043,"title":{},"body":{"controllers/ManufacturersController.html":{}}}],["findbyid(reviewid",{"_index":1125,"title":{},"body":{"controllers/ReviewsController.html":{}}}],["findbyid(sourceid",{"_index":1205,"title":{},"body":{"controllers/SourcesController.html":{}}}],["findbyid(steroidid",{"_index":1293,"title":{},"body":{"controllers/SteroidsController.html":{}}}],["finddetailedsteroids",{"_index":1325,"title":{},"body":{"injectables/SteroidsService.html":{}}}],["findone",{"_index":274,"title":{},"body":{"injectables/ArticlesService.html":{},"injectables/CategoriesService.html":{},"injectables/CommentsService.html":{},"injectables/CommonNamesService.html":{},"injectables/CrudService.html":{},"injectables/ManufacturersService.html":{},"injectables/ReviewsService.html":{},"injectables/SourcesService.html":{},"injectables/SteroidsService.html":{},"injectables/UsersService.html":{}}}],["findone(querydto",{"_index":288,"title":{},"body":{"injectables/ArticlesService.html":{},"injectables/CategoriesService.html":{},"injectables/CommentsService.html":{},"injectables/CommonNamesService.html":{},"injectables/CrudService.html":{},"injectables/ManufacturersService.html":{},"injectables/ReviewsService.html":{},"injectables/SourcesService.html":{},"injectables/SteroidsService.html":{},"injectables/UsersService.html":{}}}],["first",{"_index":1616,"title":{},"body":{"miscellaneous/variables.html":{}}}],["foreignfield",{"_index":1609,"title":{},"body":{"miscellaneous/variables.html":{}}}],["forroutes",{"_index":103,"title":{},"body":{"modules/AppModule.html":{}}}],["found",{"_index":802,"title":{},"body":{"injectables/CrudService.html":{},"injectables/UsersService.html":{}}}],["framework",{"_index":1522,"title":{},"body":{"index.html":{}}}],["function",{"_index":146,"title":{},"body":{"classes/Article.html":{},"classes/Category.html":{},"classes/Comment.html":{},"classes/CommonName.html":{},"interfaces/IFieldOptions.html":{},"interfaces/INumberFieldOptions.html":{},"interfaces/IStringFieldOptions.html":{},"classes/Manufacturer.html":{},"classes/Review.html":{},"classes/Source.html":{},"classes/Steroid.html":{},"classes/User.html":{},"coverage.html":{}}}],["generate",{"_index":834,"title":{},"body":{"classes/GeneratorProvider.html":{}}}],["generatehash",{"_index":1358,"title":{},"body":{"classes/User.html":{},"coverage.html":{}}}],["generatehash(this.password",{"_index":1366,"title":{},"body":{"classes/User.html":{}}}],["generatepassword",{"_index":822,"title":{},"body":{"classes/GeneratorProvider.html":{}}}],["generaterandomstring",{"_index":823,"title":{},"body":{"classes/GeneratorProvider.html":{}}}],["generaterandomstring(length",{"_index":832,"title":{},"body":{"classes/GeneratorProvider.html":{}}}],["generateverificationcode",{"_index":824,"title":{},"body":{"classes/GeneratorProvider.html":{}}}],["generatorprovider",{"_index":817,"title":{"classes/GeneratorProvider.html":{}},"body":{"classes/GeneratorProvider.html":{},"coverage.html":{}}}],["generatorprovider.uuid",{"_index":846,"title":{},"body":{"classes/GeneratorProvider.html":{}}}],["generatorservice",{"_index":851,"title":{"injectables/GeneratorService.html":{}},"body":{"injectables/GeneratorService.html":{},"modules/SharedModule.html":{},"coverage.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["generic",{"_index":297,"title":{},"body":{"injectables/ArticlesService.html":{},"injectables/CategoriesService.html":{},"injectables/CommentsService.html":{},"injectables/CommonNamesService.html":{},"injectables/ManufacturersService.html":{},"injectables/ReviewsService.html":{},"injectables/SourcesService.html":{},"injectables/SteroidsService.html":{}}}],["generic.ts",{"_index":765,"title":{},"body":{"injectables/CrudService.html":{},"coverage.html":{}}}],["generic.ts:12",{"_index":768,"title":{},"body":{"injectables/CrudService.html":{}}}],["generic.ts:20",{"_index":769,"title":{},"body":{"injectables/CrudService.html":{}}}],["generic.ts:33",{"_index":771,"title":{},"body":{"injectables/CrudService.html":{}}}],["generic.ts:44",{"_index":772,"title":{},"body":{"injectables/CrudService.html":{}}}],["generic.ts:60",{"_index":773,"title":{},"body":{"injectables/CrudService.html":{}}}],["generic.ts:75",{"_index":774,"title":{},"body":{"injectables/CrudService.html":{}}}],["generic.ts:93",{"_index":770,"title":{},"body":{"injectables/CrudService.html":{}}}],["get(':articleid",{"_index":254,"title":{},"body":{"controllers/ArticlesController.html":{}}}],["get(':categoryid",{"_index":466,"title":{},"body":{"controllers/CategoriesController.html":{}}}],["get(':commentid",{"_index":582,"title":{},"body":{"controllers/CommentsController.html":{}}}],["get(':commonnameid",{"_index":655,"title":{},"body":{"controllers/CommonNamesController.html":{}}}],["get(':manufacturerid",{"_index":1058,"title":{},"body":{"controllers/ManufacturersController.html":{}}}],["get(':reviewid",{"_index":1140,"title":{},"body":{"controllers/ReviewsController.html":{}}}],["get(':sourceid",{"_index":1220,"title":{},"body":{"controllers/SourcesController.html":{}}}],["get(':steroidid",{"_index":1308,"title":{},"body":{"controllers/SteroidsController.html":{}}}],["get('health",{"_index":12,"title":{},"body":{"controllers/AppController.html":{}}}],["getclass",{"_index":958,"title":{},"body":{"interfaces/IFieldOptions.html":{},"interfaces/INumberFieldOptions.html":{},"interfaces/IStringFieldOptions.html":{}}}],["getenum",{"_index":949,"title":{},"body":{"interfaces/IFieldOptions.html":{},"interfaces/INumberFieldOptions.html":{},"interfaces/IStringFieldOptions.html":{}}}],["geterrormessage",{"_index":776,"title":{},"body":{"injectables/CrudService.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["geterrormessage(ex",{"_index":791,"title":{},"body":{"injectables/CrudService.html":{},"injectables/UsersService.html":{}}}],["gets3key",{"_index":825,"title":{},"body":{"classes/GeneratorProvider.html":{}}}],["gets3key(publicurl",{"_index":838,"title":{},"body":{"classes/GeneratorProvider.html":{}}}],["gets3publicurl",{"_index":826,"title":{},"body":{"classes/GeneratorProvider.html":{}}}],["gets3publicurl(key",{"_index":841,"title":{},"body":{"classes/GeneratorProvider.html":{}}}],["getstring",{"_index":1463,"title":{},"body":{"coverage.html":{}}}],["getting",{"_index":1518,"title":{"index.html":{}},"body":{}}],["getuniqueerrormessage",{"_index":1461,"title":{},"body":{"coverage.html":{}}}],["getvariablename",{"_index":1464,"title":{},"body":{"coverage.html":{}}}],["global",{"_index":1167,"title":{},"body":{"modules/SharedModule.html":{}}}],["group",{"_index":1615,"title":{},"body":{"miscellaneous/variables.html":{}}}],["groups",{"_index":865,"title":{},"body":{"interfaces/IFieldOptions.html":{},"interfaces/INumberFieldOptions.html":{},"interfaces/IStringFieldOptions.html":{}}}],["grow",{"_index":1553,"title":{},"body":{"index.html":{}}}],["hashedpassword",{"_index":1365,"title":{},"body":{"classes/User.html":{}}}],["height",{"_index":733,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"classes/UserDto.html":{},"classes/UserQueryDto.html":{}}}],["here",{"_index":1564,"title":{},"body":{"index.html":{}}}],["httpcode",{"_index":318,"title":{},"body":{"controllers/AuthController.html":{}}}],["httpcode(httpstatus.ok",{"_index":335,"title":{},"body":{"controllers/AuthController.html":{}}}],["httpexception",{"_index":775,"title":{},"body":{"injectables/CrudService.html":{},"injectables/UsersService.html":{}}}],["https://nestjs.com",{"_index":1571,"title":{},"body":{"index.html":{}}}],["https://s3.${process.env.aws_s3_bucket_name_region}.amazonaws.com/${process.env.aws_s3_bucket_name}/${key",{"_index":848,"title":{},"body":{"classes/GeneratorProvider.html":{}}}],["httpstatus",{"_index":226,"title":{},"body":{"controllers/ArticlesController.html":{},"controllers/AuthController.html":{},"controllers/CategoriesController.html":{},"controllers/CommentsController.html":{},"controllers/CommonNamesController.html":{},"injectables/CrudService.html":{},"controllers/ManufacturersController.html":{},"controllers/ReviewsController.html":{},"controllers/SourcesController.html":{},"controllers/SteroidsController.html":{},"injectables/UsersService.html":{}}}],["httpstatus.bad_request",{"_index":247,"title":{},"body":{"controllers/ArticlesController.html":{},"controllers/CategoriesController.html":{},"controllers/CommentsController.html":{},"controllers/CommonNamesController.html":{},"controllers/ManufacturersController.html":{},"controllers/ReviewsController.html":{},"controllers/SourcesController.html":{},"controllers/SteroidsController.html":{}}}],["httpstatus.created",{"_index":246,"title":{},"body":{"controllers/ArticlesController.html":{},"controllers/CategoriesController.html":{},"controllers/CommentsController.html":{},"controllers/CommonNamesController.html":{},"controllers/ManufacturersController.html":{},"controllers/ReviewsController.html":{},"controllers/SourcesController.html":{},"controllers/SteroidsController.html":{}}}],["httpstatus.ok",{"_index":251,"title":{},"body":{"controllers/ArticlesController.html":{},"controllers/CategoriesController.html":{},"controllers/CommentsController.html":{},"controllers/CommonNamesController.html":{},"controllers/ManufacturersController.html":{},"controllers/ReviewsController.html":{},"controllers/SourcesController.html":{},"controllers/SteroidsController.html":{}}}],["httpstatus.unprocessable_entity",{"_index":792,"title":{},"body":{"injectables/CrudService.html":{},"injectables/UsersService.html":{}}}],["iapifile",{"_index":858,"title":{"interfaces/IApiFile.html":{}},"body":{"interfaces/IApiFile.html":{},"coverage.html":{}}}],["ibooleanfieldoptions",{"_index":904,"title":{},"body":{"interfaces/IFieldOptions.html":{},"interfaces/INumberFieldOptions.html":{},"interfaces/IStringFieldOptions.html":{},"miscellaneous/typealiases.html":{}}}],["iclassfieldoptions",{"_index":903,"title":{},"body":{"interfaces/IFieldOptions.html":{},"interfaces/INumberFieldOptions.html":{},"interfaces/IStringFieldOptions.html":{},"miscellaneous/typealiases.html":{}}}],["id",{"_index":217,"title":{},"body":{"controllers/ArticlesController.html":{},"controllers/CategoriesController.html":{},"controllers/CommentsController.html":{},"controllers/CommonNamesController.html":{},"controllers/ManufacturersController.html":{},"controllers/ReviewsController.html":{},"controllers/SourcesController.html":{},"controllers/SteroidsController.html":{}}}],["id'})@apiresponse({status",{"_index":204,"title":{},"body":{"controllers/ArticlesController.html":{},"controllers/CategoriesController.html":{},"controllers/CommentsController.html":{},"controllers/CommonNamesController.html":{},"controllers/ManufacturersController.html":{},"controllers/ReviewsController.html":{},"controllers/SourcesController.html":{},"controllers/SteroidsController.html":{}}}],["identifier",{"_index":1428,"title":{},"body":{"coverage.html":{}}}],["ienumfieldoptions",{"_index":905,"title":{},"body":{"interfaces/IFieldOptions.html":{},"interfaces/INumberFieldOptions.html":{},"interfaces/IStringFieldOptions.html":{},"miscellaneous/typealiases.html":{}}}],["ifieldoptions",{"_index":863,"title":{"interfaces/IFieldOptions.html":{}},"body":{"interfaces/IFieldOptions.html":{},"interfaces/INumberFieldOptions.html":{},"interfaces/IStringFieldOptions.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["ifile",{"_index":975,"title":{"interfaces/IFile.html":{}},"body":{"interfaces/IFile.html":{},"coverage.html":{}}}],["image.exception.ts",{"_index":811,"title":{},"body":{"classes/FileNotImageException.html":{},"coverage.html":{}}}],["image.exception.ts:3",{"_index":814,"title":{},"body":{"classes/FileNotImageException.html":{}}}],["image/jpeg",{"_index":1417,"title":{},"body":{"injectables/ValidatorService.html":{}}}],["image/png",{"_index":1418,"title":{},"body":{"injectables/ValidatorService.html":{}}}],["imagemimetypes",{"_index":1416,"title":{},"body":{"injectables/ValidatorService.html":{}}}],["imagemimetypes.includes(mimetype",{"_index":1419,"title":{},"body":{"injectables/ValidatorService.html":{}}}],["images",{"_index":515,"title":{},"body":{"classes/Comment.html":{}}}],["implements",{"_index":99,"title":{},"body":{"modules/AppModule.html":{},"injectables/CategoriesService.html":{},"injectables/CommonNamesService.html":{},"injectables/ManufacturersService.html":{}}}],["import",{"_index":17,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/Article.html":{},"classes/ArticleDto.html":{},"classes/ArticleQueryDto.html":{},"controllers/ArticlesController.html":{},"modules/ArticlesModule.html":{},"injectables/ArticlesService.html":{},"controllers/AuthController.html":{},"modules/AuthenticationModule.html":{},"injectables/AuthenticationService.html":{},"classes/Base.html":{},"classes/BaseDto.html":{},"controllers/CategoriesController.html":{},"modules/CategoriesModule.html":{},"injectables/CategoriesService.html":{},"classes/Category.html":{},"classes/CategoryDto.html":{},"classes/CategoryQueryDto.html":{},"classes/Comment.html":{},"classes/CommentDto.html":{},"classes/CommentQueryDto.html":{},"controllers/CommentsController.html":{},"modules/CommentsModule.html":{},"injectables/CommentsService.html":{},"classes/CommonName.html":{},"classes/CommonNameDto.html":{},"classes/CommonNameQueryDto.html":{},"controllers/CommonNamesController.html":{},"modules/CommonNamesModule.html":{},"injectables/CommonNamesService.html":{},"classes/CreateArticleDto.html":{},"classes/CreateCategoryDto.html":{},"classes/CreateCommentDto.html":{},"classes/CreateCommonNameDto.html":{},"classes/CreateManufacturerDto.html":{},"classes/CreateReviewDto.html":{},"classes/CreateSourceDto.html":{},"classes/CreateSteroidDto.html":{},"classes/CreateUserDto.html":{},"injectables/CrudService.html":{},"classes/FileNotImageException.html":{},"classes/GeneratorProvider.html":{},"injectables/GeneratorService.html":{},"interfaces/IFieldOptions.html":{},"interfaces/INumberFieldOptions.html":{},"interfaces/IStringFieldOptions.html":{},"injectables/JwtStrategy.html":{},"classes/LoginPayloadDto.html":{},"classes/Manufacturer.html":{},"classes/ManufacturerDto.html":{},"classes/ManufacturerQueryDto.html":{},"controllers/ManufacturersController.html":{},"modules/ManufacturersModule.html":{},"injectables/ManufacturersService.html":{},"classes/PaginationQueryDto.html":{},"classes/Review.html":{},"classes/ReviewDto.html":{},"classes/ReviewQueryDto.html":{},"controllers/ReviewsController.html":{},"modules/ReviewsModule.html":{},"injectables/ReviewsService.html":{},"modules/SharedModule.html":{},"classes/Source.html":{},"classes/SourceDto.html":{},"classes/SourceQueryDto.html":{},"controllers/SourcesController.html":{},"modules/SourcesModule.html":{},"injectables/SourcesService.html":{},"classes/Steroid.html":{},"classes/SteroidCommentsCountDto.html":{},"classes/SteroidDto.html":{},"classes/SteroidQueryDto.html":{},"controllers/SteroidsController.html":{},"modules/SteroidsModule.html":{},"injectables/SteroidsService.html":{},"classes/TokenPayloadDto.html":{},"classes/UpdateArticleDto.html":{},"classes/UpdateCategoryDto.html":{},"classes/UpdateCommentDto.html":{},"classes/UpdateCommonNameDto.html":{},"classes/UpdateManufacturerDto.html":{},"classes/UpdateReviewDto.html":{},"classes/UpdateSourceDto.html":{},"classes/UpdateSteroidDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"classes/UserDto.html":{},"classes/UserLoginDto.html":{},"classes/UserQueryDto.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"injectables/ValidatorService.html":{},"modules/_SteroidsModule.html":{}}}],["imports",{"_index":56,"title":{},"body":{"modules/AppModule.html":{},"modules/ArticlesModule.html":{},"modules/AuthenticationModule.html":{},"modules/CategoriesModule.html":{},"modules/CommentsModule.html":{},"modules/CommonNamesModule.html":{},"modules/ManufacturersModule.html":{},"modules/ReviewsModule.html":{},"modules/SharedModule.html":{},"modules/SourcesModule.html":{},"modules/SteroidsModule.html":{},"modules/UsersModule.html":{},"modules/_SteroidsModule.html":{}}}],["index",{"_index":7,"title":{"index.html":{}},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"classes/Article.html":{},"classes/ArticleDto.html":{},"classes/ArticleQueryDto.html":{},"controllers/ArticlesController.html":{},"injectables/ArticlesService.html":{},"controllers/AuthController.html":{},"injectables/AuthenticationService.html":{},"classes/Base.html":{},"classes/BaseDto.html":{},"controllers/CategoriesController.html":{},"injectables/CategoriesService.html":{},"classes/Category.html":{},"classes/CategoryDto.html":{},"classes/CategoryQueryDto.html":{},"classes/Comment.html":{},"classes/CommentDto.html":{},"classes/CommentQueryDto.html":{},"controllers/CommentsController.html":{},"injectables/CommentsService.html":{},"classes/CommonName.html":{},"classes/CommonNameDto.html":{},"classes/CommonNameQueryDto.html":{},"controllers/CommonNamesController.html":{},"injectables/CommonNamesService.html":{},"classes/CreateArticleDto.html":{},"classes/CreateCategoryDto.html":{},"classes/CreateCommentDto.html":{},"classes/CreateCommonNameDto.html":{},"classes/CreateManufacturerDto.html":{},"classes/CreateReviewDto.html":{},"classes/CreateSourceDto.html":{},"classes/CreateSteroidDto.html":{},"classes/CreateUserDto.html":{},"injectables/CrudService.html":{},"classes/GeneratorProvider.html":{},"injectables/GeneratorService.html":{},"interfaces/IApiFile.html":{},"interfaces/IFieldOptions.html":{},"interfaces/IFile.html":{},"interfaces/INumberFieldOptions.html":{},"interfaces/IStringFieldOptions.html":{},"injectables/JwtStrategy.html":{},"classes/LoginPayloadDto.html":{},"classes/Manufacturer.html":{},"classes/ManufacturerDto.html":{},"classes/ManufacturerQueryDto.html":{},"controllers/ManufacturersController.html":{},"injectables/ManufacturersService.html":{},"classes/PaginationQueryDto.html":{},"classes/Review.html":{},"classes/ReviewDto.html":{},"classes/ReviewQueryDto.html":{},"controllers/ReviewsController.html":{},"injectables/ReviewsService.html":{},"classes/Source.html":{},"classes/SourceDto.html":{},"classes/SourceQueryDto.html":{},"controllers/SourcesController.html":{},"injectables/SourcesService.html":{},"classes/Steroid.html":{},"classes/SteroidCommentsCountDto.html":{},"classes/SteroidDto.html":{},"classes/SteroidQueryDto.html":{},"controllers/SteroidsController.html":{},"injectables/SteroidsService.html":{},"classes/TokenPayloadDto.html":{},"classes/User.html":{},"classes/UserDto.html":{},"classes/UserLoginDto.html":{},"classes/UserQueryDto.html":{},"injectables/UsersService.html":{},"injectables/ValidatorService.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":3,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/Article.html":{},"classes/ArticleDto.html":{},"classes/ArticleQueryDto.html":{},"controllers/ArticlesController.html":{},"modules/ArticlesModule.html":{},"injectables/ArticlesService.html":{},"controllers/AuthController.html":{},"modules/AuthenticationModule.html":{},"injectables/AuthenticationService.html":{},"classes/Base.html":{},"classes/BaseDto.html":{},"controllers/CategoriesController.html":{},"modules/CategoriesModule.html":{},"injectables/CategoriesService.html":{},"classes/Category.html":{},"classes/CategoryDto.html":{},"classes/CategoryQueryDto.html":{},"classes/Comment.html":{},"classes/CommentDto.html":{},"classes/CommentQueryDto.html":{},"controllers/CommentsController.html":{},"modules/CommentsModule.html":{},"injectables/CommentsService.html":{},"classes/CommonName.html":{},"classes/CommonNameDto.html":{},"classes/CommonNameQueryDto.html":{},"controllers/CommonNamesController.html":{},"modules/CommonNamesModule.html":{},"injectables/CommonNamesService.html":{},"classes/CreateArticleDto.html":{},"classes/CreateCategoryDto.html":{},"classes/CreateCommentDto.html":{},"classes/CreateCommonNameDto.html":{},"classes/CreateManufacturerDto.html":{},"classes/CreateReviewDto.html":{},"classes/CreateSourceDto.html":{},"classes/CreateSteroidDto.html":{},"classes/CreateUserDto.html":{},"injectables/CrudService.html":{},"classes/FileNotImageException.html":{},"classes/GeneratorProvider.html":{},"injectables/GeneratorService.html":{},"interfaces/IApiFile.html":{},"interfaces/IFieldOptions.html":{},"interfaces/IFile.html":{},"interfaces/INumberFieldOptions.html":{},"interfaces/IStringFieldOptions.html":{},"injectables/JwtStrategy.html":{},"classes/LoginPayloadDto.html":{},"classes/Manufacturer.html":{},"classes/ManufacturerDto.html":{},"classes/ManufacturerQueryDto.html":{},"controllers/ManufacturersController.html":{},"modules/ManufacturersModule.html":{},"injectables/ManufacturersService.html":{},"classes/PaginationQueryDto.html":{},"classes/Review.html":{},"classes/ReviewDto.html":{},"classes/ReviewQueryDto.html":{},"controllers/ReviewsController.html":{},"modules/ReviewsModule.html":{},"injectables/ReviewsService.html":{},"modules/SharedModule.html":{},"classes/Source.html":{},"classes/SourceDto.html":{},"classes/SourceQueryDto.html":{},"controllers/SourcesController.html":{},"modules/SourcesModule.html":{},"injectables/SourcesService.html":{},"classes/Steroid.html":{},"classes/SteroidCommentsCountDto.html":{},"classes/SteroidDto.html":{},"classes/SteroidQueryDto.html":{},"controllers/SteroidsController.html":{},"modules/SteroidsModule.html":{},"injectables/SteroidsService.html":{},"classes/TokenPayloadDto.html":{},"classes/UpdateArticleDto.html":{},"classes/UpdateCategoryDto.html":{},"classes/UpdateCommentDto.html":{},"classes/UpdateCommonNameDto.html":{},"classes/UpdateManufacturerDto.html":{},"classes/UpdateReviewDto.html":{},"classes/UpdateSourceDto.html":{},"classes/UpdateSteroidDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"classes/UserDto.html":{},"classes/UserLoginDto.html":{},"classes/UserQueryDto.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"injectables/ValidatorService.html":{},"modules/_SteroidsModule.html":{}}}],["inherited",{"_index":157,"title":{},"body":{"classes/ArticleDto.html":{},"injectables/ArticlesService.html":{},"injectables/CategoriesService.html":{},"classes/CategoryDto.html":{},"classes/CommentDto.html":{},"injectables/CommentsService.html":{},"classes/CommonNameDto.html":{},"injectables/CommonNamesService.html":{},"classes/ManufacturerDto.html":{},"injectables/ManufacturersService.html":{},"classes/ReviewDto.html":{},"injectables/ReviewsService.html":{},"classes/SourceDto.html":{},"injectables/SourcesService.html":{},"classes/SteroidCommentsCountDto.html":{},"classes/SteroidDto.html":{},"injectables/SteroidsService.html":{},"classes/UserDto.html":{}}}],["inject",{"_index":98,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthenticationModule.html":{}}}],["injectable",{"_index":104,"title":{"injectables/AppService.html":{},"injectables/ArticlesService.html":{},"injectables/AuthenticationService.html":{},"injectables/CategoriesService.html":{},"injectables/CommentsService.html":{},"injectables/CommonNamesService.html":{},"injectables/CrudService.html":{},"injectables/GeneratorService.html":{},"injectables/JwtStrategy.html":{},"injectables/ManufacturersService.html":{},"injectables/ReviewsService.html":{},"injectables/SourcesService.html":{},"injectables/SteroidsService.html":{},"injectables/UsersService.html":{},"injectables/ValidatorService.html":{}},"body":{"injectables/AppService.html":{},"injectables/ArticlesService.html":{},"injectables/AuthenticationService.html":{},"injectables/CategoriesService.html":{},"injectables/CommentsService.html":{},"injectables/CommonNamesService.html":{},"injectables/CrudService.html":{},"injectables/GeneratorService.html":{},"injectables/JwtStrategy.html":{},"injectables/ManufacturersService.html":{},"injectables/ReviewsService.html":{},"injectables/SourcesService.html":{},"injectables/SteroidsService.html":{},"injectables/UsersService.html":{},"injectables/ValidatorService.html":{},"coverage.html":{}}}],["injectables",{"_index":105,"title":{},"body":{"injectables/AppService.html":{},"injectables/ArticlesService.html":{},"injectables/AuthenticationService.html":{},"injectables/CategoriesService.html":{},"injectables/CommentsService.html":{},"injectables/CommonNamesService.html":{},"injectables/CrudService.html":{},"injectables/GeneratorService.html":{},"injectables/JwtStrategy.html":{},"injectables/ManufacturersService.html":{},"injectables/ReviewsService.html":{},"injectables/SourcesService.html":{},"injectables/SteroidsService.html":{},"injectables/UsersService.html":{},"injectables/ValidatorService.html":{},"overview.html":{}}}],["injectmodel",{"_index":295,"title":{},"body":{"injectables/ArticlesService.html":{},"injectables/CategoriesService.html":{},"injectables/CommentsService.html":{},"injectables/CommonNamesService.html":{},"injectables/ManufacturersService.html":{},"injectables/ReviewsService.html":{},"injectables/SourcesService.html":{},"injectables/SteroidsService.html":{},"injectables/UsersService.html":{}}}],["injectmodel(article.name",{"_index":298,"title":{},"body":{"injectables/ArticlesService.html":{}}}],["injectmodel(category.name",{"_index":489,"title":{},"body":{"injectables/CategoriesService.html":{}}}],["injectmodel(comment.name",{"_index":601,"title":{},"body":{"injectables/CommentsService.html":{}}}],["injectmodel(commonname.name",{"_index":674,"title":{},"body":{"injectables/CommonNamesService.html":{}}}],["injectmodel(manufacturer.name",{"_index":1078,"title":{},"body":{"injectables/ManufacturersService.html":{}}}],["injectmodel(review.name",{"_index":1159,"title":{},"body":{"injectables/ReviewsService.html":{}}}],["injectmodel(source.name",{"_index":1238,"title":{},"body":{"injectables/SourcesService.html":{}}}],["injectmodel(steroid.name",{"_index":1333,"title":{},"body":{"injectables/SteroidsService.html":{}}}],["injectmodel(user.name",{"_index":1406,"title":{},"body":{"injectables/UsersService.html":{}}}],["installation",{"_index":1531,"title":{},"body":{"index.html":{}}}],["installrunning",{"_index":1534,"title":{},"body":{"index.html":{}}}],["int",{"_index":901,"title":{},"body":{"interfaces/IFieldOptions.html":{},"interfaces/INumberFieldOptions.html":{},"interfaces/IStringFieldOptions.html":{}}}],["interface",{"_index":857,"title":{"interfaces/IApiFile.html":{},"interfaces/IFieldOptions.html":{},"interfaces/IFile.html":{},"interfaces/INumberFieldOptions.html":{},"interfaces/IStringFieldOptions.html":{}},"body":{"interfaces/IApiFile.html":{},"interfaces/IFieldOptions.html":{},"interfaces/IFile.html":{},"interfaces/INumberFieldOptions.html":{},"interfaces/IStringFieldOptions.html":{},"coverage.html":{}}}],["interfaces",{"_index":859,"title":{},"body":{"interfaces/IApiFile.html":{},"interfaces/IFieldOptions.html":{},"interfaces/IFile.html":{},"interfaces/INumberFieldOptions.html":{},"interfaces/IStringFieldOptions.html":{},"overview.html":{}}}],["inumberfieldoptions",{"_index":900,"title":{"interfaces/INumberFieldOptions.html":{}},"body":{"interfaces/IFieldOptions.html":{},"interfaces/INumberFieldOptions.html":{},"interfaces/IStringFieldOptions.html":{},"coverage.html":{}}}],["invalid",{"_index":412,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["isarray",{"_index":861,"title":{},"body":{"interfaces/IApiFile.html":{},"interfaces/IFieldOptions.html":{},"interfaces/INumberFieldOptions.html":{},"interfaces/IStringFieldOptions.html":{}}}],["isboolean",{"_index":869,"title":{},"body":{"interfaces/IFieldOptions.html":{},"interfaces/INumberFieldOptions.html":{},"interfaces/IStringFieldOptions.html":{}}}],["isdate",{"_index":870,"title":{},"body":{"interfaces/IFieldOptions.html":{},"interfaces/INumberFieldOptions.html":{},"interfaces/IStringFieldOptions.html":{}}}],["isdefined",{"_index":871,"title":{},"body":{"interfaces/IFieldOptions.html":{},"interfaces/INumberFieldOptions.html":{},"interfaces/IStringFieldOptions.html":{}}}],["isemail",{"_index":872,"title":{},"body":{"interfaces/IFieldOptions.html":{},"interfaces/INumberFieldOptions.html":{},"interfaces/IStringFieldOptions.html":{}}}],["isenum",{"_index":873,"title":{},"body":{"interfaces/IFieldOptions.html":{},"interfaces/INumberFieldOptions.html":{},"interfaces/IStringFieldOptions.html":{}}}],["isenum(enumvalue",{"_index":955,"title":{},"body":{"interfaces/IFieldOptions.html":{},"interfaces/INumberFieldOptions.html":{},"interfaces/IStringFieldOptions.html":{}}}],["isglobal",{"_index":88,"title":{},"body":{"modules/AppModule.html":{}}}],["isimage",{"_index":1413,"title":{},"body":{"injectables/ValidatorService.html":{}}}],["isimage(mimetype",{"_index":1414,"title":{},"body":{"injectables/ValidatorService.html":{}}}],["isint",{"_index":874,"title":{},"body":{"interfaces/IFieldOptions.html":{},"interfaces/INumberFieldOptions.html":{},"interfaces/IStringFieldOptions.html":{}}}],["isnullable",{"_index":892,"title":{},"body":{"interfaces/IFieldOptions.html":{},"interfaces/INumberFieldOptions.html":{},"interfaces/IStringFieldOptions.html":{},"coverage.html":{}}}],["isnumber",{"_index":875,"title":{},"body":{"interfaces/IFieldOptions.html":{},"interfaces/INumberFieldOptions.html":{},"interfaces/IStringFieldOptions.html":{}}}],["isoptional",{"_index":427,"title":{},"body":{"classes/BaseDto.html":{}}}],["ispassword",{"_index":893,"title":{},"body":{"interfaces/IFieldOptions.html":{},"interfaces/INumberFieldOptions.html":{},"interfaces/IStringFieldOptions.html":{},"coverage.html":{}}}],["ispasswordvalid",{"_index":407,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["isphonenumber",{"_index":894,"title":{},"body":{"interfaces/IFieldOptions.html":{},"interfaces/INumberFieldOptions.html":{},"interfaces/IStringFieldOptions.html":{},"coverage.html":{}}}],["ispositive",{"_index":876,"title":{},"body":{"interfaces/IFieldOptions.html":{},"interfaces/INumberFieldOptions.html":{},"interfaces/IStringFieldOptions.html":{}}}],["isstring",{"_index":877,"title":{},"body":{"interfaces/IFieldOptions.html":{},"interfaces/INumberFieldOptions.html":{},"interfaces/IStringFieldOptions.html":{}}}],["istemporarykey",{"_index":896,"title":{},"body":{"interfaces/IFieldOptions.html":{},"interfaces/INumberFieldOptions.html":{},"interfaces/IStringFieldOptions.html":{}}}],["istmpkey",{"_index":895,"title":{},"body":{"interfaces/IFieldOptions.html":{},"interfaces/INumberFieldOptions.html":{},"interfaces/IStringFieldOptions.html":{},"coverage.html":{}}}],["istringfieldoptions",{"_index":902,"title":{"interfaces/IStringFieldOptions.html":{}},"body":{"interfaces/IFieldOptions.html":{},"interfaces/INumberFieldOptions.html":{},"interfaces/IStringFieldOptions.html":{},"coverage.html":{}}}],["isundefinable",{"_index":897,"title":{},"body":{"interfaces/IFieldOptions.html":{},"interfaces/INumberFieldOptions.html":{},"interfaces/IStringFieldOptions.html":{},"coverage.html":{}}}],["isurl",{"_index":878,"title":{},"body":{"interfaces/IFieldOptions.html":{},"interfaces/INumberFieldOptions.html":{},"interfaces/IStringFieldOptions.html":{}}}],["isuuid",{"_index":428,"title":{},"body":{"classes/BaseDto.html":{},"interfaces/IFieldOptions.html":{},"interfaces/INumberFieldOptions.html":{},"interfaces/IStringFieldOptions.html":{}}}],["isuuid('4",{"_index":969,"title":{},"body":{"interfaces/IFieldOptions.html":{},"interfaces/INumberFieldOptions.html":{},"interfaces/IStringFieldOptions.html":{}}}],["it.toobject",{"_index":799,"title":{},"body":{"injectables/CrudService.html":{}}}],["items",{"_index":795,"title":{},"body":{"injectables/CrudService.html":{}}}],["items.map((it",{"_index":798,"title":{},"body":{"injectables/CrudService.html":{}}}],["join",{"_index":1560,"title":{},"body":{"index.html":{}}}],["jwt",{"_index":363,"title":{},"body":{"modules/AuthenticationModule.html":{},"injectables/JwtStrategy.html":{},"dependencies.html":{}}}],["jwtconfig",{"_index":112,"title":{},"body":{"injectables/AppService.html":{},"modules/AuthenticationModule.html":{},"injectables/JwtStrategy.html":{},"miscellaneous/typealiases.html":{}}}],["jwtconfig.privatekey",{"_index":116,"title":{},"body":{"injectables/AppService.html":{},"modules/AuthenticationModule.html":{}}}],["jwtconfig.publickey",{"_index":368,"title":{},"body":{"modules/AuthenticationModule.html":{},"injectables/JwtStrategy.html":{}}}],["jwtfromrequest",{"_index":999,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["jwtmodule",{"_index":354,"title":{},"body":{"modules/AuthenticationModule.html":{}}}],["jwtmodule.registerasync",{"_index":364,"title":{},"body":{"modules/AuthenticationModule.html":{}}}],["jwtservice",{"_index":378,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["jwtstrategy",{"_index":352,"title":{"injectables/JwtStrategy.html":{}},"body":{"modules/AuthenticationModule.html":{},"injectables/JwtStrategy.html":{},"coverage.html":{},"overview.html":{}}}],["kamil",{"_index":1568,"title":{},"body":{"index.html":{}}}],["key",{"_index":843,"title":{},"body":{"classes/GeneratorProvider.html":{}}}],["keyoftype",{"_index":1595,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["legend",{"_index":36,"title":{},"body":{"modules/AppModule.html":{},"modules/ArticlesModule.html":{},"modules/AuthenticationModule.html":{},"modules/CategoriesModule.html":{},"modules/CommentsModule.html":{},"modules/CommonNamesModule.html":{},"modules/ManufacturersModule.html":{},"modules/ReviewsModule.html":{},"modules/SharedModule.html":{},"modules/SourcesModule.html":{},"modules/SteroidsModule.html":{},"modules/UsersModule.html":{},"modules/_SteroidsModule.html":{},"overview.html":{}}}],["length",{"_index":836,"title":{},"body":{"classes/GeneratorProvider.html":{}}}],["license",{"_index":1574,"title":{},"body":{"index.html":{},"properties.html":{}}}],["licensed",{"_index":1550,"title":{},"body":{"index.html":{}}}],["limit",{"_index":176,"title":{},"body":{"classes/ArticleDto.html":{},"classes/ArticleQueryDto.html":{},"classes/CategoryDto.html":{},"classes/CategoryQueryDto.html":{},"classes/CommentDto.html":{},"classes/CommentQueryDto.html":{},"classes/CommonNameDto.html":{},"classes/CommonNameQueryDto.html":{},"injectables/CrudService.html":{},"classes/ManufacturerDto.html":{},"classes/ManufacturerQueryDto.html":{},"classes/PaginationQueryDto.html":{},"classes/ReviewDto.html":{},"classes/ReviewQueryDto.html":{},"classes/SourceDto.html":{},"classes/SourceQueryDto.html":{},"classes/SteroidCommentsCountDto.html":{},"classes/SteroidDto.html":{},"classes/SteroidQueryDto.html":{},"classes/UpdateArticleDto.html":{},"classes/UpdateCategoryDto.html":{},"classes/UpdateCommentDto.html":{},"classes/UpdateCommonNameDto.html":{},"classes/UpdateManufacturerDto.html":{},"classes/UpdateReviewDto.html":{},"classes/UpdateSourceDto.html":{},"classes/UpdateSteroidDto.html":{},"classes/UpdateUserDto.html":{},"classes/UserDto.html":{},"classes/UserQueryDto.html":{}}}],["line",{"_index":945,"title":{},"body":{"interfaces/IFieldOptions.html":{},"interfaces/INumberFieldOptions.html":{},"interfaces/IStringFieldOptions.html":{}}}],["list",{"_index":210,"title":{},"body":{"controllers/ArticlesController.html":{},"controllers/CategoriesController.html":{},"controllers/CommentsController.html":{},"controllers/CommonNamesController.html":{},"controllers/ManufacturersController.html":{},"controllers/ReviewsController.html":{},"controllers/SourcesController.html":{},"controllers/SteroidsController.html":{}}}],["literal",{"_index":381,"title":{},"body":{"injectables/AuthenticationService.html":{},"injectables/JwtStrategy.html":{},"miscellaneous/typealiases.html":{}}}],["load",{"_index":90,"title":{},"body":{"modules/AppModule.html":{}}}],["loaded",{"_index":212,"title":{},"body":{"controllers/ArticlesController.html":{},"controllers/CategoriesController.html":{},"controllers/CommentsController.html":{},"controllers/CommonNamesController.html":{},"controllers/ManufacturersController.html":{},"controllers/ReviewsController.html":{},"controllers/SourcesController.html":{},"controllers/SteroidsController.html":{}}}],["local",{"_index":1494,"title":{},"body":{"dependencies.html":{}}}],["localfield",{"_index":1608,"title":{},"body":{"miscellaneous/variables.html":{}}}],["login.dto",{"_index":323,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthenticationService.html":{}}}],["login.dto.ts",{"_index":1381,"title":{},"body":{"classes/UserLoginDto.html":{},"coverage.html":{}}}],["login.dto.ts:11",{"_index":1383,"title":{},"body":{"classes/UserLoginDto.html":{}}}],["login.dto.ts:8",{"_index":1384,"title":{},"body":{"classes/UserLoginDto.html":{}}}],["loginpayloaddto",{"_index":308,"title":{"classes/LoginPayloadDto.html":{}},"body":{"controllers/AuthController.html":{},"classes/LoginPayloadDto.html":{},"coverage.html":{}}}],["loginpayloaddto(user",{"_index":344,"title":{},"body":{"controllers/AuthController.html":{}}}],["lookup",{"_index":1607,"title":{},"body":{"miscellaneous/variables.html":{}}}],["manufacturer",{"_index":1014,"title":{"classes/Manufacturer.html":{}},"body":{"classes/Manufacturer.html":{},"controllers/ManufacturersController.html":{},"modules/ManufacturersModule.html":{},"injectables/ManufacturersService.html":{},"classes/Steroid.html":{},"classes/SteroidCommentsCountDto.html":{},"classes/SteroidDto.html":{},"classes/SteroidQueryDto.html":{},"classes/UpdateSteroidDto.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["manufacturer'})@apiresponse({status",{"_index":1034,"title":{},"body":{"controllers/ManufacturersController.html":{}}}],["manufacturer.dto",{"_index":1051,"title":{},"body":{"controllers/ManufacturersController.html":{},"injectables/ManufacturersService.html":{}}}],["manufacturer.dto.ts",{"_index":704,"title":{},"body":{"classes/CreateManufacturerDto.html":{},"coverage.html":{}}}],["manufacturer.dto.ts:5",{"_index":705,"title":{},"body":{"classes/CreateManufacturerDto.html":{}}}],["manufacturer.name",{"_index":1071,"title":{},"body":{"modules/ManufacturersModule.html":{},"classes/Steroid.html":{}}}],["manufacturer.schema",{"_index":1069,"title":{},"body":{"modules/ManufacturersModule.html":{},"injectables/ManufacturersService.html":{}}}],["manufacturerdocument",{"_index":1018,"title":{},"body":{"classes/Manufacturer.html":{},"injectables/ManufacturersService.html":{},"miscellaneous/typealiases.html":{}}}],["manufacturerdto",{"_index":1022,"title":{"classes/ManufacturerDto.html":{}},"body":{"classes/ManufacturerDto.html":{},"classes/ManufacturerQueryDto.html":{},"controllers/ManufacturersController.html":{},"injectables/ManufacturersService.html":{},"classes/SteroidCommentsCountDto.html":{},"classes/SteroidDto.html":{},"classes/SteroidQueryDto.html":{},"classes/UpdateManufacturerDto.html":{},"classes/UpdateSteroidDto.html":{},"coverage.html":{}}}],["manufacturerdto})@apiresponse({status",{"_index":1035,"title":{},"body":{"controllers/ManufacturersController.html":{}}}],["manufacturerdto})@transform",{"_index":1273,"title":{},"body":{"classes/SteroidDto.html":{}}}],["manufacturerid",{"_index":722,"title":{},"body":{"classes/CreateSteroidDto.html":{},"controllers/ManufacturersController.html":{},"classes/Steroid.html":{},"classes/SteroidCommentsCountDto.html":{},"classes/SteroidDto.html":{},"classes/SteroidQueryDto.html":{},"classes/UpdateSteroidDto.html":{},"miscellaneous/variables.html":{}}}],["manufacturermodel",{"_index":1075,"title":{},"body":{"injectables/ManufacturersService.html":{}}}],["manufacturernames",{"_index":1077,"title":{},"body":{"injectables/ManufacturersService.html":{}}}],["manufacturernames.map((name",{"_index":1082,"title":{},"body":{"injectables/ManufacturersService.html":{}}}],["manufacturerquerydto",{"_index":1027,"title":{"classes/ManufacturerQueryDto.html":{}},"body":{"classes/ManufacturerDto.html":{},"classes/ManufacturerQueryDto.html":{},"controllers/ManufacturersController.html":{},"injectables/ManufacturersService.html":{},"classes/UpdateManufacturerDto.html":{},"coverage.html":{}}}],["manufacturers",{"_index":1032,"title":{},"body":{"controllers/ManufacturersController.html":{},"modules/_SteroidsModule.html":{},"miscellaneous/variables.html":{}}}],["manufacturers'})@apiresponse({status",{"_index":1041,"title":{},"body":{"controllers/ManufacturersController.html":{}}}],["manufacturers.controller",{"_index":1070,"title":{},"body":{"modules/ManufacturersModule.html":{}}}],["manufacturers.service",{"_index":1050,"title":{},"body":{"controllers/ManufacturersController.html":{},"modules/ManufacturersModule.html":{}}}],["manufacturers/dto/manufacturer.dto",{"_index":1259,"title":{},"body":{"classes/SteroidCommentsCountDto.html":{},"classes/SteroidDto.html":{},"classes/SteroidQueryDto.html":{},"classes/UpdateSteroidDto.html":{}}}],["manufacturers/manufacturer.schema",{"_index":1245,"title":{},"body":{"classes/Steroid.html":{}}}],["manufacturerschema",{"_index":1019,"title":{},"body":{"classes/Manufacturer.html":{},"modules/ManufacturersModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["manufacturerschema.pre('save",{"_index":1021,"title":{},"body":{"classes/Manufacturer.html":{}}}],["manufacturerscontroller",{"_index":1030,"title":{"controllers/ManufacturersController.html":{}},"body":{"controllers/ManufacturersController.html":{},"modules/ManufacturersModule.html":{},"coverage.html":{}}}],["manufacturersdto",{"_index":1081,"title":{},"body":{"injectables/ManufacturersService.html":{}}}],["manufacturerservice",{"_index":1055,"title":{},"body":{"controllers/ManufacturersController.html":{}}}],["manufacturersmodule",{"_index":1065,"title":{"modules/ManufacturersModule.html":{}},"body":{"modules/ManufacturersModule.html":{},"modules/_SteroidsModule.html":{},"modules.html":{},"overview.html":{}}}],["manufacturersservice",{"_index":1049,"title":{"injectables/ManufacturersService.html":{}},"body":{"controllers/ManufacturersController.html":{},"modules/ManufacturersModule.html":{},"injectables/ManufacturersService.html":{},"coverage.html":{},"overview.html":{}}}],["matching",{"_index":31,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/Article.html":{},"classes/ArticleDto.html":{},"classes/ArticleQueryDto.html":{},"controllers/ArticlesController.html":{},"modules/ArticlesModule.html":{},"injectables/ArticlesService.html":{},"controllers/AuthController.html":{},"modules/AuthenticationModule.html":{},"injectables/AuthenticationService.html":{},"classes/Base.html":{},"classes/BaseDto.html":{},"controllers/CategoriesController.html":{},"modules/CategoriesModule.html":{},"injectables/CategoriesService.html":{},"classes/Category.html":{},"classes/CategoryDto.html":{},"classes/CategoryQueryDto.html":{},"classes/Comment.html":{},"classes/CommentDto.html":{},"classes/CommentQueryDto.html":{},"controllers/CommentsController.html":{},"modules/CommentsModule.html":{},"injectables/CommentsService.html":{},"classes/CommonName.html":{},"classes/CommonNameDto.html":{},"classes/CommonNameQueryDto.html":{},"controllers/CommonNamesController.html":{},"modules/CommonNamesModule.html":{},"injectables/CommonNamesService.html":{},"classes/CreateArticleDto.html":{},"classes/CreateCategoryDto.html":{},"classes/CreateCommentDto.html":{},"classes/CreateCommonNameDto.html":{},"classes/CreateManufacturerDto.html":{},"classes/CreateReviewDto.html":{},"classes/CreateSourceDto.html":{},"classes/CreateSteroidDto.html":{},"classes/CreateUserDto.html":{},"injectables/CrudService.html":{},"classes/FileNotImageException.html":{},"classes/GeneratorProvider.html":{},"injectables/GeneratorService.html":{},"interfaces/IApiFile.html":{},"interfaces/IFieldOptions.html":{},"interfaces/IFile.html":{},"interfaces/INumberFieldOptions.html":{},"interfaces/IStringFieldOptions.html":{},"injectables/JwtStrategy.html":{},"classes/LoginPayloadDto.html":{},"classes/Manufacturer.html":{},"classes/ManufacturerDto.html":{},"classes/ManufacturerQueryDto.html":{},"controllers/ManufacturersController.html":{},"modules/ManufacturersModule.html":{},"injectables/ManufacturersService.html":{},"classes/PaginationQueryDto.html":{},"classes/Review.html":{},"classes/ReviewDto.html":{},"classes/ReviewQueryDto.html":{},"controllers/ReviewsController.html":{},"modules/ReviewsModule.html":{},"injectables/ReviewsService.html":{},"modules/SharedModule.html":{},"classes/Source.html":{},"classes/SourceDto.html":{},"classes/SourceQueryDto.html":{},"controllers/SourcesController.html":{},"modules/SourcesModule.html":{},"injectables/SourcesService.html":{},"classes/Steroid.html":{},"classes/SteroidCommentsCountDto.html":{},"classes/SteroidDto.html":{},"classes/SteroidQueryDto.html":{},"controllers/SteroidsController.html":{},"modules/SteroidsModule.html":{},"injectables/SteroidsService.html":{},"classes/TokenPayloadDto.html":{},"classes/UpdateArticleDto.html":{},"classes/UpdateCategoryDto.html":{},"classes/UpdateCommentDto.html":{},"classes/UpdateCommonNameDto.html":{},"classes/UpdateManufacturerDto.html":{},"classes/UpdateReviewDto.html":{},"classes/UpdateSourceDto.html":{},"classes/UpdateSteroidDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"classes/UserDto.html":{},"classes/UserLoginDto.html":{},"classes/UserQueryDto.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"injectables/ValidatorService.html":{},"modules/_SteroidsModule.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["max",{"_index":879,"title":{},"body":{"interfaces/IFieldOptions.html":{},"interfaces/INumberFieldOptions.html":{},"interfaces/IStringFieldOptions.html":{}}}],["maxlength",{"_index":684,"title":{},"body":{"classes/CreateArticleDto.html":{},"classes/CreateCategoryDto.html":{},"classes/CreateCommentDto.html":{},"classes/CreateCommonNameDto.html":{},"classes/CreateManufacturerDto.html":{},"classes/CreateReviewDto.html":{},"classes/CreateSourceDto.html":{},"interfaces/IFieldOptions.html":{},"interfaces/INumberFieldOptions.html":{},"interfaces/IStringFieldOptions.html":{}}}],["metadata",{"_index":1499,"title":{},"body":{"dependencies.html":{}}}],["methods",{"_index":8,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/ArticlesController.html":{},"injectables/ArticlesService.html":{},"controllers/AuthController.html":{},"injectables/AuthenticationService.html":{},"controllers/CategoriesController.html":{},"injectables/CategoriesService.html":{},"controllers/CommentsController.html":{},"injectables/CommentsService.html":{},"controllers/CommonNamesController.html":{},"injectables/CommonNamesService.html":{},"injectables/CrudService.html":{},"classes/GeneratorProvider.html":{},"injectables/GeneratorService.html":{},"injectables/JwtStrategy.html":{},"controllers/ManufacturersController.html":{},"injectables/ManufacturersService.html":{},"controllers/ReviewsController.html":{},"injectables/ReviewsService.html":{},"controllers/SourcesController.html":{},"injectables/SourcesService.html":{},"controllers/SteroidsController.html":{},"injectables/SteroidsService.html":{},"injectables/UsersService.html":{},"injectables/ValidatorService.html":{}}}],["middlewareconsumer",{"_index":59,"title":{},"body":{"modules/AppModule.html":{}}}],["mimetype",{"_index":980,"title":{},"body":{"interfaces/IFile.html":{},"injectables/ValidatorService.html":{}}}],["min",{"_index":880,"title":{},"body":{"interfaces/IFieldOptions.html":{},"interfaces/INumberFieldOptions.html":{},"interfaces/IStringFieldOptions.html":{}}}],["minlength",{"_index":689,"title":{},"body":{"classes/CreateArticleDto.html":{},"classes/CreateCategoryDto.html":{},"classes/CreateCommentDto.html":{},"classes/CreateCommonNameDto.html":{},"classes/CreateManufacturerDto.html":{},"classes/CreateReviewDto.html":{},"classes/CreateSourceDto.html":{},"interfaces/IFieldOptions.html":{},"interfaces/INumberFieldOptions.html":{},"interfaces/IStringFieldOptions.html":{}}}],["miscellaneous",{"_index":1503,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["mit",{"_index":1549,"title":{},"body":{"index.html":{}}}],["mode",{"_index":1540,"title":{},"body":{"index.html":{}}}],["model",{"_index":276,"title":{},"body":{"injectables/ArticlesService.html":{},"injectables/CategoriesService.html":{},"injectables/CommentsService.html":{},"injectables/CommonNamesService.html":{},"injectables/CrudService.html":{},"injectables/ManufacturersService.html":{},"injectables/ReviewsService.html":{},"injectables/SourcesService.html":{},"injectables/SteroidsService.html":{},"injectables/UsersService.html":{}}}],["model.acknowledged",{"_index":808,"title":{},"body":{"injectables/CrudService.html":{}}}],["module",{"_index":32,"title":{"modules/AppModule.html":{},"modules/ArticlesModule.html":{},"modules/AuthenticationModule.html":{},"modules/CategoriesModule.html":{},"modules/CommentsModule.html":{},"modules/CommonNamesModule.html":{},"modules/ManufacturersModule.html":{},"modules/ReviewsModule.html":{},"modules/SharedModule.html":{},"modules/SourcesModule.html":{},"modules/SteroidsModule.html":{},"modules/UsersModule.html":{},"modules/_SteroidsModule.html":{}},"body":{"modules/AppModule.html":{},"modules/ArticlesModule.html":{},"modules/AuthenticationModule.html":{},"modules/CategoriesModule.html":{},"modules/CommentsModule.html":{},"modules/CommonNamesModule.html":{},"modules/ManufacturersModule.html":{},"modules/ReviewsModule.html":{},"modules/SharedModule.html":{},"modules/SourcesModule.html":{},"modules/SteroidsModule.html":{},"modules/UsersModule.html":{},"modules/_SteroidsModule.html":{},"overview.html":{}}}],["modules",{"_index":34,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/ArticlesModule.html":{},"modules/AuthenticationModule.html":{},"modules/CategoriesModule.html":{},"modules/CommentsModule.html":{},"modules/CommonNamesModule.html":{},"modules/ManufacturersModule.html":{},"modules/ReviewsModule.html":{},"modules/SharedModule.html":{},"modules/SourcesModule.html":{},"modules/SteroidsModule.html":{},"modules/UsersModule.html":{},"modules/_SteroidsModule.html":{},"modules.html":{},"overview.html":{}}}],["modules/articles",{"_index":75,"title":{},"body":{"modules/AppModule.html":{}}}],["modules/authentication/authentication.module",{"_index":79,"title":{},"body":{"modules/AppModule.html":{}}}],["modules/categories/categories.module",{"_index":68,"title":{},"body":{"modules/AppModule.html":{}}}],["modules/comments/comments.module",{"_index":69,"title":{},"body":{"modules/AppModule.html":{}}}],["modules/reviews",{"_index":86,"title":{},"body":{"modules/AppModule.html":{}}}],["modules/sources/sources.module",{"_index":67,"title":{},"body":{"modules/AppModule.html":{}}}],["modules/steroids/steroids.module",{"_index":83,"title":{},"body":{"modules/AppModule.html":{}}}],["modules/users/users.module",{"_index":78,"title":{},"body":{"modules/AppModule.html":{}}}],["mongoose",{"_index":135,"title":{},"body":{"classes/Article.html":{},"injectables/ArticlesService.html":{},"injectables/CategoriesService.html":{},"classes/Category.html":{},"classes/Comment.html":{},"injectables/CommentsService.html":{},"classes/CommonName.html":{},"injectables/CommonNamesService.html":{},"classes/Manufacturer.html":{},"injectables/ManufacturersService.html":{},"classes/Review.html":{},"injectables/ReviewsService.html":{},"classes/Source.html":{},"injectables/SourcesService.html":{},"classes/Steroid.html":{},"injectables/SteroidsService.html":{},"classes/User.html":{},"injectables/UsersService.html":{},"dependencies.html":{}}}],["mongoose.document",{"_index":139,"title":{},"body":{"classes/Article.html":{},"classes/Category.html":{},"classes/Comment.html":{},"classes/CommonName.html":{},"classes/Manufacturer.html":{},"classes/Review.html":{},"classes/Source.html":{},"classes/Steroid.html":{},"classes/User.html":{}}}],["mongoose.schema.types.objectid",{"_index":140,"title":{},"body":{"classes/Article.html":{},"classes/Comment.html":{},"classes/CommonName.html":{},"classes/Manufacturer.html":{},"classes/Review.html":{},"classes/Source.html":{},"classes/Steroid.html":{},"miscellaneous/variables.html":{}}}],["mongoose.types.objectid",{"_index":519,"title":{},"body":{"classes/Comment.html":{},"classes/Review.html":{}}}],["mongoosemodule",{"_index":76,"title":{},"body":{"modules/AppModule.html":{},"modules/ArticlesModule.html":{},"modules/CategoriesModule.html":{},"modules/CommentsModule.html":{},"modules/CommonNamesModule.html":{},"modules/ManufacturersModule.html":{},"modules/ReviewsModule.html":{},"modules/SourcesModule.html":{},"modules/SteroidsModule.html":{},"modules/UsersModule.html":{}}}],["mongoosemodule.forfeature",{"_index":269,"title":{},"body":{"modules/ArticlesModule.html":{},"modules/CategoriesModule.html":{},"modules/CommentsModule.html":{},"modules/CommonNamesModule.html":{},"modules/ManufacturersModule.html":{},"modules/ReviewsModule.html":{},"modules/SourcesModule.html":{},"modules/SteroidsModule.html":{},"modules/UsersModule.html":{}}}],["mongoosemodule.forrootasync",{"_index":91,"title":{},"body":{"modules/AppModule.html":{}}}],["more",{"_index":1563,"title":{},"body":{"index.html":{}}}],["myśliwiec",{"_index":1569,"title":{},"body":{"index.html":{}}}],["name",{"_index":62,"title":{},"body":{"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/ArticlesController.html":{},"modules/ArticlesModule.html":{},"injectables/ArticlesService.html":{},"controllers/AuthController.html":{},"injectables/AuthenticationService.html":{},"controllers/CategoriesController.html":{},"modules/CategoriesModule.html":{},"injectables/CategoriesService.html":{},"classes/Category.html":{},"classes/CategoryDto.html":{},"classes/CategoryQueryDto.html":{},"controllers/CommentsController.html":{},"modules/CommentsModule.html":{},"injectables/CommentsService.html":{},"classes/CommonName.html":{},"classes/CommonNameDto.html":{},"classes/CommonNameQueryDto.html":{},"controllers/CommonNamesController.html":{},"modules/CommonNamesModule.html":{},"injectables/CommonNamesService.html":{},"classes/CreateCommonNameDto.html":{},"classes/CreateManufacturerDto.html":{},"classes/CreateSteroidDto.html":{},"injectables/CrudService.html":{},"classes/FileNotImageException.html":{},"classes/GeneratorProvider.html":{},"injectables/GeneratorService.html":{},"interfaces/IApiFile.html":{},"injectables/JwtStrategy.html":{},"classes/LoginPayloadDto.html":{},"classes/Manufacturer.html":{},"classes/ManufacturerDto.html":{},"classes/ManufacturerQueryDto.html":{},"controllers/ManufacturersController.html":{},"modules/ManufacturersModule.html":{},"injectables/ManufacturersService.html":{},"controllers/ReviewsController.html":{},"modules/ReviewsModule.html":{},"injectables/ReviewsService.html":{},"controllers/SourcesController.html":{},"modules/SourcesModule.html":{},"injectables/SourcesService.html":{},"classes/Steroid.html":{},"classes/SteroidCommentsCountDto.html":{},"classes/SteroidDto.html":{},"classes/SteroidQueryDto.html":{},"controllers/SteroidsController.html":{},"modules/SteroidsModule.html":{},"injectables/SteroidsService.html":{},"classes/UpdateCategoryDto.html":{},"classes/UpdateCommonNameDto.html":{},"classes/UpdateManufacturerDto.html":{},"classes/UpdateSteroidDto.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"injectables/ValidatorService.html":{},"miscellaneous/variables.html":{}}}],["name.dto",{"_index":647,"title":{},"body":{"controllers/CommonNamesController.html":{},"injectables/CommonNamesService.html":{},"classes/SteroidCommentsCountDto.html":{},"classes/SteroidDto.html":{},"classes/SteroidQueryDto.html":{},"classes/UpdateSteroidDto.html":{}}}],["name.dto.ts",{"_index":615,"title":{},"body":{"classes/CommonNameDto.html":{},"classes/CommonNameQueryDto.html":{},"classes/CreateCommonNameDto.html":{},"classes/UpdateCommonNameDto.html":{},"coverage.html":{}}}],["name.dto.ts:10",{"_index":616,"title":{},"body":{"classes/CommonNameDto.html":{}}}],["name.dto.ts:22",{"_index":621,"title":{},"body":{"classes/CommonNameQueryDto.html":{}}}],["name.dto.ts:26",{"_index":620,"title":{},"body":{"classes/CommonNameQueryDto.html":{}}}],["name.dto.ts:5",{"_index":701,"title":{},"body":{"classes/CreateCommonNameDto.html":{}}}],["name.schema",{"_index":666,"title":{},"body":{"modules/CommonNamesModule.html":{},"injectables/CommonNamesService.html":{},"classes/Steroid.html":{}}}],["name.schema.ts",{"_index":606,"title":{},"body":{"classes/CommonName.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["name.schema.ts:12",{"_index":608,"title":{},"body":{"classes/CommonName.html":{}}}],["name.schema.ts:15",{"_index":607,"title":{},"body":{"classes/CommonName.html":{}}}],["names",{"_index":625,"title":{},"body":{"controllers/CommonNamesController.html":{},"injectables/CommonNamesService.html":{}}}],["names.controller",{"_index":667,"title":{},"body":{"modules/CommonNamesModule.html":{}}}],["names.controller.ts",{"_index":623,"title":{},"body":{"controllers/CommonNamesController.html":{},"coverage.html":{}}}],["names.controller.ts:114",{"_index":633,"title":{},"body":{"controllers/CommonNamesController.html":{}}}],["names.controller.ts:46",{"_index":630,"title":{},"body":{"controllers/CommonNamesController.html":{}}}],["names.controller.ts:63",{"_index":637,"title":{},"body":{"controllers/CommonNamesController.html":{}}}],["names.controller.ts:80",{"_index":640,"title":{},"body":{"controllers/CommonNamesController.html":{}}}],["names.controller.ts:97",{"_index":643,"title":{},"body":{"controllers/CommonNamesController.html":{}}}],["names.module",{"_index":1425,"title":{},"body":{"modules/_SteroidsModule.html":{}}}],["names.module.ts",{"_index":665,"title":{},"body":{"modules/CommonNamesModule.html":{}}}],["names.service",{"_index":645,"title":{},"body":{"controllers/CommonNamesController.html":{},"modules/CommonNamesModule.html":{}}}],["names.service.ts",{"_index":669,"title":{},"body":{"injectables/CommonNamesService.html":{},"coverage.html":{}}}],["names.service.ts:23",{"_index":671,"title":{},"body":{"injectables/CommonNamesService.html":{}}}],["names.service.ts:31",{"_index":673,"title":{},"body":{"injectables/CommonNamesService.html":{}}}],["names/common",{"_index":605,"title":{},"body":{"classes/CommonName.html":{},"controllers/CommonNamesController.html":{},"modules/CommonNamesModule.html":{},"injectables/CommonNamesService.html":{},"classes/Steroid.html":{},"modules/_SteroidsModule.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["names/dto/common",{"_index":614,"title":{},"body":{"classes/CommonNameDto.html":{},"classes/CommonNameQueryDto.html":{},"classes/SteroidCommentsCountDto.html":{},"classes/SteroidDto.html":{},"classes/SteroidQueryDto.html":{},"classes/UpdateCommonNameDto.html":{},"classes/UpdateSteroidDto.html":{},"coverage.html":{}}}],["names/dto/create",{"_index":699,"title":{},"body":{"classes/CreateCommonNameDto.html":{},"coverage.html":{}}}],["nest",{"_index":1529,"title":{},"body":{"index.html":{}}}],["nestframework",{"_index":1573,"title":{},"body":{"index.html":{}}}],["nestjs/common",{"_index":18,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/ArticlesController.html":{},"modules/ArticlesModule.html":{},"injectables/ArticlesService.html":{},"controllers/AuthController.html":{},"modules/AuthenticationModule.html":{},"injectables/AuthenticationService.html":{},"controllers/CategoriesController.html":{},"modules/CategoriesModule.html":{},"injectables/CategoriesService.html":{},"controllers/CommentsController.html":{},"modules/CommentsModule.html":{},"injectables/CommentsService.html":{},"controllers/CommonNamesController.html":{},"modules/CommonNamesModule.html":{},"injectables/CommonNamesService.html":{},"injectables/CrudService.html":{},"classes/FileNotImageException.html":{},"injectables/GeneratorService.html":{},"interfaces/IFieldOptions.html":{},"interfaces/INumberFieldOptions.html":{},"interfaces/IStringFieldOptions.html":{},"injectables/JwtStrategy.html":{},"controllers/ManufacturersController.html":{},"modules/ManufacturersModule.html":{},"injectables/ManufacturersService.html":{},"controllers/ReviewsController.html":{},"modules/ReviewsModule.html":{},"injectables/ReviewsService.html":{},"modules/SharedModule.html":{},"controllers/SourcesController.html":{},"modules/SourcesModule.html":{},"injectables/SourcesService.html":{},"controllers/SteroidsController.html":{},"modules/SteroidsModule.html":{},"injectables/SteroidsService.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"injectables/ValidatorService.html":{},"modules/_SteroidsModule.html":{},"dependencies.html":{}}}],["nestjs/config",{"_index":74,"title":{},"body":{"modules/AppModule.html":{},"injectables/AppService.html":{},"modules/AuthenticationModule.html":{},"injectables/AuthenticationService.html":{},"injectables/JwtStrategy.html":{},"dependencies.html":{}}}],["nestjs/core",{"_index":1480,"title":{},"body":{"dependencies.html":{}}}],["nestjs/cqrs",{"_index":1170,"title":{},"body":{"modules/SharedModule.html":{},"dependencies.html":{}}}],["nestjs/jwt",{"_index":355,"title":{},"body":{"modules/AuthenticationModule.html":{},"injectables/AuthenticationService.html":{},"dependencies.html":{}}}],["nestjs/mongoose",{"_index":77,"title":{},"body":{"modules/AppModule.html":{},"classes/Article.html":{},"modules/ArticlesModule.html":{},"injectables/ArticlesService.html":{},"classes/Base.html":{},"modules/CategoriesModule.html":{},"injectables/CategoriesService.html":{},"classes/Category.html":{},"classes/Comment.html":{},"modules/CommentsModule.html":{},"injectables/CommentsService.html":{},"classes/CommonName.html":{},"modules/CommonNamesModule.html":{},"injectables/CommonNamesService.html":{},"classes/Manufacturer.html":{},"modules/ManufacturersModule.html":{},"injectables/ManufacturersService.html":{},"classes/Review.html":{},"modules/ReviewsModule.html":{},"injectables/ReviewsService.html":{},"classes/Source.html":{},"modules/SourcesModule.html":{},"injectables/SourcesService.html":{},"classes/Steroid.html":{},"modules/SteroidsModule.html":{},"injectables/SteroidsService.html":{},"classes/User.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"dependencies.html":{}}}],["nestjs/passport",{"_index":239,"title":{},"body":{"controllers/ArticlesController.html":{},"modules/AuthenticationModule.html":{},"controllers/CategoriesController.html":{},"controllers/CommentsController.html":{},"controllers/CommonNamesController.html":{},"injectables/JwtStrategy.html":{},"controllers/ManufacturersController.html":{},"controllers/ReviewsController.html":{},"controllers/SourcesController.html":{},"controllers/SteroidsController.html":{},"dependencies.html":{}}}],["nestjs/platform",{"_index":1484,"title":{},"body":{"dependencies.html":{}}}],["nestjs/swagger",{"_index":22,"title":{},"body":{"controllers/AppController.html":{},"classes/ArticleDto.html":{},"classes/ArticleQueryDto.html":{},"controllers/ArticlesController.html":{},"controllers/AuthController.html":{},"classes/BaseDto.html":{},"controllers/CategoriesController.html":{},"classes/CategoryDto.html":{},"classes/CategoryQueryDto.html":{},"classes/CommentDto.html":{},"classes/CommentQueryDto.html":{},"controllers/CommentsController.html":{},"classes/CommonNameDto.html":{},"classes/CommonNameQueryDto.html":{},"controllers/CommonNamesController.html":{},"interfaces/IFieldOptions.html":{},"interfaces/INumberFieldOptions.html":{},"interfaces/IStringFieldOptions.html":{},"classes/ManufacturerDto.html":{},"classes/ManufacturerQueryDto.html":{},"controllers/ManufacturersController.html":{},"classes/PaginationQueryDto.html":{},"classes/ReviewDto.html":{},"classes/ReviewQueryDto.html":{},"controllers/ReviewsController.html":{},"classes/SourceDto.html":{},"classes/SourceQueryDto.html":{},"controllers/SourcesController.html":{},"classes/SteroidCommentsCountDto.html":{},"classes/SteroidDto.html":{},"classes/SteroidQueryDto.html":{},"controllers/SteroidsController.html":{},"classes/UpdateArticleDto.html":{},"classes/UpdateCategoryDto.html":{},"classes/UpdateCommentDto.html":{},"classes/UpdateCommonNameDto.html":{},"classes/UpdateManufacturerDto.html":{},"classes/UpdateReviewDto.html":{},"classes/UpdateSourceDto.html":{},"classes/UpdateSteroidDto.html":{},"classes/UpdateUserDto.html":{},"classes/UserDto.html":{},"classes/UserQueryDto.html":{},"dependencies.html":{}}}],["nestmodule",{"_index":70,"title":{},"body":{"modules/AppModule.html":{}}}],["new",{"_index":343,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthenticationService.html":{},"injectables/CrudService.html":{},"classes/GeneratorProvider.html":{},"injectables/JwtStrategy.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["next",{"_index":102,"title":{},"body":{"modules/AppModule.html":{},"classes/Article.html":{},"classes/Category.html":{},"classes/Comment.html":{},"classes/CommonName.html":{},"interfaces/IFieldOptions.html":{},"interfaces/INumberFieldOptions.html":{},"interfaces/IStringFieldOptions.html":{},"classes/Manufacturer.html":{},"classes/Review.html":{},"classes/Source.html":{},"classes/Steroid.html":{},"classes/User.html":{}}}],["next(error",{"_index":1368,"title":{},"body":{"classes/User.html":{}}}],["node.js",{"_index":1521,"title":{},"body":{"index.html":{}}}],["notequals",{"_index":881,"title":{},"body":{"interfaces/IFieldOptions.html":{},"interfaces/INumberFieldOptions.html":{},"interfaces/IStringFieldOptions.html":{}}}],["notfoundexception",{"_index":386,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["npm",{"_index":1533,"title":{},"body":{"index.html":{}}}],["null",{"_index":797,"title":{},"body":{"injectables/CrudService.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"classes/UserDto.html":{},"classes/UserQueryDto.html":{}}}],["nullable",{"_index":866,"title":{},"body":{"interfaces/IFieldOptions.html":{},"interfaces/INumberFieldOptions.html":{},"interfaces/IStringFieldOptions.html":{}}}],["number",{"_index":175,"title":{},"body":{"classes/ArticleDto.html":{},"classes/ArticleQueryDto.html":{},"classes/CategoryDto.html":{},"classes/CategoryQueryDto.html":{},"classes/CommentDto.html":{},"classes/CommentQueryDto.html":{},"classes/CommonNameDto.html":{},"classes/CommonNameQueryDto.html":{},"classes/CreateUserDto.html":{},"classes/GeneratorProvider.html":{},"interfaces/IFieldOptions.html":{},"interfaces/IFile.html":{},"interfaces/INumberFieldOptions.html":{},"interfaces/IStringFieldOptions.html":{},"classes/ManufacturerDto.html":{},"classes/ManufacturerQueryDto.html":{},"classes/PaginationQueryDto.html":{},"classes/ReviewDto.html":{},"classes/ReviewQueryDto.html":{},"classes/SourceDto.html":{},"classes/SourceQueryDto.html":{},"classes/SteroidCommentsCountDto.html":{},"classes/SteroidDto.html":{},"classes/SteroidQueryDto.html":{},"classes/TokenPayloadDto.html":{},"classes/UpdateArticleDto.html":{},"classes/UpdateCategoryDto.html":{},"classes/UpdateCommentDto.html":{},"classes/UpdateCommonNameDto.html":{},"classes/UpdateManufacturerDto.html":{},"classes/UpdateReviewDto.html":{},"classes/UpdateSourceDto.html":{},"classes/UpdateSteroidDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"classes/UserDto.html":{},"classes/UserQueryDto.html":{}}}],["numberfield",{"_index":761,"title":{},"body":{"classes/CreateUserDto.html":{},"interfaces/IFieldOptions.html":{},"interfaces/INumberFieldOptions.html":{},"interfaces/IStringFieldOptions.html":{},"classes/SteroidCommentsCountDto.html":{},"classes/SteroidDto.html":{},"classes/SteroidQueryDto.html":{},"classes/TokenPayloadDto.html":{},"classes/UpdateSteroidDto.html":{},"classes/UpdateUserDto.html":{},"classes/UserDto.html":{},"classes/UserQueryDto.html":{},"coverage.html":{}}}],["numberfield({swagger",{"_index":743,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/TokenPayloadDto.html":{},"classes/UserDto.html":{}}}],["numberfieldoptional",{"_index":167,"title":{},"body":{"classes/ArticleDto.html":{},"classes/ArticleQueryDto.html":{},"classes/CategoryDto.html":{},"classes/CategoryQueryDto.html":{},"classes/CommentDto.html":{},"classes/CommentQueryDto.html":{},"classes/CommonNameDto.html":{},"classes/CommonNameQueryDto.html":{},"interfaces/IFieldOptions.html":{},"interfaces/INumberFieldOptions.html":{},"interfaces/IStringFieldOptions.html":{},"classes/ManufacturerDto.html":{},"classes/ManufacturerQueryDto.html":{},"classes/PaginationQueryDto.html":{},"classes/ReviewDto.html":{},"classes/ReviewQueryDto.html":{},"classes/SourceDto.html":{},"classes/SourceQueryDto.html":{},"classes/SteroidCommentsCountDto.html":{},"classes/SteroidDto.html":{},"classes/SteroidQueryDto.html":{},"classes/UpdateArticleDto.html":{},"classes/UpdateCategoryDto.html":{},"classes/UpdateCommentDto.html":{},"classes/UpdateCommonNameDto.html":{},"classes/UpdateManufacturerDto.html":{},"classes/UpdateReviewDto.html":{},"classes/UpdateSourceDto.html":{},"classes/UpdateSteroidDto.html":{},"classes/UpdateUserDto.html":{},"classes/UserDto.html":{},"classes/UserQueryDto.html":{},"coverage.html":{}}}],["obj",{"_index":1261,"title":{},"body":{"classes/SteroidCommentsCountDto.html":{},"classes/SteroidDto.html":{},"classes/SteroidQueryDto.html":{},"classes/UpdateSteroidDto.html":{}}}],["obj.commonnameid",{"_index":1262,"title":{},"body":{"classes/SteroidCommentsCountDto.html":{},"classes/SteroidDto.html":{},"classes/SteroidQueryDto.html":{},"classes/UpdateSteroidDto.html":{}}}],["obj.manufacturerid",{"_index":1264,"title":{},"body":{"classes/SteroidCommentsCountDto.html":{},"classes/SteroidDto.html":{},"classes/SteroidQueryDto.html":{},"classes/UpdateSteroidDto.html":{}}}],["objectid",{"_index":127,"title":{},"body":{"classes/Article.html":{},"classes/Comment.html":{},"classes/CommonName.html":{},"classes/Manufacturer.html":{},"classes/Review.html":{},"classes/Source.html":{},"classes/Steroid.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["omit",{"_index":907,"title":{},"body":{"interfaces/IFieldOptions.html":{},"interfaces/INumberFieldOptions.html":{},"interfaces/IStringFieldOptions.html":{}}}],["omittype",{"_index":164,"title":{},"body":{"classes/ArticleDto.html":{},"classes/ArticleQueryDto.html":{},"classes/CategoryDto.html":{},"classes/CategoryQueryDto.html":{},"classes/CommentDto.html":{},"classes/CommentQueryDto.html":{},"classes/CommonNameDto.html":{},"classes/CommonNameQueryDto.html":{},"classes/ManufacturerDto.html":{},"classes/ManufacturerQueryDto.html":{},"classes/ReviewDto.html":{},"classes/ReviewQueryDto.html":{},"classes/SourceDto.html":{},"classes/SourceQueryDto.html":{},"classes/SteroidCommentsCountDto.html":{},"classes/SteroidDto.html":{},"classes/SteroidQueryDto.html":{},"classes/UpdateArticleDto.html":{},"classes/UpdateCategoryDto.html":{},"classes/UpdateCommentDto.html":{},"classes/UpdateCommonNameDto.html":{},"classes/UpdateManufacturerDto.html":{},"classes/UpdateReviewDto.html":{},"classes/UpdateSourceDto.html":{},"classes/UpdateSteroidDto.html":{},"classes/UpdateUserDto.html":{},"classes/UserDto.html":{},"classes/UserQueryDto.html":{}}}],["omittype(articledto",{"_index":172,"title":{},"body":{"classes/ArticleDto.html":{},"classes/ArticleQueryDto.html":{},"classes/UpdateArticleDto.html":{}}}],["omittype(categorydto",{"_index":510,"title":{},"body":{"classes/CategoryDto.html":{},"classes/CategoryQueryDto.html":{},"classes/UpdateCategoryDto.html":{}}}],["omittype(commentdto",{"_index":548,"title":{},"body":{"classes/CommentDto.html":{},"classes/CommentQueryDto.html":{},"classes/UpdateCommentDto.html":{}}}],["omittype(commonnamedto",{"_index":618,"title":{},"body":{"classes/CommonNameDto.html":{},"classes/CommonNameQueryDto.html":{},"classes/UpdateCommonNameDto.html":{}}}],["omittype(manufacturerdto",{"_index":1026,"title":{},"body":{"classes/ManufacturerDto.html":{},"classes/ManufacturerQueryDto.html":{},"classes/UpdateManufacturerDto.html":{}}}],["omittype(reviewdto",{"_index":1107,"title":{},"body":{"classes/ReviewDto.html":{},"classes/ReviewQueryDto.html":{},"classes/UpdateReviewDto.html":{}}}],["omittype(sourcedto",{"_index":1187,"title":{},"body":{"classes/SourceDto.html":{},"classes/SourceQueryDto.html":{},"classes/UpdateSourceDto.html":{}}}],["omittype(steroiddto",{"_index":1266,"title":{},"body":{"classes/SteroidCommentsCountDto.html":{},"classes/SteroidDto.html":{},"classes/SteroidQueryDto.html":{},"classes/UpdateSteroidDto.html":{}}}],["omittype(userdto",{"_index":1343,"title":{},"body":{"classes/UpdateUserDto.html":{},"classes/UserDto.html":{},"classes/UserQueryDto.html":{}}}],["onmoduleinit",{"_index":483,"title":{},"body":{"injectables/CategoriesService.html":{},"injectables/CommonNamesService.html":{},"injectables/ManufacturersService.html":{}}}],["open",{"_index":1551,"title":{},"body":{"index.html":{}}}],["optional",{"_index":64,"title":{},"body":{"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/ArticlesController.html":{},"injectables/ArticlesService.html":{},"controllers/AuthController.html":{},"injectables/AuthenticationService.html":{},"controllers/CategoriesController.html":{},"injectables/CategoriesService.html":{},"controllers/CommentsController.html":{},"injectables/CommentsService.html":{},"controllers/CommonNamesController.html":{},"injectables/CommonNamesService.html":{},"classes/CreateUserDto.html":{},"injectables/CrudService.html":{},"classes/FileNotImageException.html":{},"classes/GeneratorProvider.html":{},"injectables/GeneratorService.html":{},"interfaces/IApiFile.html":{},"interfaces/IFieldOptions.html":{},"interfaces/INumberFieldOptions.html":{},"interfaces/IStringFieldOptions.html":{},"injectables/JwtStrategy.html":{},"classes/LoginPayloadDto.html":{},"controllers/ManufacturersController.html":{},"injectables/ManufacturersService.html":{},"classes/PaginationQueryDto.html":{},"controllers/ReviewsController.html":{},"injectables/ReviewsService.html":{},"controllers/SourcesController.html":{},"injectables/SourcesService.html":{},"classes/SteroidQueryDto.html":{},"controllers/SteroidsController.html":{},"injectables/SteroidsService.html":{},"classes/UserDto.html":{},"classes/UserQueryDto.html":{},"injectables/UsersService.html":{},"injectables/ValidatorService.html":{}}}],["options",{"_index":906,"title":{},"body":{"interfaces/IFieldOptions.html":{},"interfaces/INumberFieldOptions.html":{},"interfaces/IStringFieldOptions.html":{}}}],["options.each",{"_index":911,"title":{},"body":{"interfaces/IFieldOptions.html":{},"interfaces/INumberFieldOptions.html":{},"interfaces/IStringFieldOptions.html":{}}}],["options.int",{"_index":916,"title":{},"body":{"interfaces/IFieldOptions.html":{},"interfaces/INumberFieldOptions.html":{},"interfaces/IStringFieldOptions.html":{}}}],["options.ispositive",{"_index":924,"title":{},"body":{"interfaces/IFieldOptions.html":{},"interfaces/INumberFieldOptions.html":{},"interfaces/IStringFieldOptions.html":{}}}],["options.max",{"_index":922,"title":{},"body":{"interfaces/IFieldOptions.html":{},"interfaces/INumberFieldOptions.html":{},"interfaces/IStringFieldOptions.html":{}}}],["options.maxlength",{"_index":930,"title":{},"body":{"interfaces/IFieldOptions.html":{},"interfaces/INumberFieldOptions.html":{},"interfaces/IStringFieldOptions.html":{}}}],["options.min",{"_index":920,"title":{},"body":{"interfaces/IFieldOptions.html":{},"interfaces/INumberFieldOptions.html":{},"interfaces/IStringFieldOptions.html":{}}}],["options.minlength",{"_index":928,"title":{},"body":{"interfaces/IFieldOptions.html":{},"interfaces/INumberFieldOptions.html":{},"interfaces/IStringFieldOptions.html":{}}}],["options.nullable",{"_index":909,"title":{},"body":{"interfaces/IFieldOptions.html":{},"interfaces/INumberFieldOptions.html":{},"interfaces/IStringFieldOptions.html":{}}}],["options.required",{"_index":961,"title":{},"body":{"interfaces/IFieldOptions.html":{},"interfaces/INumberFieldOptions.html":{},"interfaces/IStringFieldOptions.html":{}}}],["options.swagger",{"_index":913,"title":{},"body":{"interfaces/IFieldOptions.html":{},"interfaces/INumberFieldOptions.html":{},"interfaces/IStringFieldOptions.html":{}}}],["options.tolowercase",{"_index":932,"title":{},"body":{"interfaces/IFieldOptions.html":{},"interfaces/INumberFieldOptions.html":{},"interfaces/IStringFieldOptions.html":{}}}],["options.touppercase",{"_index":934,"title":{},"body":{"interfaces/IFieldOptions.html":{},"interfaces/INumberFieldOptions.html":{},"interfaces/IStringFieldOptions.html":{}}}],["originalname",{"_index":981,"title":{},"body":{"interfaces/IFile.html":{}}}],["out",{"_index":54,"title":{},"body":{"modules/AppModule.html":{},"modules/ArticlesModule.html":{},"modules/AuthenticationModule.html":{},"modules/CategoriesModule.html":{},"modules/CommentsModule.html":{},"modules/CommonNamesModule.html":{},"modules/ManufacturersModule.html":{},"modules/ReviewsModule.html":{},"modules/SharedModule.html":{},"modules/SourcesModule.html":{},"modules/SteroidsModule.html":{},"modules/UsersModule.html":{},"modules/_SteroidsModule.html":{},"overview.html":{}}}],["overview",{"_index":1578,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":1477,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["paginationquerydto",{"_index":1084,"title":{"classes/PaginationQueryDto.html":{}},"body":{"classes/PaginationQueryDto.html":{},"coverage.html":{}}}],["param",{"_index":229,"title":{},"body":{"controllers/ArticlesController.html":{},"controllers/CategoriesController.html":{},"controllers/CommentsController.html":{},"controllers/CommonNamesController.html":{},"controllers/ManufacturersController.html":{},"controllers/ReviewsController.html":{},"controllers/SourcesController.html":{},"controllers/SteroidsController.html":{}}}],["param('articleid",{"_index":258,"title":{},"body":{"controllers/ArticlesController.html":{}}}],["param('categoryid",{"_index":470,"title":{},"body":{"controllers/CategoriesController.html":{}}}],["param('commentid",{"_index":586,"title":{},"body":{"controllers/CommentsController.html":{}}}],["param('commonnameid",{"_index":656,"title":{},"body":{"controllers/CommonNamesController.html":{}}}],["param('manufacturerid",{"_index":1059,"title":{},"body":{"controllers/ManufacturersController.html":{}}}],["param('reviewid",{"_index":1144,"title":{},"body":{"controllers/ReviewsController.html":{}}}],["param('sourceid",{"_index":1224,"title":{},"body":{"controllers/SourcesController.html":{}}}],["param('steroidid",{"_index":1312,"title":{},"body":{"controllers/SteroidsController.html":{}}}],["parameters",{"_index":61,"title":{},"body":{"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/ArticlesController.html":{},"injectables/ArticlesService.html":{},"controllers/AuthController.html":{},"injectables/AuthenticationService.html":{},"controllers/CategoriesController.html":{},"injectables/CategoriesService.html":{},"controllers/CommentsController.html":{},"injectables/CommentsService.html":{},"controllers/CommonNamesController.html":{},"injectables/CommonNamesService.html":{},"injectables/CrudService.html":{},"classes/FileNotImageException.html":{},"classes/GeneratorProvider.html":{},"injectables/GeneratorService.html":{},"injectables/JwtStrategy.html":{},"classes/LoginPayloadDto.html":{},"controllers/ManufacturersController.html":{},"injectables/ManufacturersService.html":{},"controllers/ReviewsController.html":{},"injectables/ReviewsService.html":{},"controllers/SourcesController.html":{},"injectables/SourcesService.html":{},"controllers/SteroidsController.html":{},"injectables/SteroidsService.html":{},"injectables/UsersService.html":{},"injectables/ValidatorService.html":{}}}],["parser",{"_index":778,"title":{},"body":{"injectables/CrudService.html":{},"injectables/UsersService.html":{}}}],["parser.ts",{"_index":1459,"title":{},"body":{"coverage.html":{}}}],["partialtype",{"_index":165,"title":{},"body":{"classes/ArticleDto.html":{},"classes/ArticleQueryDto.html":{},"classes/CategoryDto.html":{},"classes/CategoryQueryDto.html":{},"classes/CommentDto.html":{},"classes/CommentQueryDto.html":{},"classes/CommonNameDto.html":{},"classes/CommonNameQueryDto.html":{},"classes/ManufacturerDto.html":{},"classes/ManufacturerQueryDto.html":{},"classes/ReviewDto.html":{},"classes/ReviewQueryDto.html":{},"classes/SourceDto.html":{},"classes/SourceQueryDto.html":{},"classes/SteroidCommentsCountDto.html":{},"classes/SteroidDto.html":{},"classes/SteroidQueryDto.html":{},"classes/UpdateArticleDto.html":{},"classes/UpdateCategoryDto.html":{},"classes/UpdateCommentDto.html":{},"classes/UpdateCommonNameDto.html":{},"classes/UpdateManufacturerDto.html":{},"classes/UpdateReviewDto.html":{},"classes/UpdateSourceDto.html":{},"classes/UpdateSteroidDto.html":{},"classes/UpdateUserDto.html":{},"classes/UserDto.html":{},"classes/UserQueryDto.html":{}}}],["passport",{"_index":994,"title":{},"body":{"injectables/JwtStrategy.html":{},"dependencies.html":{}}}],["passportmodule",{"_index":356,"title":{},"body":{"modules/AuthenticationModule.html":{}}}],["passportmodule.register",{"_index":361,"title":{},"body":{"modules/AuthenticationModule.html":{}}}],["passportstrategy",{"_index":991,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["passportstrategy(strategy",{"_index":984,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["password",{"_index":734,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"classes/UserDto.html":{},"classes/UserLoginDto.html":{},"classes/UserQueryDto.html":{}}}],["passwordfield",{"_index":762,"title":{},"body":{"classes/CreateUserDto.html":{},"interfaces/IFieldOptions.html":{},"interfaces/INumberFieldOptions.html":{},"interfaces/IStringFieldOptions.html":{},"classes/UserLoginDto.html":{},"coverage.html":{}}}],["passwordfield({swagger",{"_index":745,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["passwordfieldoptional",{"_index":937,"title":{},"body":{"interfaces/IFieldOptions.html":{},"interfaces/INumberFieldOptions.html":{},"interfaces/IStringFieldOptions.html":{},"coverage.html":{}}}],["path",{"_index":1612,"title":{},"body":{"miscellaneous/variables.html":{}}}],["payload",{"_index":291,"title":{},"body":{"injectables/ArticlesService.html":{},"injectables/CategoriesService.html":{},"injectables/CommentsService.html":{},"injectables/CommonNamesService.html":{},"injectables/CrudService.html":{},"injectables/ManufacturersService.html":{},"injectables/ReviewsService.html":{},"injectables/SourcesService.html":{},"injectables/SteroidsService.html":{}}}],["payload.dto",{"_index":321,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthenticationService.html":{},"classes/LoginPayloadDto.html":{}}}],["payload.dto.ts",{"_index":1007,"title":{},"body":{"classes/LoginPayloadDto.html":{},"classes/TokenPayloadDto.html":{},"coverage.html":{}}}],["payload.dto.ts:10",{"_index":1009,"title":{},"body":{"classes/LoginPayloadDto.html":{}}}],["payload.dto.ts:11",{"_index":1339,"title":{},"body":{"classes/TokenPayloadDto.html":{}}}],["payload.dto.ts:7",{"_index":1011,"title":{},"body":{"classes/LoginPayloadDto.html":{}}}],["payload.dto.ts:8",{"_index":1340,"title":{},"body":{"classes/TokenPayloadDto.html":{}}}],["pg",{"_index":1496,"title":{},"body":{"dependencies.html":{}}}],["phone",{"_index":735,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"classes/UserDto.html":{},"classes/UserQueryDto.html":{}}}],["phonefield",{"_index":967,"title":{},"body":{"interfaces/IFieldOptions.html":{},"interfaces/INumberFieldOptions.html":{},"interfaces/IStringFieldOptions.html":{},"coverage.html":{}}}],["phonefieldoptional",{"_index":763,"title":{},"body":{"classes/CreateUserDto.html":{},"interfaces/IFieldOptions.html":{},"interfaces/INumberFieldOptions.html":{},"interfaces/IStringFieldOptions.html":{},"classes/UpdateUserDto.html":{},"classes/UserDto.html":{},"classes/UserQueryDto.html":{},"coverage.html":{}}}],["phonefieldoptional({swagger",{"_index":751,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/UserDto.html":{}}}],["phonenumberserializer",{"_index":886,"title":{},"body":{"interfaces/IFieldOptions.html":{},"interfaces/INumberFieldOptions.html":{},"interfaces/IStringFieldOptions.html":{},"coverage.html":{}}}],["plaintoclass",{"_index":393,"title":{},"body":{"injectables/AuthenticationService.html":{},"injectables/CrudService.html":{},"injectables/SteroidsService.html":{},"injectables/UsersService.html":{}}}],["plaintoclass(steroidcommentscountdto",{"_index":1337,"title":{},"body":{"injectables/SteroidsService.html":{}}}],["plaintoclass(this.dtoclass",{"_index":787,"title":{},"body":{"injectables/CrudService.html":{}}}],["plaintoclass(userdto",{"_index":414,"title":{},"body":{"injectables/AuthenticationService.html":{},"injectables/UsersService.html":{}}}],["please",{"_index":1561,"title":{},"body":{"index.html":{}}}],["points",{"_index":1090,"title":{},"body":{"classes/Review.html":{}}}],["populate",{"_index":793,"title":{},"body":{"injectables/CrudService.html":{},"classes/SteroidCommentsCountDto.html":{},"classes/SteroidDto.html":{},"classes/SteroidQueryDto.html":{},"classes/UpdateSteroidDto.html":{}}}],["post",{"_index":224,"title":{},"body":{"controllers/ArticlesController.html":{},"controllers/AuthController.html":{},"controllers/CategoriesController.html":{},"controllers/CommentsController.html":{},"controllers/CommonNamesController.html":{},"controllers/ManufacturersController.html":{},"controllers/ReviewsController.html":{},"controllers/SourcesController.html":{},"controllers/SteroidsController.html":{}}}],["post('login",{"_index":334,"title":{},"body":{"controllers/AuthController.html":{}}}],["post('login')@httpcode(httpstatus.ok)@apiokresponse({type",{"_index":307,"title":{},"body":{"controllers/AuthController.html":{}}}],["post('register",{"_index":345,"title":{},"body":{"controllers/AuthController.html":{}}}],["post('register')@httpcode(httpstatus.ok)@apiokresponse({type",{"_index":314,"title":{},"body":{"controllers/AuthController.html":{}}}],["prefix",{"_index":182,"title":{},"body":{"controllers/ArticlesController.html":{},"controllers/AuthController.html":{},"controllers/CategoriesController.html":{},"controllers/CommentsController.html":{},"controllers/CommonNamesController.html":{},"controllers/ManufacturersController.html":{},"controllers/ReviewsController.html":{},"controllers/SourcesController.html":{},"controllers/SteroidsController.html":{},"controllers/UsersController.html":{}}}],["preservenullandemptyarrays",{"_index":1613,"title":{},"body":{"miscellaneous/variables.html":{}}}],["private",{"_index":113,"title":{},"body":{"injectables/AppService.html":{},"injectables/ArticlesService.html":{},"controllers/AuthController.html":{},"injectables/AuthenticationService.html":{},"injectables/CategoriesService.html":{},"injectables/CommentsService.html":{},"injectables/CommonNamesService.html":{},"injectables/CrudService.html":{},"injectables/JwtStrategy.html":{},"injectables/ManufacturersService.html":{},"injectables/ReviewsService.html":{},"injectables/SourcesService.html":{},"injectables/SteroidsService.html":{}}}],["privatekey",{"_index":366,"title":{},"body":{"modules/AuthenticationModule.html":{}}}],["production",{"_index":1542,"title":{},"body":{"index.html":{}}}],["progressive",{"_index":1520,"title":{},"body":{"index.html":{}}}],["project",{"_index":1552,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["promise",{"_index":201,"title":{},"body":{"controllers/ArticlesController.html":{},"injectables/ArticlesService.html":{},"controllers/AuthController.html":{},"injectables/AuthenticationService.html":{},"controllers/CategoriesController.html":{},"injectables/CategoriesService.html":{},"controllers/CommentsController.html":{},"injectables/CommentsService.html":{},"controllers/CommonNamesController.html":{},"injectables/CommonNamesService.html":{},"injectables/CrudService.html":{},"injectables/JwtStrategy.html":{},"controllers/ManufacturersController.html":{},"injectables/ManufacturersService.html":{},"controllers/ReviewsController.html":{},"injectables/ReviewsService.html":{},"controllers/SourcesController.html":{},"injectables/SourcesService.html":{},"controllers/SteroidsController.html":{},"injectables/SteroidsService.html":{},"injectables/UsersService.html":{}}}],["prop",{"_index":132,"title":{},"body":{"classes/Article.html":{},"classes/Base.html":{},"classes/Category.html":{},"classes/Comment.html":{},"classes/CommonName.html":{},"classes/Manufacturer.html":{},"classes/Review.html":{},"classes/Source.html":{},"classes/Steroid.html":{},"classes/User.html":{}}}],["prop({type",{"_index":124,"title":{},"body":{"classes/Article.html":{},"classes/Base.html":{},"classes/Category.html":{},"classes/Comment.html":{},"classes/CommonName.html":{},"classes/Manufacturer.html":{},"classes/Review.html":{},"classes/Source.html":{},"classes/Steroid.html":{},"classes/User.html":{}}}],["properties",{"_index":120,"title":{"properties.html":{}},"body":{"classes/Article.html":{},"classes/ArticleDto.html":{},"classes/ArticleQueryDto.html":{},"injectables/ArticlesService.html":{},"classes/Base.html":{},"classes/BaseDto.html":{},"injectables/CategoriesService.html":{},"classes/Category.html":{},"classes/CategoryDto.html":{},"classes/CategoryQueryDto.html":{},"classes/Comment.html":{},"classes/CommentDto.html":{},"classes/CommentQueryDto.html":{},"injectables/CommentsService.html":{},"classes/CommonName.html":{},"classes/CommonNameDto.html":{},"classes/CommonNameQueryDto.html":{},"injectables/CommonNamesService.html":{},"classes/CreateArticleDto.html":{},"classes/CreateCategoryDto.html":{},"classes/CreateCommentDto.html":{},"classes/CreateCommonNameDto.html":{},"classes/CreateManufacturerDto.html":{},"classes/CreateReviewDto.html":{},"classes/CreateSourceDto.html":{},"classes/CreateSteroidDto.html":{},"classes/CreateUserDto.html":{},"injectables/CrudService.html":{},"interfaces/IApiFile.html":{},"interfaces/IFieldOptions.html":{},"interfaces/IFile.html":{},"interfaces/INumberFieldOptions.html":{},"interfaces/IStringFieldOptions.html":{},"classes/LoginPayloadDto.html":{},"classes/Manufacturer.html":{},"classes/ManufacturerDto.html":{},"classes/ManufacturerQueryDto.html":{},"injectables/ManufacturersService.html":{},"classes/PaginationQueryDto.html":{},"classes/Review.html":{},"classes/ReviewDto.html":{},"classes/ReviewQueryDto.html":{},"injectables/ReviewsService.html":{},"classes/Source.html":{},"classes/SourceDto.html":{},"classes/SourceQueryDto.html":{},"injectables/SourcesService.html":{},"classes/Steroid.html":{},"classes/SteroidCommentsCountDto.html":{},"classes/SteroidDto.html":{},"classes/SteroidQueryDto.html":{},"injectables/SteroidsService.html":{},"classes/TokenPayloadDto.html":{},"classes/User.html":{},"classes/UserDto.html":{},"classes/UserLoginDto.html":{},"classes/UserQueryDto.html":{},"properties.html":{}}}],["property.decorators",{"_index":885,"title":{},"body":{"interfaces/IFieldOptions.html":{},"interfaces/INumberFieldOptions.html":{},"interfaces/IStringFieldOptions.html":{}}}],["propertydecorator",{"_index":908,"title":{},"body":{"interfaces/IFieldOptions.html":{},"interfaces/INumberFieldOptions.html":{},"interfaces/IStringFieldOptions.html":{}}}],["props",{"_index":794,"title":{},"body":{"injectables/CrudService.html":{}}}],["protected",{"_index":766,"title":{},"body":{"injectables/CrudService.html":{}}}],["provider",{"_index":1168,"title":{},"body":{"modules/SharedModule.html":{},"miscellaneous/variables.html":{}}}],["providers",{"_index":39,"title":{},"body":{"modules/AppModule.html":{},"modules/ArticlesModule.html":{},"modules/AuthenticationModule.html":{},"modules/CategoriesModule.html":{},"modules/CommentsModule.html":{},"modules/CommonNamesModule.html":{},"modules/ManufacturersModule.html":{},"modules/ReviewsModule.html":{},"modules/SharedModule.html":{},"modules/SourcesModule.html":{},"modules/SteroidsModule.html":{},"modules/UsersModule.html":{},"modules/_SteroidsModule.html":{},"coverage.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["providers/generator.provider.ts",{"_index":819,"title":{},"body":{"classes/GeneratorProvider.html":{},"coverage.html":{}}}],["providers/generator.provider.ts:12",{"_index":842,"title":{},"body":{"classes/GeneratorProvider.html":{}}}],["providers/generator.provider.ts:20",{"_index":839,"title":{},"body":{"classes/GeneratorProvider.html":{}}}],["providers/generator.provider.ts:36",{"_index":837,"title":{},"body":{"classes/GeneratorProvider.html":{}}}],["providers/generator.provider.ts:4",{"_index":844,"title":{},"body":{"classes/GeneratorProvider.html":{}}}],["providers/generator.provider.ts:40",{"_index":831,"title":{},"body":{"classes/GeneratorProvider.html":{}}}],["providers/generator.provider.ts:60",{"_index":833,"title":{},"body":{"classes/GeneratorProvider.html":{}}}],["providers/generator.provider.ts:8",{"_index":829,"title":{},"body":{"classes/GeneratorProvider.html":{}}}],["public",{"_index":853,"title":{},"body":{"injectables/GeneratorService.html":{},"injectables/ValidatorService.html":{}}}],["publickey",{"_index":367,"title":{},"body":{"modules/AuthenticationModule.html":{}}}],["publicurl",{"_index":840,"title":{},"body":{"classes/GeneratorProvider.html":{}}}],["put",{"_index":227,"title":{},"body":{"controllers/ArticlesController.html":{},"controllers/CategoriesController.html":{},"controllers/CommentsController.html":{},"controllers/CommonNamesController.html":{},"controllers/ManufacturersController.html":{},"controllers/ReviewsController.html":{},"controllers/SourcesController.html":{},"controllers/SteroidsController.html":{}}}],["put(':articleid",{"_index":257,"title":{},"body":{"controllers/ArticlesController.html":{}}}],["put(':categoryid",{"_index":469,"title":{},"body":{"controllers/CategoriesController.html":{}}}],["put(':commentid",{"_index":585,"title":{},"body":{"controllers/CommentsController.html":{}}}],["put(':commonnameid",{"_index":658,"title":{},"body":{"controllers/CommonNamesController.html":{}}}],["put(':manufacturerid",{"_index":1061,"title":{},"body":{"controllers/ManufacturersController.html":{}}}],["put(':reviewid",{"_index":1143,"title":{},"body":{"controllers/ReviewsController.html":{}}}],["put(':sourceid",{"_index":1223,"title":{},"body":{"controllers/SourcesController.html":{}}}],["put(':steroidid",{"_index":1311,"title":{},"body":{"controllers/SteroidsController.html":{}}}],["query",{"_index":228,"title":{},"body":{"controllers/ArticlesController.html":{},"controllers/CategoriesController.html":{},"controllers/CommentsController.html":{},"controllers/CommonNamesController.html":{},"controllers/ManufacturersController.html":{},"controllers/ReviewsController.html":{},"controllers/SourcesController.html":{},"injectables/SteroidsService.html":{}}}],["query.dto.ts",{"_index":1086,"title":{},"body":{"classes/PaginationQueryDto.html":{},"coverage.html":{}}}],["query.dto.ts:11",{"_index":1087,"title":{},"body":{"classes/PaginationQueryDto.html":{}}}],["query.dto.ts:7",{"_index":1088,"title":{},"body":{"classes/PaginationQueryDto.html":{}}}],["querydto",{"_index":284,"title":{},"body":{"injectables/ArticlesService.html":{},"injectables/CategoriesService.html":{},"injectables/CommentsService.html":{},"injectables/CommonNamesService.html":{},"injectables/CrudService.html":{},"injectables/ManufacturersService.html":{},"injectables/ReviewsService.html":{},"injectables/SourcesService.html":{},"injectables/SteroidsService.html":{},"injectables/UsersService.html":{}}}],["random",{"_index":835,"title":{},"body":{"classes/GeneratorProvider.html":{}}}],["read",{"_index":1562,"title":{},"body":{"index.html":{}}}],["readonly",{"_index":27,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/ArticlesController.html":{},"injectables/ArticlesService.html":{},"controllers/CategoriesController.html":{},"injectables/CategoriesService.html":{},"controllers/CommentsController.html":{},"injectables/CommentsService.html":{},"controllers/CommonNamesController.html":{},"injectables/CommonNamesService.html":{},"injectables/CrudService.html":{},"injectables/JwtStrategy.html":{},"controllers/ManufacturersController.html":{},"injectables/ManufacturersService.html":{},"controllers/ReviewsController.html":{},"injectables/ReviewsService.html":{},"controllers/SourcesController.html":{},"injectables/SourcesService.html":{},"controllers/SteroidsController.html":{},"injectables/SteroidsService.html":{},"classes/UserLoginDto.html":{},"injectables/UsersService.html":{}}}],["ref",{"_index":128,"title":{},"body":{"classes/Article.html":{},"classes/Comment.html":{},"classes/CommonName.html":{},"classes/Manufacturer.html":{},"classes/Review.html":{},"classes/Source.html":{},"classes/Steroid.html":{}}}],["referenceid",{"_index":516,"title":{},"body":{"classes/Comment.html":{},"classes/CommentDto.html":{},"classes/CommentQueryDto.html":{},"classes/CreateCommentDto.html":{},"classes/Review.html":{},"classes/UpdateCommentDto.html":{},"miscellaneous/variables.html":{}}}],["referencetype",{"_index":517,"title":{},"body":{"classes/Comment.html":{},"classes/CreateCommentDto.html":{},"classes/Review.html":{}}}],["reflect",{"_index":1498,"title":{},"body":{"dependencies.html":{}}}],["refpath",{"_index":523,"title":{},"body":{"classes/Comment.html":{},"classes/Review.html":{}}}],["refresh_token",{"_index":1517,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["regexp",{"_index":850,"title":{},"body":{"classes/GeneratorProvider.html":{}}}],["registered",{"_index":316,"title":{},"body":{"controllers/AuthController.html":{}}}],["registermodels",{"_index":1444,"title":{},"body":{"coverage.html":{}}}],["repository",{"_index":783,"title":{},"body":{"injectables/CrudService.html":{},"index.html":{}}}],["repository.save",{"_index":786,"title":{},"body":{"injectables/CrudService.html":{}}}],["request",{"_index":248,"title":{},"body":{"controllers/ArticlesController.html":{},"controllers/CategoriesController.html":{},"controllers/CommentsController.html":{},"controllers/CommonNamesController.html":{},"controllers/ManufacturersController.html":{},"controllers/ReviewsController.html":{},"controllers/SourcesController.html":{},"controllers/SteroidsController.html":{}}}],["request.'})@delete(':articleid",{"_index":206,"title":{},"body":{"controllers/ArticlesController.html":{}}}],["request.'})@delete(':categoryid",{"_index":442,"title":{},"body":{"controllers/CategoriesController.html":{}}}],["request.'})@delete(':commentid",{"_index":561,"title":{},"body":{"controllers/CommentsController.html":{}}}],["request.'})@delete(':commonnameid",{"_index":632,"title":{},"body":{"controllers/CommonNamesController.html":{}}}],["request.'})@delete(':manufacturerid",{"_index":1038,"title":{},"body":{"controllers/ManufacturersController.html":{}}}],["request.'})@delete(':reviewid",{"_index":1119,"title":{},"body":{"controllers/ReviewsController.html":{}}}],["request.'})@delete(':sourceid",{"_index":1199,"title":{},"body":{"controllers/SourcesController.html":{}}}],["request.'})@delete(':steroidid",{"_index":1288,"title":{},"body":{"controllers/SteroidsController.html":{}}}],["request.'})@get",{"_index":214,"title":{},"body":{"controllers/ArticlesController.html":{},"controllers/CategoriesController.html":{},"controllers/CommentsController.html":{},"controllers/CommonNamesController.html":{},"controllers/ManufacturersController.html":{},"controllers/ReviewsController.html":{},"controllers/SourcesController.html":{},"controllers/SteroidsController.html":{}}}],["request.'})@get(':articleid",{"_index":218,"title":{},"body":{"controllers/ArticlesController.html":{}}}],["request.'})@get(':categoryid",{"_index":450,"title":{},"body":{"controllers/CategoriesController.html":{}}}],["request.'})@get(':commentid",{"_index":568,"title":{},"body":{"controllers/CommentsController.html":{}}}],["request.'})@get(':commonnameid",{"_index":639,"title":{},"body":{"controllers/CommonNamesController.html":{}}}],["request.'})@get(':manufacturerid",{"_index":1044,"title":{},"body":{"controllers/ManufacturersController.html":{}}}],["request.'})@get(':reviewid",{"_index":1126,"title":{},"body":{"controllers/ReviewsController.html":{}}}],["request.'})@get(':sourceid",{"_index":1206,"title":{},"body":{"controllers/SourcesController.html":{}}}],["request.'})@get(':steroidid",{"_index":1294,"title":{},"body":{"controllers/SteroidsController.html":{}}}],["request.'})@post",{"_index":199,"title":{},"body":{"controllers/ArticlesController.html":{},"controllers/CategoriesController.html":{},"controllers/CommentsController.html":{},"controllers/CommonNamesController.html":{},"controllers/ManufacturersController.html":{},"controllers/ReviewsController.html":{},"controllers/SourcesController.html":{},"controllers/SteroidsController.html":{}}}],["request.'})@put(':articleid",{"_index":222,"title":{},"body":{"controllers/ArticlesController.html":{}}}],["request.'})@put(':categoryid",{"_index":454,"title":{},"body":{"controllers/CategoriesController.html":{}}}],["request.'})@put(':commentid",{"_index":571,"title":{},"body":{"controllers/CommentsController.html":{}}}],["request.'})@put(':commonnameid",{"_index":642,"title":{},"body":{"controllers/CommonNamesController.html":{}}}],["request.'})@put(':manufacturerid",{"_index":1047,"title":{},"body":{"controllers/ManufacturersController.html":{}}}],["request.'})@put(':reviewid",{"_index":1129,"title":{},"body":{"controllers/ReviewsController.html":{}}}],["request.'})@put(':sourceid",{"_index":1209,"title":{},"body":{"controllers/SourcesController.html":{}}}],["request.'})@put(':steroidid",{"_index":1297,"title":{},"body":{"controllers/SteroidsController.html":{}}}],["required",{"_index":125,"title":{},"body":{"classes/Article.html":{},"classes/Category.html":{},"classes/Comment.html":{},"classes/CommonName.html":{},"classes/GeneratorProvider.html":{},"interfaces/IFieldOptions.html":{},"interfaces/INumberFieldOptions.html":{},"interfaces/IStringFieldOptions.html":{},"classes/Manufacturer.html":{},"classes/Review.html":{},"classes/Source.html":{},"classes/Steroid.html":{},"classes/User.html":{}}}],["res",{"_index":101,"title":{},"body":{"modules/AppModule.html":{}}}],["reset",{"_index":53,"title":{},"body":{"modules/AppModule.html":{},"modules/ArticlesModule.html":{},"modules/AuthenticationModule.html":{},"modules/CategoriesModule.html":{},"modules/CommentsModule.html":{},"modules/CommonNamesModule.html":{},"modules/ManufacturersModule.html":{},"modules/ReviewsModule.html":{},"modules/SharedModule.html":{},"modules/SourcesModule.html":{},"modules/SteroidsModule.html":{},"modules/UsersModule.html":{},"modules/_SteroidsModule.html":{},"overview.html":{}}}],["result",{"_index":785,"title":{},"body":{"injectables/CrudService.html":{},"injectables/UsersService.html":{}}}],["result.toobject",{"_index":788,"title":{},"body":{"injectables/CrudService.html":{},"injectables/UsersService.html":{}}}],["results",{"_index":30,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/Article.html":{},"classes/ArticleDto.html":{},"classes/ArticleQueryDto.html":{},"controllers/ArticlesController.html":{},"modules/ArticlesModule.html":{},"injectables/ArticlesService.html":{},"controllers/AuthController.html":{},"modules/AuthenticationModule.html":{},"injectables/AuthenticationService.html":{},"classes/Base.html":{},"classes/BaseDto.html":{},"controllers/CategoriesController.html":{},"modules/CategoriesModule.html":{},"injectables/CategoriesService.html":{},"classes/Category.html":{},"classes/CategoryDto.html":{},"classes/CategoryQueryDto.html":{},"classes/Comment.html":{},"classes/CommentDto.html":{},"classes/CommentQueryDto.html":{},"controllers/CommentsController.html":{},"modules/CommentsModule.html":{},"injectables/CommentsService.html":{},"classes/CommonName.html":{},"classes/CommonNameDto.html":{},"classes/CommonNameQueryDto.html":{},"controllers/CommonNamesController.html":{},"modules/CommonNamesModule.html":{},"injectables/CommonNamesService.html":{},"classes/CreateArticleDto.html":{},"classes/CreateCategoryDto.html":{},"classes/CreateCommentDto.html":{},"classes/CreateCommonNameDto.html":{},"classes/CreateManufacturerDto.html":{},"classes/CreateReviewDto.html":{},"classes/CreateSourceDto.html":{},"classes/CreateSteroidDto.html":{},"classes/CreateUserDto.html":{},"injectables/CrudService.html":{},"classes/FileNotImageException.html":{},"classes/GeneratorProvider.html":{},"injectables/GeneratorService.html":{},"interfaces/IApiFile.html":{},"interfaces/IFieldOptions.html":{},"interfaces/IFile.html":{},"interfaces/INumberFieldOptions.html":{},"interfaces/IStringFieldOptions.html":{},"injectables/JwtStrategy.html":{},"classes/LoginPayloadDto.html":{},"classes/Manufacturer.html":{},"classes/ManufacturerDto.html":{},"classes/ManufacturerQueryDto.html":{},"controllers/ManufacturersController.html":{},"modules/ManufacturersModule.html":{},"injectables/ManufacturersService.html":{},"classes/PaginationQueryDto.html":{},"classes/Review.html":{},"classes/ReviewDto.html":{},"classes/ReviewQueryDto.html":{},"controllers/ReviewsController.html":{},"modules/ReviewsModule.html":{},"injectables/ReviewsService.html":{},"modules/SharedModule.html":{},"classes/Source.html":{},"classes/SourceDto.html":{},"classes/SourceQueryDto.html":{},"controllers/SourcesController.html":{},"modules/SourcesModule.html":{},"injectables/SourcesService.html":{},"classes/Steroid.html":{},"classes/SteroidCommentsCountDto.html":{},"classes/SteroidDto.html":{},"classes/SteroidQueryDto.html":{},"controllers/SteroidsController.html":{},"modules/SteroidsModule.html":{},"injectables/SteroidsService.html":{},"classes/TokenPayloadDto.html":{},"classes/UpdateArticleDto.html":{},"classes/UpdateCategoryDto.html":{},"classes/UpdateCommentDto.html":{},"classes/UpdateCommonNameDto.html":{},"classes/UpdateManufacturerDto.html":{},"classes/UpdateReviewDto.html":{},"classes/UpdateSourceDto.html":{},"classes/UpdateSteroidDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"classes/UserDto.html":{},"classes/UserLoginDto.html":{},"classes/UserQueryDto.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"injectables/ValidatorService.html":{},"modules/_SteroidsModule.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":28,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/ArticlesController.html":{},"controllers/AuthController.html":{},"modules/AuthenticationModule.html":{},"injectables/AuthenticationService.html":{},"controllers/CategoriesController.html":{},"controllers/CommentsController.html":{},"controllers/CommonNamesController.html":{},"injectables/CrudService.html":{},"classes/GeneratorProvider.html":{},"injectables/GeneratorService.html":{},"interfaces/IFieldOptions.html":{},"interfaces/INumberFieldOptions.html":{},"interfaces/IStringFieldOptions.html":{},"injectables/JwtStrategy.html":{},"controllers/ManufacturersController.html":{},"controllers/ReviewsController.html":{},"controllers/SourcesController.html":{},"controllers/SteroidsController.html":{},"injectables/SteroidsService.html":{},"injectables/UsersService.html":{},"injectables/ValidatorService.html":{}}}],["returns",{"_index":15,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/ArticlesController.html":{},"injectables/ArticlesService.html":{},"controllers/AuthController.html":{},"injectables/AuthenticationService.html":{},"controllers/CategoriesController.html":{},"injectables/CategoriesService.html":{},"controllers/CommentsController.html":{},"injectables/CommentsService.html":{},"controllers/CommonNamesController.html":{},"injectables/CommonNamesService.html":{},"injectables/CrudService.html":{},"classes/GeneratorProvider.html":{},"injectables/GeneratorService.html":{},"injectables/JwtStrategy.html":{},"controllers/ManufacturersController.html":{},"injectables/ManufacturersService.html":{},"controllers/ReviewsController.html":{},"injectables/ReviewsService.html":{},"controllers/SourcesController.html":{},"injectables/SourcesService.html":{},"controllers/SteroidsController.html":{},"injectables/SteroidsService.html":{},"injectables/UsersService.html":{},"injectables/ValidatorService.html":{}}}],["review",{"_index":534,"title":{"classes/Review.html":{}},"body":{"classes/Comment.html":{},"classes/Review.html":{},"controllers/ReviewsController.html":{},"modules/ReviewsModule.html":{},"injectables/ReviewsService.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["review'})@apiresponse({status",{"_index":1115,"title":{},"body":{"controllers/ReviewsController.html":{}}}],["review.dto",{"_index":1133,"title":{},"body":{"controllers/ReviewsController.html":{},"injectables/ReviewsService.html":{}}}],["review.dto.ts",{"_index":708,"title":{},"body":{"classes/CreateReviewDto.html":{},"coverage.html":{}}}],["review.dto.ts:5",{"_index":710,"title":{},"body":{"classes/CreateReviewDto.html":{}}}],["review.dto.ts:8",{"_index":709,"title":{},"body":{"classes/CreateReviewDto.html":{}}}],["review.name",{"_index":1154,"title":{},"body":{"modules/ReviewsModule.html":{}}}],["review.schema",{"_index":1152,"title":{},"body":{"modules/ReviewsModule.html":{},"injectables/ReviewsService.html":{}}}],["reviewdocument",{"_index":1098,"title":{},"body":{"classes/Review.html":{},"injectables/ReviewsService.html":{},"miscellaneous/typealiases.html":{}}}],["reviewdto",{"_index":1102,"title":{"classes/ReviewDto.html":{}},"body":{"classes/ReviewDto.html":{},"classes/ReviewQueryDto.html":{},"controllers/ReviewsController.html":{},"injectables/ReviewsService.html":{},"classes/UpdateReviewDto.html":{},"coverage.html":{}}}],["reviewdto})@apiresponse({status",{"_index":1116,"title":{},"body":{"controllers/ReviewsController.html":{}}}],["reviewid",{"_index":1121,"title":{},"body":{"controllers/ReviewsController.html":{}}}],["reviewmodel",{"_index":1158,"title":{},"body":{"injectables/ReviewsService.html":{}}}],["reviewquerydto",{"_index":1108,"title":{"classes/ReviewQueryDto.html":{}},"body":{"classes/ReviewDto.html":{},"classes/ReviewQueryDto.html":{},"controllers/ReviewsController.html":{},"injectables/ReviewsService.html":{},"classes/UpdateReviewDto.html":{},"coverage.html":{}}}],["reviews",{"_index":1113,"title":{},"body":{"controllers/ReviewsController.html":{}}}],["reviews'})@apiresponse({status",{"_index":1123,"title":{},"body":{"controllers/ReviewsController.html":{}}}],["reviews.controller",{"_index":1153,"title":{},"body":{"modules/ReviewsModule.html":{}}}],["reviews.service",{"_index":1132,"title":{},"body":{"controllers/ReviewsController.html":{},"modules/ReviewsModule.html":{}}}],["reviewschema",{"_index":1099,"title":{},"body":{"classes/Review.html":{},"modules/ReviewsModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["reviewschema.pre('save",{"_index":1101,"title":{},"body":{"classes/Review.html":{}}}],["reviewscontroller",{"_index":1111,"title":{"controllers/ReviewsController.html":{}},"body":{"controllers/ReviewsController.html":{},"modules/ReviewsModule.html":{},"coverage.html":{}}}],["reviewservice",{"_index":1137,"title":{},"body":{"controllers/ReviewsController.html":{}}}],["reviewsmodule",{"_index":48,"title":{"modules/ReviewsModule.html":{}},"body":{"modules/AppModule.html":{},"modules/ReviewsModule.html":{},"modules.html":{},"overview.html":{}}}],["reviewsservice",{"_index":1131,"title":{"injectables/ReviewsService.html":{}},"body":{"controllers/ReviewsController.html":{},"modules/ReviewsModule.html":{},"injectables/ReviewsService.html":{},"coverage.html":{},"overview.html":{}}}],["role",{"_index":341,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthenticationService.html":{},"classes/CreateUserDto.html":{},"injectables/JwtStrategy.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"classes/UserDto.html":{},"classes/UserQueryDto.html":{}}}],["roletype",{"_index":391,"title":{},"body":{"injectables/AuthenticationService.html":{},"classes/CreateUserDto.html":{},"injectables/JwtStrategy.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"classes/UserDto.html":{},"classes/UserQueryDto.html":{},"miscellaneous/enumerations.html":{}}}],["roletype.user",{"_index":1360,"title":{},"body":{"classes/User.html":{}}}],["rs256",{"_index":371,"title":{},"body":{"modules/AuthenticationModule.html":{}}}],["run",{"_index":1537,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":1501,"title":{},"body":{"dependencies.html":{}}}],["s3urlparser",{"_index":1446,"title":{},"body":{"coverage.html":{}}}],["scalable",{"_index":1525,"title":{},"body":{"index.html":{}}}],["schema",{"_index":133,"title":{},"body":{"classes/Article.html":{},"modules/ArticlesModule.html":{},"classes/Base.html":{},"modules/CategoriesModule.html":{},"classes/Category.html":{},"classes/Comment.html":{},"modules/CommentsModule.html":{},"classes/CommonName.html":{},"modules/CommonNamesModule.html":{},"classes/Manufacturer.html":{},"modules/ManufacturersModule.html":{},"classes/Review.html":{},"modules/ReviewsModule.html":{},"classes/Source.html":{},"modules/SourcesModule.html":{},"classes/Steroid.html":{},"modules/SteroidsModule.html":{},"classes/User.html":{},"modules/UsersModule.html":{}}}],["schemafactory",{"_index":134,"title":{},"body":{"classes/Article.html":{},"classes/Category.html":{},"classes/Comment.html":{},"classes/CommonName.html":{},"classes/Manufacturer.html":{},"classes/Review.html":{},"classes/Source.html":{},"classes/Steroid.html":{},"classes/User.html":{}}}],["schemafactory.createforclass(article",{"_index":144,"title":{},"body":{"classes/Article.html":{},"miscellaneous/variables.html":{}}}],["schemafactory.createforclass(category",{"_index":503,"title":{},"body":{"classes/Category.html":{},"miscellaneous/variables.html":{}}}],["schemafactory.createforclass(comment",{"_index":541,"title":{},"body":{"classes/Comment.html":{},"miscellaneous/variables.html":{}}}],["schemafactory.createforclass(commonname",{"_index":611,"title":{},"body":{"classes/CommonName.html":{},"miscellaneous/variables.html":{}}}],["schemafactory.createforclass(manufacturer",{"_index":1020,"title":{},"body":{"classes/Manufacturer.html":{},"miscellaneous/variables.html":{}}}],["schemafactory.createforclass(review",{"_index":1100,"title":{},"body":{"classes/Review.html":{},"miscellaneous/variables.html":{}}}],["schemafactory.createforclass(source",{"_index":1180,"title":{},"body":{"classes/Source.html":{},"miscellaneous/variables.html":{}}}],["schemafactory.createforclass(steroid",{"_index":1248,"title":{},"body":{"classes/Steroid.html":{},"miscellaneous/variables.html":{}}}],["schemafactory.createforclass(user",{"_index":1362,"title":{},"body":{"classes/User.html":{},"miscellaneous/variables.html":{}}}],["secretorkey",{"_index":1001,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["server",{"_index":1526,"title":{},"body":{"index.html":{}}}],["services/generator.service",{"_index":1171,"title":{},"body":{"modules/SharedModule.html":{}}}],["services/validator.service",{"_index":1172,"title":{},"body":{"modules/SharedModule.html":{}}}],["sharedmodule",{"_index":1161,"title":{"modules/SharedModule.html":{}},"body":{"modules/SharedModule.html":{},"modules.html":{},"overview.html":{}}}],["side",{"_index":1527,"title":{},"body":{"index.html":{}}}],["signoptions",{"_index":369,"title":{},"body":{"modules/AuthenticationModule.html":{}}}],["size",{"_index":982,"title":{},"body":{"interfaces/IFile.html":{},"miscellaneous/variables.html":{}}}],["skip",{"_index":174,"title":{},"body":{"classes/ArticleDto.html":{},"classes/ArticleQueryDto.html":{},"classes/CategoryDto.html":{},"classes/CategoryQueryDto.html":{},"classes/CommentDto.html":{},"classes/CommentQueryDto.html":{},"classes/CommonNameDto.html":{},"classes/CommonNameQueryDto.html":{},"injectables/CrudService.html":{},"classes/ManufacturerDto.html":{},"classes/ManufacturerQueryDto.html":{},"classes/PaginationQueryDto.html":{},"classes/ReviewDto.html":{},"classes/ReviewQueryDto.html":{},"classes/SourceDto.html":{},"classes/SourceQueryDto.html":{},"classes/SteroidCommentsCountDto.html":{},"classes/SteroidDto.html":{},"classes/SteroidQueryDto.html":{},"classes/UpdateArticleDto.html":{},"classes/UpdateCategoryDto.html":{},"classes/UpdateCommentDto.html":{},"classes/UpdateCommonNameDto.html":{},"classes/UpdateManufacturerDto.html":{},"classes/UpdateReviewDto.html":{},"classes/UpdateSourceDto.html":{},"classes/UpdateSteroidDto.html":{},"classes/UpdateUserDto.html":{},"classes/UserDto.html":{},"classes/UserQueryDto.html":{}}}],["source",{"_index":4,"title":{"classes/Source.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/Article.html":{},"classes/ArticleDto.html":{},"classes/ArticleQueryDto.html":{},"controllers/ArticlesController.html":{},"modules/ArticlesModule.html":{},"injectables/ArticlesService.html":{},"controllers/AuthController.html":{},"modules/AuthenticationModule.html":{},"injectables/AuthenticationService.html":{},"classes/Base.html":{},"classes/BaseDto.html":{},"controllers/CategoriesController.html":{},"modules/CategoriesModule.html":{},"injectables/CategoriesService.html":{},"classes/Category.html":{},"classes/CategoryDto.html":{},"classes/CategoryQueryDto.html":{},"classes/Comment.html":{},"classes/CommentDto.html":{},"classes/CommentQueryDto.html":{},"controllers/CommentsController.html":{},"modules/CommentsModule.html":{},"injectables/CommentsService.html":{},"classes/CommonName.html":{},"classes/CommonNameDto.html":{},"classes/CommonNameQueryDto.html":{},"controllers/CommonNamesController.html":{},"modules/CommonNamesModule.html":{},"injectables/CommonNamesService.html":{},"classes/CreateArticleDto.html":{},"classes/CreateCategoryDto.html":{},"classes/CreateCommentDto.html":{},"classes/CreateCommonNameDto.html":{},"classes/CreateManufacturerDto.html":{},"classes/CreateReviewDto.html":{},"classes/CreateSourceDto.html":{},"classes/CreateSteroidDto.html":{},"classes/CreateUserDto.html":{},"injectables/CrudService.html":{},"classes/FileNotImageException.html":{},"classes/GeneratorProvider.html":{},"injectables/GeneratorService.html":{},"interfaces/IApiFile.html":{},"interfaces/IFieldOptions.html":{},"interfaces/IFile.html":{},"interfaces/INumberFieldOptions.html":{},"interfaces/IStringFieldOptions.html":{},"injectables/JwtStrategy.html":{},"classes/LoginPayloadDto.html":{},"classes/Manufacturer.html":{},"classes/ManufacturerDto.html":{},"classes/ManufacturerQueryDto.html":{},"controllers/ManufacturersController.html":{},"modules/ManufacturersModule.html":{},"injectables/ManufacturersService.html":{},"classes/PaginationQueryDto.html":{},"classes/Review.html":{},"classes/ReviewDto.html":{},"classes/ReviewQueryDto.html":{},"controllers/ReviewsController.html":{},"modules/ReviewsModule.html":{},"injectables/ReviewsService.html":{},"modules/SharedModule.html":{},"classes/Source.html":{},"classes/SourceDto.html":{},"classes/SourceQueryDto.html":{},"controllers/SourcesController.html":{},"modules/SourcesModule.html":{},"injectables/SourcesService.html":{},"classes/Steroid.html":{},"classes/SteroidCommentsCountDto.html":{},"classes/SteroidDto.html":{},"classes/SteroidQueryDto.html":{},"controllers/SteroidsController.html":{},"modules/SteroidsModule.html":{},"injectables/SteroidsService.html":{},"classes/TokenPayloadDto.html":{},"classes/UpdateArticleDto.html":{},"classes/UpdateCategoryDto.html":{},"classes/UpdateCommentDto.html":{},"classes/UpdateCommonNameDto.html":{},"classes/UpdateManufacturerDto.html":{},"classes/UpdateReviewDto.html":{},"classes/UpdateSourceDto.html":{},"classes/UpdateSteroidDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"classes/UserDto.html":{},"classes/UserLoginDto.html":{},"classes/UserQueryDto.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"injectables/ValidatorService.html":{},"modules/_SteroidsModule.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"index.html":{}}}],["source'})@apiresponse({status",{"_index":1195,"title":{},"body":{"controllers/SourcesController.html":{}}}],["source.dto",{"_index":1213,"title":{},"body":{"controllers/SourcesController.html":{},"injectables/SourcesService.html":{}}}],["source.dto.ts",{"_index":713,"title":{},"body":{"classes/CreateSourceDto.html":{},"coverage.html":{}}}],["source.dto.ts:5",{"_index":718,"title":{},"body":{"classes/CreateSourceDto.html":{}}}],["source.dto.ts:8",{"_index":717,"title":{},"body":{"classes/CreateSourceDto.html":{}}}],["source.name",{"_index":538,"title":{},"body":{"classes/Comment.html":{},"classes/Review.html":{},"modules/SourcesModule.html":{}}}],["source.schema",{"_index":1232,"title":{},"body":{"modules/SourcesModule.html":{},"injectables/SourcesService.html":{}}}],["sourcedocument",{"_index":1178,"title":{},"body":{"classes/Source.html":{},"injectables/SourcesService.html":{},"miscellaneous/typealiases.html":{}}}],["sourcedto",{"_index":1182,"title":{"classes/SourceDto.html":{}},"body":{"classes/SourceDto.html":{},"classes/SourceQueryDto.html":{},"controllers/SourcesController.html":{},"injectables/SourcesService.html":{},"classes/UpdateSourceDto.html":{},"coverage.html":{}}}],["sourcedto})@apiresponse({status",{"_index":1196,"title":{},"body":{"controllers/SourcesController.html":{}}}],["sourceid",{"_index":1201,"title":{},"body":{"controllers/SourcesController.html":{}}}],["sourceimage",{"_index":714,"title":{},"body":{"classes/CreateSourceDto.html":{},"classes/SourceDto.html":{},"classes/SourceQueryDto.html":{},"classes/UpdateSourceDto.html":{}}}],["sourceimages",{"_index":1174,"title":{},"body":{"classes/Source.html":{}}}],["sourcemodel",{"_index":1237,"title":{},"body":{"injectables/SourcesService.html":{}}}],["sourcequerydto",{"_index":1188,"title":{"classes/SourceQueryDto.html":{}},"body":{"classes/SourceDto.html":{},"classes/SourceQueryDto.html":{},"controllers/SourcesController.html":{},"injectables/SourcesService.html":{},"classes/UpdateSourceDto.html":{},"coverage.html":{}}}],["sources",{"_index":1193,"title":{},"body":{"controllers/SourcesController.html":{}}}],["sources'})@apiresponse({status",{"_index":1203,"title":{},"body":{"controllers/SourcesController.html":{}}}],["sources.controller",{"_index":1233,"title":{},"body":{"modules/SourcesModule.html":{}}}],["sources.service",{"_index":1212,"title":{},"body":{"controllers/SourcesController.html":{},"modules/SourcesModule.html":{}}}],["sources/source.schema",{"_index":531,"title":{},"body":{"classes/Comment.html":{},"classes/Review.html":{}}}],["sourceschema",{"_index":1179,"title":{},"body":{"classes/Source.html":{},"modules/SourcesModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["sourceschema.pre('save",{"_index":1181,"title":{},"body":{"classes/Source.html":{}}}],["sourcescontroller",{"_index":1191,"title":{"controllers/SourcesController.html":{}},"body":{"controllers/SourcesController.html":{},"modules/SourcesModule.html":{},"coverage.html":{}}}],["sourceservice",{"_index":1217,"title":{},"body":{"controllers/SourcesController.html":{}}}],["sourcesmodule",{"_index":49,"title":{"modules/SourcesModule.html":{}},"body":{"modules/AppModule.html":{},"modules/SourcesModule.html":{},"modules.html":{},"overview.html":{}}}],["sourcesservice",{"_index":1211,"title":{"injectables/SourcesService.html":{}},"body":{"controllers/SourcesController.html":{},"modules/SourcesModule.html":{},"injectables/SourcesService.html":{},"coverage.html":{},"overview.html":{}}}],["sponsors",{"_index":1555,"title":{},"body":{"index.html":{}}}],["src/.../app.constants.ts",{"_index":1508,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../article.schema.ts",{"_index":1589,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/.../category.schema.ts",{"_index":1590,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/.../category.types.ts",{"_index":1505,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../comment.schema.ts",{"_index":1506,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/.../common",{"_index":1591,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/.../config.type.ts",{"_index":1593,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../field.decorators.ts",{"_index":1594,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../index.ts",{"_index":1605,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../manufacturer.schema.ts",{"_index":1596,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/.../review.schema.ts",{"_index":1597,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/.../shared.module.ts",{"_index":1606,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../source.schema.ts",{"_index":1598,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/.../steroid.schema.ts",{"_index":1599,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/.../types.ts",{"_index":1592,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../user.schema.ts",{"_index":1600,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/.../user.types.ts",{"_index":1507,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/@base/dto/base.dto",{"_index":166,"title":{},"body":{"classes/ArticleDto.html":{},"classes/ArticleQueryDto.html":{},"classes/CategoryDto.html":{},"classes/CategoryQueryDto.html":{},"classes/CommentDto.html":{},"classes/CommentQueryDto.html":{},"classes/CommonNameDto.html":{},"classes/CommonNameQueryDto.html":{},"classes/ManufacturerDto.html":{},"classes/ManufacturerQueryDto.html":{},"classes/ReviewDto.html":{},"classes/ReviewQueryDto.html":{},"classes/SourceDto.html":{},"classes/SourceQueryDto.html":{},"classes/SteroidCommentsCountDto.html":{},"classes/SteroidDto.html":{},"classes/SteroidQueryDto.html":{},"classes/UpdateArticleDto.html":{},"classes/UpdateCategoryDto.html":{},"classes/UpdateCommentDto.html":{},"classes/UpdateCommonNameDto.html":{},"classes/UpdateManufacturerDto.html":{},"classes/UpdateReviewDto.html":{},"classes/UpdateSourceDto.html":{},"classes/UpdateSteroidDto.html":{},"classes/UpdateUserDto.html":{},"classes/UserDto.html":{},"classes/UserQueryDto.html":{}}}],["src/@base/dto/base.dto.ts",{"_index":422,"title":{},"body":{"classes/BaseDto.html":{},"coverage.html":{}}}],["src/@base/dto/base.dto.ts:10",{"_index":423,"title":{},"body":{"classes/BaseDto.html":{}}}],["src/@base/dto/base.dto.ts:13",{"_index":424,"title":{},"body":{"classes/BaseDto.html":{}}}],["src/@base/dto/base.dto.ts:16",{"_index":425,"title":{},"body":{"classes/BaseDto.html":{}}}],["src/@base/dto/pagination",{"_index":1085,"title":{},"body":{"classes/PaginationQueryDto.html":{},"coverage.html":{}}}],["src/@base/entity/base.entity",{"_index":137,"title":{},"body":{"classes/Article.html":{},"classes/Category.html":{},"classes/Comment.html":{},"classes/CommonName.html":{},"classes/Manufacturer.html":{},"classes/Review.html":{},"classes/Source.html":{},"classes/Steroid.html":{},"classes/User.html":{}}}],["src/@base/entity/base.entity.ts",{"_index":416,"title":{},"body":{"classes/Base.html":{},"coverage.html":{}}}],["src/@base/entity/base.entity.ts:6",{"_index":418,"title":{},"body":{"classes/Base.html":{}}}],["src/@base/entity/base.entity.ts:9",{"_index":419,"title":{},"body":{"classes/Base.html":{}}}],["src/@base/generics/crud",{"_index":296,"title":{},"body":{"injectables/ArticlesService.html":{},"injectables/CategoriesService.html":{},"injectables/CommentsService.html":{},"injectables/CommonNamesService.html":{},"injectables/CrudService.html":{},"injectables/ManufacturersService.html":{},"injectables/ReviewsService.html":{},"injectables/SourcesService.html":{},"injectables/SteroidsService.html":{},"coverage.html":{}}}],["src/@common/decorators/field.decorators",{"_index":169,"title":{},"body":{"classes/ArticleDto.html":{},"classes/ArticleQueryDto.html":{},"classes/CategoryDto.html":{},"classes/CategoryQueryDto.html":{},"classes/CommentDto.html":{},"classes/CommentQueryDto.html":{},"classes/CommonNameDto.html":{},"classes/CommonNameQueryDto.html":{},"classes/CreateArticleDto.html":{},"classes/CreateCategoryDto.html":{},"classes/CreateCommentDto.html":{},"classes/CreateCommonNameDto.html":{},"classes/CreateManufacturerDto.html":{},"classes/CreateReviewDto.html":{},"classes/CreateSourceDto.html":{},"classes/CreateSteroidDto.html":{},"classes/CreateUserDto.html":{},"classes/LoginPayloadDto.html":{},"classes/ManufacturerDto.html":{},"classes/ManufacturerQueryDto.html":{},"classes/PaginationQueryDto.html":{},"classes/ReviewDto.html":{},"classes/ReviewQueryDto.html":{},"classes/SourceDto.html":{},"classes/SourceQueryDto.html":{},"classes/SteroidCommentsCountDto.html":{},"classes/SteroidDto.html":{},"classes/SteroidQueryDto.html":{},"classes/TokenPayloadDto.html":{},"classes/UpdateArticleDto.html":{},"classes/UpdateCategoryDto.html":{},"classes/UpdateCommentDto.html":{},"classes/UpdateCommonNameDto.html":{},"classes/UpdateManufacturerDto.html":{},"classes/UpdateReviewDto.html":{},"classes/UpdateSourceDto.html":{},"classes/UpdateSteroidDto.html":{},"classes/UpdateUserDto.html":{},"classes/UserDto.html":{},"classes/UserLoginDto.html":{},"classes/UserQueryDto.html":{}}}],["src/@common/decorators/field.decorators.ts",{"_index":864,"title":{},"body":{"interfaces/IFieldOptions.html":{},"interfaces/INumberFieldOptions.html":{},"interfaces/IStringFieldOptions.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["src/@common/decorators/property.decorators.ts",{"_index":1435,"title":{},"body":{"coverage.html":{}}}],["src/@common/decorators/swagger.schema.ts",{"_index":1440,"title":{},"body":{"coverage.html":{}}}],["src/@common/decorators/transform.decorators.ts",{"_index":1445,"title":{},"body":{"coverage.html":{}}}],["src/@common/decorators/use",{"_index":1449,"title":{},"body":{"coverage.html":{}}}],["src/@common/decorators/validator.decorators.ts",{"_index":1452,"title":{},"body":{"coverage.html":{}}}],["src/@common/env",{"_index":360,"title":{},"body":{"modules/AuthenticationModule.html":{},"injectables/JwtStrategy.html":{},"miscellaneous/typealiases.html":{}}}],["src/@common/exceptions/file",{"_index":810,"title":{},"body":{"classes/FileNotImageException.html":{},"coverage.html":{}}}],["src/@common/global",{"_index":818,"title":{},"body":{"classes/GeneratorProvider.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["src/@common/interfaces/iapifile.ts",{"_index":860,"title":{},"body":{"interfaces/IApiFile.html":{},"coverage.html":{}}}],["src/@common/interfaces/ifile.ts",{"_index":976,"title":{},"body":{"interfaces/IFile.html":{},"coverage.html":{}}}],["src/@common/utilities/keys.ts",{"_index":1457,"title":{},"body":{"coverage.html":{}}}],["src/@common/utilities/mongodb",{"_index":777,"title":{},"body":{"injectables/CrudService.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["src/@common/utilities/utils",{"_index":396,"title":{},"body":{"injectables/AuthenticationService.html":{},"classes/User.html":{}}}],["src/@common/utilities/utils.ts",{"_index":1462,"title":{},"body":{"coverage.html":{}}}],["src/app.constants",{"_index":390,"title":{},"body":{"injectables/AuthenticationService.html":{},"injectables/JwtStrategy.html":{}}}],["src/app.constants.ts",{"_index":1515,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/app.controller.ts",{"_index":6,"title":{},"body":{"controllers/AppController.html":{},"coverage.html":{}}}],["src/app.controller.ts:11",{"_index":14,"title":{},"body":{"controllers/AppController.html":{}}}],["src/app.module.ts",{"_index":55,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app.module.ts:46",{"_index":60,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app.service.ts",{"_index":106,"title":{},"body":{"injectables/AppService.html":{},"coverage.html":{}}}],["src/app.service.ts:14",{"_index":110,"title":{},"body":{"injectables/AppService.html":{}}}],["src/app.service.ts:9",{"_index":109,"title":{},"body":{"injectables/AppService.html":{}}}],["src/main.ts",{"_index":1465,"title":{},"body":{"coverage.html":{}}}],["src/modules/articles/article.schema.ts",{"_index":119,"title":{},"body":{"classes/Article.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/modules/articles/article.schema.ts:12",{"_index":131,"title":{},"body":{"classes/Article.html":{}}}],["src/modules/articles/article.schema.ts:15",{"_index":126,"title":{},"body":{"classes/Article.html":{}}}],["src/modules/articles/article.schema.ts:18",{"_index":130,"title":{},"body":{"classes/Article.html":{}}}],["src/modules/articles/articles.controller.ts",{"_index":181,"title":{},"body":{"controllers/ArticlesController.html":{},"coverage.html":{}}}],["src/modules/articles/articles.controller.ts:102",{"_index":207,"title":{},"body":{"controllers/ArticlesController.html":{}}}],["src/modules/articles/articles.controller.ts:40",{"_index":200,"title":{},"body":{"controllers/ArticlesController.html":{}}}],["src/modules/articles/articles.controller.ts:55",{"_index":215,"title":{},"body":{"controllers/ArticlesController.html":{}}}],["src/modules/articles/articles.controller.ts:70",{"_index":219,"title":{},"body":{"controllers/ArticlesController.html":{}}}],["src/modules/articles/articles.controller.ts:85",{"_index":223,"title":{},"body":{"controllers/ArticlesController.html":{}}}],["src/modules/articles/articles.module.ts",{"_index":266,"title":{},"body":{"modules/ArticlesModule.html":{}}}],["src/modules/articles/articles.service.ts",{"_index":271,"title":{},"body":{"injectables/ArticlesService.html":{},"coverage.html":{}}}],["src/modules/articles/articles.service.ts:19",{"_index":277,"title":{},"body":{"injectables/ArticlesService.html":{}}}],["src/modules/articles/dto/article.dto.ts",{"_index":148,"title":{},"body":{"classes/ArticleDto.html":{},"classes/ArticleQueryDto.html":{},"classes/UpdateArticleDto.html":{},"coverage.html":{}}}],["src/modules/articles/dto/article.dto.ts:10",{"_index":155,"title":{},"body":{"classes/ArticleDto.html":{}}}],["src/modules/articles/dto/article.dto.ts:13",{"_index":154,"title":{},"body":{"classes/ArticleDto.html":{}}}],["src/modules/articles/dto/article.dto.ts:25",{"_index":179,"title":{},"body":{"classes/ArticleQueryDto.html":{}}}],["src/modules/articles/dto/article.dto.ts:29",{"_index":178,"title":{},"body":{"classes/ArticleQueryDto.html":{}}}],["src/modules/articles/dto/create",{"_index":680,"title":{},"body":{"classes/CreateArticleDto.html":{},"coverage.html":{}}}],["src/modules/authentication/authentication.controller.ts",{"_index":301,"title":{},"body":{"controllers/AuthController.html":{},"coverage.html":{}}}],["src/modules/authentication/authentication.controller.ts:25",{"_index":311,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/modules/authentication/authentication.controller.ts:41",{"_index":317,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/modules/authentication/authentication.module.ts",{"_index":353,"title":{},"body":{"modules/AuthenticationModule.html":{}}}],["src/modules/authentication/authentication.service.ts",{"_index":374,"title":{},"body":{"injectables/AuthenticationService.html":{},"coverage.html":{}}}],["src/modules/authentication/authentication.service.ts:15",{"_index":379,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["src/modules/authentication/authentication.service.ts:22",{"_index":382,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["src/modules/authentication/authentication.service.ts:36",{"_index":385,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["src/modules/authentication/dto/login",{"_index":1006,"title":{},"body":{"classes/LoginPayloadDto.html":{},"coverage.html":{}}}],["src/modules/authentication/dto/token",{"_index":1338,"title":{},"body":{"classes/TokenPayloadDto.html":{},"coverage.html":{}}}],["src/modules/authentication/dto/user",{"_index":1380,"title":{},"body":{"classes/UserLoginDto.html":{},"coverage.html":{}}}],["src/modules/authentication/strategies/jwt.strategy.ts",{"_index":983,"title":{},"body":{"injectables/JwtStrategy.html":{},"coverage.html":{}}}],["src/modules/authentication/strategies/jwt.strategy.ts:12",{"_index":987,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["src/modules/authentication/strategies/jwt.strategy.ts:24",{"_index":989,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["src/modules/categories/categories.controller.ts",{"_index":433,"title":{},"body":{"controllers/CategoriesController.html":{},"coverage.html":{}}}],["src/modules/categories/categories.controller.ts:102",{"_index":443,"title":{},"body":{"controllers/CategoriesController.html":{}}}],["src/modules/categories/categories.controller.ts:40",{"_index":440,"title":{},"body":{"controllers/CategoriesController.html":{}}}],["src/modules/categories/categories.controller.ts:55",{"_index":448,"title":{},"body":{"controllers/CategoriesController.html":{}}}],["src/modules/categories/categories.controller.ts:70",{"_index":451,"title":{},"body":{"controllers/CategoriesController.html":{}}}],["src/modules/categories/categories.controller.ts:85",{"_index":455,"title":{},"body":{"controllers/CategoriesController.html":{}}}],["src/modules/categories/categories.module.ts",{"_index":477,"title":{},"body":{"modules/CategoriesModule.html":{}}}],["src/modules/categories/categories.service.ts",{"_index":482,"title":{},"body":{"injectables/CategoriesService.html":{},"coverage.html":{}}}],["src/modules/categories/categories.service.ts:23",{"_index":485,"title":{},"body":{"injectables/CategoriesService.html":{}}}],["src/modules/categories/categories.service.ts:30",{"_index":487,"title":{},"body":{"injectables/CategoriesService.html":{}}}],["src/modules/categories/category.schema.ts",{"_index":495,"title":{},"body":{"classes/Category.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/modules/categories/category.schema.ts:15",{"_index":499,"title":{},"body":{"classes/Category.html":{}}}],["src/modules/categories/category.schema.ts:18",{"_index":496,"title":{},"body":{"classes/Category.html":{}}}],["src/modules/categories/category.types.ts",{"_index":1509,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/modules/categories/dto/category.dto.ts",{"_index":505,"title":{},"body":{"classes/CategoryDto.html":{},"classes/CategoryQueryDto.html":{},"classes/UpdateCategoryDto.html":{},"coverage.html":{}}}],["src/modules/categories/dto/category.dto.ts:12",{"_index":508,"title":{},"body":{"classes/CategoryDto.html":{}}}],["src/modules/categories/dto/category.dto.ts:15",{"_index":506,"title":{},"body":{"classes/CategoryDto.html":{}}}],["src/modules/categories/dto/category.dto.ts:27",{"_index":512,"title":{},"body":{"classes/CategoryQueryDto.html":{}}}],["src/modules/categories/dto/category.dto.ts:31",{"_index":511,"title":{},"body":{"classes/CategoryQueryDto.html":{}}}],["src/modules/categories/dto/create",{"_index":690,"title":{},"body":{"classes/CreateCategoryDto.html":{},"coverage.html":{}}}],["src/modules/comments",{"_index":1323,"title":{},"body":{"modules/SteroidsModule.html":{}}}],["src/modules/comments/comment.schema.ts",{"_index":514,"title":{},"body":{"classes/Comment.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/modules/comments/comment.schema.ts:20",{"_index":518,"title":{},"body":{"classes/Comment.html":{}}}],["src/modules/comments/comment.schema.ts:23",{"_index":522,"title":{},"body":{"classes/Comment.html":{}}}],["src/modules/comments/comment.schema.ts:30",{"_index":527,"title":{},"body":{"classes/Comment.html":{}}}],["src/modules/comments/comment.schema.ts:33",{"_index":525,"title":{},"body":{"classes/Comment.html":{}}}],["src/modules/comments/comment.schema.ts:36",{"_index":524,"title":{},"body":{"classes/Comment.html":{}}}],["src/modules/comments/comment.schema.ts:39",{"_index":520,"title":{},"body":{"classes/Comment.html":{}}}],["src/modules/comments/comments.controller.ts",{"_index":553,"title":{},"body":{"controllers/CommentsController.html":{},"coverage.html":{}}}],["src/modules/comments/comments.controller.ts:102",{"_index":562,"title":{},"body":{"controllers/CommentsController.html":{}}}],["src/modules/comments/comments.controller.ts:40",{"_index":559,"title":{},"body":{"controllers/CommentsController.html":{}}}],["src/modules/comments/comments.controller.ts:55",{"_index":566,"title":{},"body":{"controllers/CommentsController.html":{}}}],["src/modules/comments/comments.controller.ts:70",{"_index":569,"title":{},"body":{"controllers/CommentsController.html":{}}}],["src/modules/comments/comments.controller.ts:85",{"_index":572,"title":{},"body":{"controllers/CommentsController.html":{}}}],["src/modules/comments/comments.module.ts",{"_index":593,"title":{},"body":{"modules/CommentsModule.html":{}}}],["src/modules/comments/comments.service",{"_index":1332,"title":{},"body":{"injectables/SteroidsService.html":{}}}],["src/modules/comments/comments.service.ts",{"_index":597,"title":{},"body":{"injectables/CommentsService.html":{},"coverage.html":{}}}],["src/modules/comments/comments.service.ts:19",{"_index":599,"title":{},"body":{"injectables/CommentsService.html":{}}}],["src/modules/comments/dto/comment.dto.ts",{"_index":544,"title":{},"body":{"classes/CommentDto.html":{},"classes/CommentQueryDto.html":{},"classes/UpdateCommentDto.html":{},"coverage.html":{}}}],["src/modules/comments/dto/comment.dto.ts:10",{"_index":545,"title":{},"body":{"classes/CommentDto.html":{}}}],["src/modules/comments/dto/comment.dto.ts:13",{"_index":546,"title":{},"body":{"classes/CommentDto.html":{}}}],["src/modules/comments/dto/comment.dto.ts:25",{"_index":551,"title":{},"body":{"classes/CommentQueryDto.html":{}}}],["src/modules/comments/dto/comment.dto.ts:29",{"_index":550,"title":{},"body":{"classes/CommentQueryDto.html":{}}}],["src/modules/comments/dto/create",{"_index":694,"title":{},"body":{"classes/CreateCommentDto.html":{},"coverage.html":{}}}],["src/modules/reviews/dto/create",{"_index":707,"title":{},"body":{"classes/CreateReviewDto.html":{},"coverage.html":{}}}],["src/modules/reviews/dto/review.dto.ts",{"_index":1103,"title":{},"body":{"classes/ReviewDto.html":{},"classes/ReviewQueryDto.html":{},"classes/UpdateReviewDto.html":{},"coverage.html":{}}}],["src/modules/reviews/dto/review.dto.ts:10",{"_index":1105,"title":{},"body":{"classes/ReviewDto.html":{}}}],["src/modules/reviews/dto/review.dto.ts:13",{"_index":1104,"title":{},"body":{"classes/ReviewDto.html":{}}}],["src/modules/reviews/dto/review.dto.ts:25",{"_index":1110,"title":{},"body":{"classes/ReviewQueryDto.html":{}}}],["src/modules/reviews/dto/review.dto.ts:29",{"_index":1109,"title":{},"body":{"classes/ReviewQueryDto.html":{}}}],["src/modules/reviews/review.schema.ts",{"_index":1089,"title":{},"body":{"classes/Review.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/modules/reviews/review.schema.ts:16",{"_index":1093,"title":{},"body":{"classes/Review.html":{}}}],["src/modules/reviews/review.schema.ts:19",{"_index":1095,"title":{},"body":{"classes/Review.html":{}}}],["src/modules/reviews/review.schema.ts:22",{"_index":1094,"title":{},"body":{"classes/Review.html":{}}}],["src/modules/reviews/review.schema.ts:25",{"_index":1091,"title":{},"body":{"classes/Review.html":{}}}],["src/modules/reviews/review.schema.ts:28",{"_index":1092,"title":{},"body":{"classes/Review.html":{}}}],["src/modules/reviews/reviews.controller.ts",{"_index":1112,"title":{},"body":{"controllers/ReviewsController.html":{},"coverage.html":{}}}],["src/modules/reviews/reviews.controller.ts:36",{"_index":1117,"title":{},"body":{"controllers/ReviewsController.html":{}}}],["src/modules/reviews/reviews.controller.ts:51",{"_index":1124,"title":{},"body":{"controllers/ReviewsController.html":{}}}],["src/modules/reviews/reviews.controller.ts:66",{"_index":1127,"title":{},"body":{"controllers/ReviewsController.html":{}}}],["src/modules/reviews/reviews.controller.ts:81",{"_index":1130,"title":{},"body":{"controllers/ReviewsController.html":{}}}],["src/modules/reviews/reviews.controller.ts:98",{"_index":1120,"title":{},"body":{"controllers/ReviewsController.html":{}}}],["src/modules/reviews/reviews.module.ts",{"_index":1151,"title":{},"body":{"modules/ReviewsModule.html":{}}}],["src/modules/reviews/reviews.service.ts",{"_index":1155,"title":{},"body":{"injectables/ReviewsService.html":{},"coverage.html":{}}}],["src/modules/reviews/reviews.service.ts:15",{"_index":1157,"title":{},"body":{"injectables/ReviewsService.html":{}}}],["src/modules/sources/dto/create",{"_index":712,"title":{},"body":{"classes/CreateSourceDto.html":{},"coverage.html":{}}}],["src/modules/sources/dto/source.dto.ts",{"_index":1183,"title":{},"body":{"classes/SourceDto.html":{},"classes/SourceQueryDto.html":{},"classes/UpdateSourceDto.html":{},"coverage.html":{}}}],["src/modules/sources/dto/source.dto.ts:10",{"_index":1185,"title":{},"body":{"classes/SourceDto.html":{}}}],["src/modules/sources/dto/source.dto.ts:13",{"_index":1184,"title":{},"body":{"classes/SourceDto.html":{}}}],["src/modules/sources/dto/source.dto.ts:25",{"_index":1190,"title":{},"body":{"classes/SourceQueryDto.html":{}}}],["src/modules/sources/dto/source.dto.ts:29",{"_index":1189,"title":{},"body":{"classes/SourceQueryDto.html":{}}}],["src/modules/sources/source.schema.ts",{"_index":1173,"title":{},"body":{"classes/Source.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/modules/sources/source.schema.ts:13",{"_index":1177,"title":{},"body":{"classes/Source.html":{}}}],["src/modules/sources/source.schema.ts:16",{"_index":1176,"title":{},"body":{"classes/Source.html":{}}}],["src/modules/sources/source.schema.ts:19",{"_index":1175,"title":{},"body":{"classes/Source.html":{}}}],["src/modules/sources/sources.controller.ts",{"_index":1192,"title":{},"body":{"controllers/SourcesController.html":{},"coverage.html":{}}}],["src/modules/sources/sources.controller.ts:36",{"_index":1197,"title":{},"body":{"controllers/SourcesController.html":{}}}],["src/modules/sources/sources.controller.ts:51",{"_index":1204,"title":{},"body":{"controllers/SourcesController.html":{}}}],["src/modules/sources/sources.controller.ts:66",{"_index":1207,"title":{},"body":{"controllers/SourcesController.html":{}}}],["src/modules/sources/sources.controller.ts:81",{"_index":1210,"title":{},"body":{"controllers/SourcesController.html":{}}}],["src/modules/sources/sources.controller.ts:98",{"_index":1200,"title":{},"body":{"controllers/SourcesController.html":{}}}],["src/modules/sources/sources.module.ts",{"_index":1231,"title":{},"body":{"modules/SourcesModule.html":{}}}],["src/modules/sources/sources.service.ts",{"_index":1234,"title":{},"body":{"injectables/SourcesService.html":{},"coverage.html":{}}}],["src/modules/sources/sources.service.ts:19",{"_index":1236,"title":{},"body":{"injectables/SourcesService.html":{}}}],["src/modules/steroids/common",{"_index":604,"title":{},"body":{"classes/CommonName.html":{},"classes/CommonNameDto.html":{},"classes/CommonNameQueryDto.html":{},"controllers/CommonNamesController.html":{},"modules/CommonNamesModule.html":{},"injectables/CommonNamesService.html":{},"classes/CreateCommonNameDto.html":{},"classes/UpdateCommonNameDto.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/modules/steroids/manufacturers/dto/create",{"_index":703,"title":{},"body":{"classes/CreateManufacturerDto.html":{},"coverage.html":{}}}],["src/modules/steroids/manufacturers/dto/manufacturer.dto.ts",{"_index":1023,"title":{},"body":{"classes/ManufacturerDto.html":{},"classes/ManufacturerQueryDto.html":{},"classes/UpdateManufacturerDto.html":{},"coverage.html":{}}}],["src/modules/steroids/manufacturers/dto/manufacturer.dto.ts:10",{"_index":1024,"title":{},"body":{"classes/ManufacturerDto.html":{}}}],["src/modules/steroids/manufacturers/dto/manufacturer.dto.ts:22",{"_index":1029,"title":{},"body":{"classes/ManufacturerQueryDto.html":{}}}],["src/modules/steroids/manufacturers/dto/manufacturer.dto.ts:26",{"_index":1028,"title":{},"body":{"classes/ManufacturerQueryDto.html":{}}}],["src/modules/steroids/manufacturers/manufacturer.schema.ts",{"_index":1015,"title":{},"body":{"classes/Manufacturer.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/modules/steroids/manufacturers/manufacturer.schema.ts:12",{"_index":1017,"title":{},"body":{"classes/Manufacturer.html":{}}}],["src/modules/steroids/manufacturers/manufacturer.schema.ts:15",{"_index":1016,"title":{},"body":{"classes/Manufacturer.html":{}}}],["src/modules/steroids/manufacturers/manufacturers.controller.ts",{"_index":1031,"title":{},"body":{"controllers/ManufacturersController.html":{},"coverage.html":{}}}],["src/modules/steroids/manufacturers/manufacturers.controller.ts:117",{"_index":1039,"title":{},"body":{"controllers/ManufacturersController.html":{}}}],["src/modules/steroids/manufacturers/manufacturers.controller.ts:46",{"_index":1036,"title":{},"body":{"controllers/ManufacturersController.html":{}}}],["src/modules/steroids/manufacturers/manufacturers.controller.ts:63",{"_index":1042,"title":{},"body":{"controllers/ManufacturersController.html":{}}}],["src/modules/steroids/manufacturers/manufacturers.controller.ts:80",{"_index":1045,"title":{},"body":{"controllers/ManufacturersController.html":{}}}],["src/modules/steroids/manufacturers/manufacturers.controller.ts:97",{"_index":1048,"title":{},"body":{"controllers/ManufacturersController.html":{}}}],["src/modules/steroids/manufacturers/manufacturers.module.ts",{"_index":1068,"title":{},"body":{"modules/ManufacturersModule.html":{}}}],["src/modules/steroids/manufacturers/manufacturers.service.ts",{"_index":1072,"title":{},"body":{"injectables/ManufacturersService.html":{},"coverage.html":{}}}],["src/modules/steroids/manufacturers/manufacturers.service.ts:23",{"_index":1074,"title":{},"body":{"injectables/ManufacturersService.html":{}}}],["src/modules/steroids/manufacturers/manufacturers.service.ts:31",{"_index":1076,"title":{},"body":{"injectables/ManufacturersService.html":{}}}],["src/modules/steroids/steroids.module.ts",{"_index":1423,"title":{},"body":{"modules/_SteroidsModule.html":{}}}],["src/modules/steroids/steroids/dto/create",{"_index":720,"title":{},"body":{"classes/CreateSteroidDto.html":{},"coverage.html":{}}}],["src/modules/steroids/steroids/dto/steroid.dto.ts",{"_index":1251,"title":{},"body":{"classes/SteroidCommentsCountDto.html":{},"classes/SteroidDto.html":{},"classes/SteroidQueryDto.html":{},"classes/UpdateSteroidDto.html":{},"coverage.html":{}}}],["src/modules/steroids/steroids/dto/steroid.dto.ts:20",{"_index":1276,"title":{},"body":{"classes/SteroidDto.html":{}}}],["src/modules/steroids/steroids/dto/steroid.dto.ts:26",{"_index":1271,"title":{},"body":{"classes/SteroidDto.html":{}}}],["src/modules/steroids/steroids/dto/steroid.dto.ts:32",{"_index":1274,"title":{},"body":{"classes/SteroidDto.html":{}}}],["src/modules/steroids/steroids/dto/steroid.dto.ts:35",{"_index":1272,"title":{},"body":{"classes/SteroidDto.html":{}}}],["src/modules/steroids/steroids/dto/steroid.dto.ts:38",{"_index":1275,"title":{},"body":{"classes/SteroidDto.html":{}}}],["src/modules/steroids/steroids/dto/steroid.dto.ts:43",{"_index":1256,"title":{},"body":{"classes/SteroidCommentsCountDto.html":{}}}],["src/modules/steroids/steroids/dto/steroid.dto.ts:46",{"_index":1254,"title":{},"body":{"classes/SteroidCommentsCountDto.html":{}}}],["src/modules/steroids/steroids/dto/steroid.dto.ts:49",{"_index":1255,"title":{},"body":{"classes/SteroidCommentsCountDto.html":{}}}],["src/modules/steroids/steroids/dto/steroid.dto.ts:52",{"_index":1253,"title":{},"body":{"classes/SteroidCommentsCountDto.html":{}}}],["src/modules/steroids/steroids/dto/steroid.dto.ts:64",{"_index":1279,"title":{},"body":{"classes/SteroidQueryDto.html":{}}}],["src/modules/steroids/steroids/dto/steroid.dto.ts:68",{"_index":1277,"title":{},"body":{"classes/SteroidQueryDto.html":{}}}],["src/modules/steroids/steroids/dto/steroid.dto.ts:70",{"_index":1278,"title":{},"body":{"classes/SteroidQueryDto.html":{}}}],["src/modules/steroids/steroids/query",{"_index":1470,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/modules/steroids/steroids/steroid.schema.ts",{"_index":1240,"title":{},"body":{"classes/Steroid.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/modules/steroids/steroids/steroid.schema.ts:15",{"_index":1244,"title":{},"body":{"classes/Steroid.html":{}}}],["src/modules/steroids/steroids/steroid.schema.ts:18",{"_index":1241,"title":{},"body":{"classes/Steroid.html":{}}}],["src/modules/steroids/steroids/steroid.schema.ts:21",{"_index":1243,"title":{},"body":{"classes/Steroid.html":{}}}],["src/modules/steroids/steroids/steroid.schema.ts:24",{"_index":1242,"title":{},"body":{"classes/Steroid.html":{}}}],["src/modules/steroids/steroids/steroids.controller.ts",{"_index":1281,"title":{},"body":{"controllers/SteroidsController.html":{},"coverage.html":{}}}],["src/modules/steroids/steroids/steroids.controller.ts:101",{"_index":1289,"title":{},"body":{"controllers/SteroidsController.html":{}}}],["src/modules/steroids/steroids/steroids.controller.ts:39",{"_index":1286,"title":{},"body":{"controllers/SteroidsController.html":{}}}],["src/modules/steroids/steroids/steroids.controller.ts:54",{"_index":1292,"title":{},"body":{"controllers/SteroidsController.html":{}}}],["src/modules/steroids/steroids/steroids.controller.ts:69",{"_index":1295,"title":{},"body":{"controllers/SteroidsController.html":{}}}],["src/modules/steroids/steroids/steroids.controller.ts:84",{"_index":1298,"title":{},"body":{"controllers/SteroidsController.html":{}}}],["src/modules/steroids/steroids/steroids.module.ts",{"_index":1320,"title":{},"body":{"modules/SteroidsModule.html":{}}}],["src/modules/steroids/steroids/steroids.service.ts",{"_index":1324,"title":{},"body":{"injectables/SteroidsService.html":{},"coverage.html":{}}}],["src/modules/steroids/steroids/steroids.service.ts:23",{"_index":1327,"title":{},"body":{"injectables/SteroidsService.html":{}}}],["src/modules/steroids/steroids/steroids.service.ts:31",{"_index":1329,"title":{},"body":{"injectables/SteroidsService.html":{}}}],["src/modules/users/dto/create",{"_index":726,"title":{},"body":{"classes/CreateUserDto.html":{},"coverage.html":{}}}],["src/modules/users/dto/user.dto",{"_index":995,"title":{},"body":{"injectables/JwtStrategy.html":{},"classes/LoginPayloadDto.html":{}}}],["src/modules/users/dto/user.dto.ts",{"_index":1342,"title":{},"body":{"classes/UpdateUserDto.html":{},"classes/UserDto.html":{},"classes/UserQueryDto.html":{},"coverage.html":{}}}],["src/modules/users/dto/user.dto.ts:17",{"_index":1377,"title":{},"body":{"classes/UserDto.html":{}}}],["src/modules/users/dto/user.dto.ts:20",{"_index":1373,"title":{},"body":{"classes/UserDto.html":{}}}],["src/modules/users/dto/user.dto.ts:23",{"_index":1375,"title":{},"body":{"classes/UserDto.html":{}}}],["src/modules/users/dto/user.dto.ts:26",{"_index":1376,"title":{},"body":{"classes/UserDto.html":{}}}],["src/modules/users/dto/user.dto.ts:29",{"_index":1370,"title":{},"body":{"classes/UserDto.html":{}}}],["src/modules/users/dto/user.dto.ts:32",{"_index":1378,"title":{},"body":{"classes/UserDto.html":{}}}],["src/modules/users/dto/user.dto.ts:35",{"_index":1369,"title":{},"body":{"classes/UserDto.html":{}}}],["src/modules/users/dto/user.dto.ts:38",{"_index":1371,"title":{},"body":{"classes/UserDto.html":{}}}],["src/modules/users/dto/user.dto.ts:41",{"_index":1379,"title":{},"body":{"classes/UserDto.html":{}}}],["src/modules/users/dto/user.dto.ts:44",{"_index":1374,"title":{},"body":{"classes/UserDto.html":{}}}],["src/modules/users/dto/user.dto.ts:47",{"_index":1372,"title":{},"body":{"classes/UserDto.html":{}}}],["src/modules/users/dto/user.dto.ts:59",{"_index":1386,"title":{},"body":{"classes/UserQueryDto.html":{}}}],["src/modules/users/dto/user.dto.ts:63",{"_index":1385,"title":{},"body":{"classes/UserQueryDto.html":{}}}],["src/modules/users/types/user.types",{"_index":996,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["src/modules/users/types/user.types.ts",{"_index":1511,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/modules/users/user.schema",{"_index":1096,"title":{},"body":{"classes/Review.html":{},"classes/Steroid.html":{}}}],["src/modules/users/user.schema.ts",{"_index":1345,"title":{},"body":{"classes/User.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/modules/users/user.schema.ts:12",{"_index":1356,"title":{},"body":{"classes/User.html":{}}}],["src/modules/users/user.schema.ts:15",{"_index":1351,"title":{},"body":{"classes/User.html":{}}}],["src/modules/users/user.schema.ts:18",{"_index":1353,"title":{},"body":{"classes/User.html":{}}}],["src/modules/users/user.schema.ts:21",{"_index":1346,"title":{},"body":{"classes/User.html":{}}}],["src/modules/users/user.schema.ts:24",{"_index":1348,"title":{},"body":{"classes/User.html":{}}}],["src/modules/users/user.schema.ts:27",{"_index":1357,"title":{},"body":{"classes/User.html":{}}}],["src/modules/users/user.schema.ts:30",{"_index":1352,"title":{},"body":{"classes/User.html":{}}}],["src/modules/users/user.schema.ts:33",{"_index":1349,"title":{},"body":{"classes/User.html":{}}}],["src/modules/users/user.schema.ts:36",{"_index":1354,"title":{},"body":{"classes/User.html":{}}}],["src/modules/users/user.schema.ts:39",{"_index":1347,"title":{},"body":{"classes/User.html":{}}}],["src/modules/users/user.schema.ts:42",{"_index":1355,"title":{},"body":{"classes/User.html":{}}}],["src/modules/users/users.controller.ts",{"_index":1388,"title":{},"body":{"controllers/UsersController.html":{},"coverage.html":{}}}],["src/modules/users/users.module.ts",{"_index":1395,"title":{},"body":{"modules/UsersModule.html":{}}}],["src/modules/users/users.service",{"_index":997,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["src/modules/users/users.service.ts",{"_index":1398,"title":{},"body":{"injectables/UsersService.html":{},"coverage.html":{}}}],["src/modules/users/users.service.ts:11",{"_index":1400,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/modules/users/users.service.ts:16",{"_index":1404,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/modules/users/users.service.ts:31",{"_index":1403,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/shared/services/generator.service.ts",{"_index":852,"title":{},"body":{"injectables/GeneratorService.html":{},"coverage.html":{}}}],["src/shared/services/generator.service.ts:10",{"_index":854,"title":{},"body":{"injectables/GeneratorService.html":{}}}],["src/shared/services/generator.service.ts:6",{"_index":855,"title":{},"body":{"injectables/GeneratorService.html":{}}}],["src/shared/services/validator.service.ts",{"_index":1412,"title":{},"body":{"injectables/ValidatorService.html":{},"coverage.html":{}}}],["src/shared/services/validator.service.ts:5",{"_index":1415,"title":{},"body":{"injectables/ValidatorService.html":{}}}],["src/shared/shared.module.ts",{"_index":1166,"title":{},"body":{"modules/SharedModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/types",{"_index":899,"title":{},"body":{"interfaces/IFieldOptions.html":{},"interfaces/INumberFieldOptions.html":{},"interfaces/IStringFieldOptions.html":{}}}],["src/types.ts",{"_index":1601,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["start",{"_index":1538,"title":{},"body":{"index.html":{}}}],["start:dev",{"_index":1541,"title":{},"body":{"index.html":{}}}],["start:prodtest",{"_index":1543,"title":{},"body":{"index.html":{}}}],["started",{"_index":1519,"title":{"index.html":{}},"body":{}}],["starter",{"_index":1530,"title":{},"body":{"index.html":{}}}],["statements",{"_index":1429,"title":{},"body":{"coverage.html":{}}}],["static",{"_index":820,"title":{},"body":{"classes/GeneratorProvider.html":{}}}],["status",{"_index":245,"title":{},"body":{"controllers/ArticlesController.html":{},"controllers/CategoriesController.html":{},"controllers/CommentsController.html":{},"controllers/CommonNamesController.html":{},"controllers/ManufacturersController.html":{},"controllers/ReviewsController.html":{},"controllers/SourcesController.html":{},"controllers/SteroidsController.html":{}}}],["stay",{"_index":1565,"title":{},"body":{"index.html":{}}}],["steroid",{"_index":529,"title":{"classes/Steroid.html":{}},"body":{"classes/Comment.html":{},"classes/Review.html":{},"classes/Steroid.html":{},"controllers/SteroidsController.html":{},"modules/SteroidsModule.html":{},"injectables/SteroidsService.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["steroid'})@apiresponse({status",{"_index":1284,"title":{},"body":{"controllers/SteroidsController.html":{}}}],["steroid.dto",{"_index":1301,"title":{},"body":{"controllers/SteroidsController.html":{},"injectables/SteroidsService.html":{}}}],["steroid.dto.ts",{"_index":721,"title":{},"body":{"classes/CreateSteroidDto.html":{},"coverage.html":{}}}],["steroid.dto.ts:11",{"_index":724,"title":{},"body":{"classes/CreateSteroidDto.html":{}}}],["steroid.dto.ts:5",{"_index":725,"title":{},"body":{"classes/CreateSteroidDto.html":{}}}],["steroid.dto.ts:8",{"_index":723,"title":{},"body":{"classes/CreateSteroidDto.html":{}}}],["steroid.name",{"_index":537,"title":{},"body":{"classes/Comment.html":{},"classes/Review.html":{},"modules/SteroidsModule.html":{}}}],["steroid.schema",{"_index":1321,"title":{},"body":{"modules/SteroidsModule.html":{},"injectables/SteroidsService.html":{}}}],["steroidcommentscountdto",{"_index":1250,"title":{"classes/SteroidCommentsCountDto.html":{}},"body":{"classes/SteroidCommentsCountDto.html":{},"classes/SteroidDto.html":{},"classes/SteroidQueryDto.html":{},"controllers/SteroidsController.html":{},"injectables/SteroidsService.html":{},"classes/UpdateSteroidDto.html":{},"coverage.html":{}}}],["steroiddocument",{"_index":1246,"title":{},"body":{"classes/Steroid.html":{},"injectables/SteroidsService.html":{},"miscellaneous/typealiases.html":{}}}],["steroiddto",{"_index":1260,"title":{"classes/SteroidDto.html":{}},"body":{"classes/SteroidCommentsCountDto.html":{},"classes/SteroidDto.html":{},"classes/SteroidQueryDto.html":{},"controllers/SteroidsController.html":{},"injectables/SteroidsService.html":{},"classes/UpdateSteroidDto.html":{},"coverage.html":{}}}],["steroiddto})@apiresponse({status",{"_index":1285,"title":{},"body":{"controllers/SteroidsController.html":{}}}],["steroidid",{"_index":1290,"title":{},"body":{"controllers/SteroidsController.html":{}}}],["steroidmodel",{"_index":1328,"title":{},"body":{"injectables/SteroidsService.html":{}}}],["steroidquerydto",{"_index":1267,"title":{"classes/SteroidQueryDto.html":{}},"body":{"classes/SteroidCommentsCountDto.html":{},"classes/SteroidDto.html":{},"classes/SteroidQueryDto.html":{},"injectables/SteroidsService.html":{},"classes/UpdateSteroidDto.html":{},"coverage.html":{}}}],["steroids",{"_index":1282,"title":{},"body":{"controllers/SteroidsController.html":{},"injectables/SteroidsService.html":{}}}],["steroids'})@apiresponse({status",{"_index":1291,"title":{},"body":{"controllers/SteroidsController.html":{}}}],["steroids.controller",{"_index":1322,"title":{},"body":{"modules/SteroidsModule.html":{}}}],["steroids.map((steroid",{"_index":1336,"title":{},"body":{"injectables/SteroidsService.html":{}}}],["steroids.service",{"_index":1300,"title":{},"body":{"controllers/SteroidsController.html":{},"modules/SteroidsModule.html":{}}}],["steroids/steroids.module",{"_index":1424,"title":{},"body":{"modules/_SteroidsModule.html":{}}}],["steroids/steroids/steroid.schema",{"_index":530,"title":{},"body":{"classes/Comment.html":{},"classes/Review.html":{}}}],["steroidschema",{"_index":1247,"title":{},"body":{"classes/Steroid.html":{},"modules/SteroidsModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["steroidschema.pre('save",{"_index":1249,"title":{},"body":{"classes/Steroid.html":{}}}],["steroidscontroller",{"_index":1280,"title":{"controllers/SteroidsController.html":{}},"body":{"controllers/SteroidsController.html":{},"modules/SteroidsModule.html":{},"coverage.html":{}}}],["steroidservice",{"_index":1305,"title":{},"body":{"controllers/SteroidsController.html":{}}}],["steroidsmodule",{"_index":1316,"title":{"modules/SteroidsModule.html":{}},"body":{"modules/SteroidsModule.html":{},"modules/_SteroidsModule.html":{},"modules.html":{},"overview.html":{}}}],["steroidsservice",{"_index":1299,"title":{"injectables/SteroidsService.html":{}},"body":{"controllers/SteroidsController.html":{},"modules/SteroidsModule.html":{},"injectables/SteroidsService.html":{},"coverage.html":{},"overview.html":{}}}],["strategies/jwt.strategy",{"_index":358,"title":{},"body":{"modules/AuthenticationModule.html":{}}}],["strategy",{"_index":993,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["string",{"_index":16,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"classes/Article.html":{},"classes/ArticleDto.html":{},"classes/ArticleQueryDto.html":{},"controllers/ArticlesController.html":{},"injectables/ArticlesService.html":{},"injectables/AuthenticationService.html":{},"classes/BaseDto.html":{},"controllers/CategoriesController.html":{},"injectables/CategoriesService.html":{},"classes/Category.html":{},"classes/CategoryDto.html":{},"classes/CategoryQueryDto.html":{},"classes/Comment.html":{},"classes/CommentDto.html":{},"classes/CommentQueryDto.html":{},"controllers/CommentsController.html":{},"injectables/CommentsService.html":{},"classes/CommonName.html":{},"classes/CommonNameDto.html":{},"classes/CommonNameQueryDto.html":{},"controllers/CommonNamesController.html":{},"injectables/CommonNamesService.html":{},"classes/CreateArticleDto.html":{},"classes/CreateCategoryDto.html":{},"classes/CreateCommentDto.html":{},"classes/CreateCommonNameDto.html":{},"classes/CreateManufacturerDto.html":{},"classes/CreateReviewDto.html":{},"classes/CreateSourceDto.html":{},"classes/CreateSteroidDto.html":{},"classes/CreateUserDto.html":{},"injectables/CrudService.html":{},"classes/FileNotImageException.html":{},"classes/GeneratorProvider.html":{},"injectables/GeneratorService.html":{},"interfaces/IApiFile.html":{},"interfaces/IFieldOptions.html":{},"interfaces/IFile.html":{},"interfaces/INumberFieldOptions.html":{},"interfaces/IStringFieldOptions.html":{},"injectables/JwtStrategy.html":{},"classes/Manufacturer.html":{},"classes/ManufacturerDto.html":{},"classes/ManufacturerQueryDto.html":{},"controllers/ManufacturersController.html":{},"injectables/ManufacturersService.html":{},"classes/Review.html":{},"classes/ReviewDto.html":{},"classes/ReviewQueryDto.html":{},"controllers/ReviewsController.html":{},"injectables/ReviewsService.html":{},"classes/Source.html":{},"classes/SourceDto.html":{},"classes/SourceQueryDto.html":{},"controllers/SourcesController.html":{},"injectables/SourcesService.html":{},"classes/Steroid.html":{},"classes/SteroidCommentsCountDto.html":{},"classes/SteroidDto.html":{},"classes/SteroidQueryDto.html":{},"controllers/SteroidsController.html":{},"injectables/SteroidsService.html":{},"classes/TokenPayloadDto.html":{},"classes/UpdateArticleDto.html":{},"classes/UpdateCategoryDto.html":{},"classes/UpdateCommentDto.html":{},"classes/UpdateCommonNameDto.html":{},"classes/UpdateManufacturerDto.html":{},"classes/UpdateReviewDto.html":{},"classes/UpdateSourceDto.html":{},"classes/UpdateSteroidDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"classes/UserDto.html":{},"classes/UserLoginDto.html":{},"classes/UserQueryDto.html":{},"injectables/ValidatorService.html":{}}}],["stringfield",{"_index":168,"title":{},"body":{"classes/ArticleDto.html":{},"classes/ArticleQueryDto.html":{},"classes/CategoryDto.html":{},"classes/CategoryQueryDto.html":{},"classes/CommentDto.html":{},"classes/CommentQueryDto.html":{},"classes/CommonNameDto.html":{},"classes/CommonNameQueryDto.html":{},"classes/CreateArticleDto.html":{},"classes/CreateCategoryDto.html":{},"classes/CreateCommentDto.html":{},"classes/CreateCommonNameDto.html":{},"classes/CreateManufacturerDto.html":{},"classes/CreateReviewDto.html":{},"classes/CreateSourceDto.html":{},"classes/CreateSteroidDto.html":{},"classes/CreateUserDto.html":{},"interfaces/IFieldOptions.html":{},"interfaces/INumberFieldOptions.html":{},"interfaces/IStringFieldOptions.html":{},"classes/ManufacturerDto.html":{},"classes/ManufacturerQueryDto.html":{},"classes/ReviewDto.html":{},"classes/ReviewQueryDto.html":{},"classes/SourceDto.html":{},"classes/SourceQueryDto.html":{},"classes/SteroidCommentsCountDto.html":{},"classes/SteroidDto.html":{},"classes/SteroidQueryDto.html":{},"classes/TokenPayloadDto.html":{},"classes/UpdateArticleDto.html":{},"classes/UpdateCategoryDto.html":{},"classes/UpdateCommentDto.html":{},"classes/UpdateCommonNameDto.html":{},"classes/UpdateManufacturerDto.html":{},"classes/UpdateReviewDto.html":{},"classes/UpdateSourceDto.html":{},"classes/UpdateSteroidDto.html":{},"classes/UpdateUserDto.html":{},"classes/UserDto.html":{},"classes/UserLoginDto.html":{},"classes/UserQueryDto.html":{},"coverage.html":{}}}],["stringfield(options",{"_index":941,"title":{},"body":{"interfaces/IFieldOptions.html":{},"interfaces/INumberFieldOptions.html":{},"interfaces/IStringFieldOptions.html":{}}}],["stringfield({minlength",{"_index":682,"title":{},"body":{"classes/CreateArticleDto.html":{},"classes/CreateCategoryDto.html":{},"classes/CreateCommentDto.html":{},"classes/CreateCommonNameDto.html":{},"classes/CreateManufacturerDto.html":{},"classes/CreateReviewDto.html":{},"classes/CreateSourceDto.html":{}}}],["stringfield({swagger",{"_index":153,"title":{},"body":{"classes/ArticleDto.html":{},"classes/CategoryDto.html":{},"classes/CommentDto.html":{},"classes/CommonNameDto.html":{},"classes/CreateSourceDto.html":{},"classes/CreateSteroidDto.html":{},"classes/CreateUserDto.html":{},"classes/ManufacturerDto.html":{},"classes/ReviewDto.html":{},"classes/SourceDto.html":{},"classes/SteroidCommentsCountDto.html":{},"classes/SteroidDto.html":{},"classes/TokenPayloadDto.html":{},"classes/UserDto.html":{}}}],["stringfieldoptional",{"_index":764,"title":{},"body":{"classes/CreateUserDto.html":{},"interfaces/IFieldOptions.html":{},"interfaces/INumberFieldOptions.html":{},"interfaces/IStringFieldOptions.html":{},"coverage.html":{}}}],["stringfieldoptional({swagger",{"_index":739,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["success",{"_index":807,"title":{},"body":{"injectables/CrudService.html":{}}}],["successfully",{"_index":195,"title":{},"body":{"controllers/ArticlesController.html":{},"controllers/AuthController.html":{},"controllers/CategoriesController.html":{},"controllers/CommentsController.html":{},"controllers/CommonNamesController.html":{},"controllers/ManufacturersController.html":{},"controllers/ReviewsController.html":{},"controllers/SourcesController.html":{},"controllers/SteroidsController.html":{}}}],["summary",{"_index":244,"title":{},"body":{"controllers/ArticlesController.html":{},"controllers/CategoriesController.html":{},"controllers/CommentsController.html":{},"controllers/CommonNamesController.html":{},"controllers/ManufacturersController.html":{},"controllers/ReviewsController.html":{},"controllers/SourcesController.html":{},"controllers/SteroidsController.html":{}}}],["super",{"_index":998,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["super('error.filenotimage",{"_index":816,"title":{},"body":{"classes/FileNotImageException.html":{}}}],["super(articlemodel",{"_index":299,"title":{},"body":{"injectables/ArticlesService.html":{}}}],["super(categorymodel",{"_index":490,"title":{},"body":{"injectables/CategoriesService.html":{}}}],["super(commentmodel",{"_index":602,"title":{},"body":{"injectables/CommentsService.html":{}}}],["super(commonnamemodel",{"_index":675,"title":{},"body":{"injectables/CommonNamesService.html":{}}}],["super(manufacturermodel",{"_index":1079,"title":{},"body":{"injectables/ManufacturersService.html":{}}}],["super(reviewmodel",{"_index":1160,"title":{},"body":{"injectables/ReviewsService.html":{}}}],["super(sourcemodel",{"_index":1239,"title":{},"body":{"injectables/SourcesService.html":{}}}],["super(steroidmodel",{"_index":1334,"title":{},"body":{"injectables/SteroidsService.html":{}}}],["super_admin",{"_index":1514,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["support",{"_index":1556,"title":{},"body":{"index.html":{},"modules.html":{}}}],["svg",{"_index":1576,"title":{},"body":{"modules.html":{}}}],["swagger",{"_index":170,"title":{},"body":{"classes/ArticleDto.html":{},"classes/ArticleQueryDto.html":{},"classes/CategoryDto.html":{},"classes/CategoryQueryDto.html":{},"classes/CommentDto.html":{},"classes/CommentQueryDto.html":{},"classes/CommonNameDto.html":{},"classes/CommonNameQueryDto.html":{},"classes/CreateArticleDto.html":{},"classes/CreateCategoryDto.html":{},"classes/CreateCommentDto.html":{},"classes/CreateCommonNameDto.html":{},"classes/CreateManufacturerDto.html":{},"classes/CreateReviewDto.html":{},"classes/CreateSourceDto.html":{},"classes/CreateSteroidDto.html":{},"classes/CreateUserDto.html":{},"interfaces/IFieldOptions.html":{},"interfaces/INumberFieldOptions.html":{},"interfaces/IStringFieldOptions.html":{},"classes/ManufacturerDto.html":{},"classes/ManufacturerQueryDto.html":{},"classes/ReviewDto.html":{},"classes/ReviewQueryDto.html":{},"classes/SourceDto.html":{},"classes/SourceQueryDto.html":{},"classes/SteroidCommentsCountDto.html":{},"classes/SteroidDto.html":{},"classes/SteroidQueryDto.html":{},"classes/TokenPayloadDto.html":{},"classes/UpdateArticleDto.html":{},"classes/UpdateCategoryDto.html":{},"classes/UpdateCommentDto.html":{},"classes/UpdateCommonNameDto.html":{},"classes/UpdateManufacturerDto.html":{},"classes/UpdateReviewDto.html":{},"classes/UpdateSourceDto.html":{},"classes/UpdateSteroidDto.html":{},"classes/UpdateUserDto.html":{},"classes/UserDto.html":{},"classes/UserQueryDto.html":{}}}],["system",{"_index":1512,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["table",{"_index":1476,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":1475,"title":{},"body":{"coverage.html":{}}}],["tclass",{"_index":959,"title":{},"body":{"interfaces/IFieldOptions.html":{},"interfaces/INumberFieldOptions.html":{},"interfaces/IStringFieldOptions.html":{}}}],["tenum",{"_index":950,"title":{},"body":{"interfaces/IFieldOptions.html":{},"interfaces/INumberFieldOptions.html":{},"interfaces/IStringFieldOptions.html":{}}}],["test",{"_index":9,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"index.html":{}}}],["test:covsupport",{"_index":1548,"title":{},"body":{"index.html":{}}}],["test:e2e",{"_index":1547,"title":{},"body":{"index.html":{}}}],["tests",{"_index":1545,"title":{},"body":{"index.html":{}}}],["thanks",{"_index":1554,"title":{},"body":{"index.html":{}}}],["this.appservice.test",{"_index":29,"title":{},"body":{"controllers/AppController.html":{}}}],["this.articleservice.create(createarticledto",{"_index":250,"title":{},"body":{"controllers/ArticlesController.html":{}}}],["this.articleservice.delete(articleid",{"_index":263,"title":{},"body":{"controllers/ArticlesController.html":{}}}],["this.articleservice.find(articlequerydto",{"_index":253,"title":{},"body":{"controllers/ArticlesController.html":{}}}],["this.articleservice.findbyid(articleid",{"_index":256,"title":{},"body":{"controllers/ArticlesController.html":{}}}],["this.articleservice.update(articleid",{"_index":259,"title":{},"body":{"controllers/ArticlesController.html":{}}}],["this.authenticationservice.createaccesstoken",{"_index":338,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.authenticationservice.validateuser(userlogindto",{"_index":337,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.categorymodel.countdocuments",{"_index":492,"title":{},"body":{"injectables/CategoriesService.html":{}}}],["this.categorymodel.insertmany(categories",{"_index":494,"title":{},"body":{"injectables/CategoriesService.html":{}}}],["this.categoryservice.create(createcategorydto",{"_index":464,"title":{},"body":{"controllers/CategoriesController.html":{}}}],["this.categoryservice.delete(categoryid",{"_index":474,"title":{},"body":{"controllers/CategoriesController.html":{}}}],["this.categoryservice.find(categoryquerydto",{"_index":465,"title":{},"body":{"controllers/CategoriesController.html":{}}}],["this.categoryservice.findbyid(categoryid",{"_index":468,"title":{},"body":{"controllers/CategoriesController.html":{}}}],["this.categoryservice.update(categoryid",{"_index":471,"title":{},"body":{"controllers/CategoriesController.html":{}}}],["this.commentservice.create(createcommentdto",{"_index":580,"title":{},"body":{"controllers/CommentsController.html":{}}}],["this.commentservice.delete(commentid",{"_index":589,"title":{},"body":{"controllers/CommentsController.html":{}}}],["this.commentservice.find(commentquerydto",{"_index":581,"title":{},"body":{"controllers/CommentsController.html":{}}}],["this.commentservice.findbyid(commentid",{"_index":584,"title":{},"body":{"controllers/CommentsController.html":{}}}],["this.commentservice.update(commentid",{"_index":587,"title":{},"body":{"controllers/CommentsController.html":{}}}],["this.commonnamemodel.countdocuments",{"_index":676,"title":{},"body":{"injectables/CommonNamesService.html":{}}}],["this.commonnamemodel.insertmany(commonnamesdtos",{"_index":679,"title":{},"body":{"injectables/CommonNamesService.html":{}}}],["this.commonnameservice.create(createcommonnamedto",{"_index":652,"title":{},"body":{"controllers/CommonNamesController.html":{}}}],["this.commonnameservice.delete(commonnameid",{"_index":661,"title":{},"body":{"controllers/CommonNamesController.html":{}}}],["this.commonnameservice.find(commonnamequerydto",{"_index":654,"title":{},"body":{"controllers/CommonNamesController.html":{}}}],["this.commonnameservice.findbyid(commonnameid",{"_index":657,"title":{},"body":{"controllers/CommonNamesController.html":{}}}],["this.commonnameservice.update(commonnameid",{"_index":659,"title":{},"body":{"controllers/CommonNamesController.html":{}}}],["this.configservice.get('jwt",{"_index":114,"title":{},"body":{"injectables/AppService.html":{}}}],["this.dtoclass",{"_index":781,"title":{},"body":{"injectables/CrudService.html":{}}}],["this.ismodified('password",{"_index":1364,"title":{},"body":{"classes/User.html":{}}}],["this.jwtservice.signasync",{"_index":400,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["this.manufacturermodel.countdocuments",{"_index":1080,"title":{},"body":{"injectables/ManufacturersService.html":{}}}],["this.manufacturermodel.insertmany(manufacturersdto",{"_index":1083,"title":{},"body":{"injectables/ManufacturersService.html":{}}}],["this.manufacturerservice.create(createmanufacturerdto",{"_index":1056,"title":{},"body":{"controllers/ManufacturersController.html":{}}}],["this.manufacturerservice.delete(manufacturerid",{"_index":1064,"title":{},"body":{"controllers/ManufacturersController.html":{}}}],["this.manufacturerservice.find(manufacturerquerydto",{"_index":1057,"title":{},"body":{"controllers/ManufacturersController.html":{}}}],["this.manufacturerservice.findbyid(manufacturerid",{"_index":1060,"title":{},"body":{"controllers/ManufacturersController.html":{}}}],["this.manufacturerservice.update",{"_index":1062,"title":{},"body":{"controllers/ManufacturersController.html":{}}}],["this.model(createarticledto",{"_index":784,"title":{},"body":{"injectables/CrudService.html":{}}}],["this.model.deleteone",{"_index":806,"title":{},"body":{"injectables/CrudService.html":{}}}],["this.model.find(props",{"_index":796,"title":{},"body":{"injectables/CrudService.html":{}}}],["this.model.findbyid(_id",{"_index":800,"title":{},"body":{"injectables/CrudService.html":{}}}],["this.model.findone(querydto",{"_index":803,"title":{},"body":{"injectables/CrudService.html":{}}}],["this.model.findoneandupdate",{"_index":805,"title":{},"body":{"injectables/CrudService.html":{}}}],["this.password",{"_index":1367,"title":{},"body":{"classes/User.html":{}}}],["this.reviewservice.create(createreviewdto",{"_index":1138,"title":{},"body":{"controllers/ReviewsController.html":{}}}],["this.reviewservice.delete(reviewid",{"_index":1148,"title":{},"body":{"controllers/ReviewsController.html":{}}}],["this.reviewservice.find(reviewquerydto",{"_index":1139,"title":{},"body":{"controllers/ReviewsController.html":{}}}],["this.reviewservice.findbyid(reviewid",{"_index":1142,"title":{},"body":{"controllers/ReviewsController.html":{}}}],["this.reviewservice.update(reviewid",{"_index":1145,"title":{},"body":{"controllers/ReviewsController.html":{}}}],["this.sourceservice.create(createsourcedto",{"_index":1218,"title":{},"body":{"controllers/SourcesController.html":{}}}],["this.sourceservice.delete(sourceid",{"_index":1228,"title":{},"body":{"controllers/SourcesController.html":{}}}],["this.sourceservice.find(sourcequerydto",{"_index":1219,"title":{},"body":{"controllers/SourcesController.html":{}}}],["this.sourceservice.findbyid(sourceid",{"_index":1222,"title":{},"body":{"controllers/SourcesController.html":{}}}],["this.sourceservice.update(sourceid",{"_index":1225,"title":{},"body":{"controllers/SourcesController.html":{}}}],["this.steroidmodel.aggregate(commentsaggregation",{"_index":1335,"title":{},"body":{"injectables/SteroidsService.html":{}}}],["this.steroidservice.create(createsteroiddto",{"_index":1306,"title":{},"body":{"controllers/SteroidsController.html":{}}}],["this.steroidservice.delete(steroidid",{"_index":1315,"title":{},"body":{"controllers/SteroidsController.html":{}}}],["this.steroidservice.findbyid(steroidid",{"_index":1310,"title":{},"body":{"controllers/SteroidsController.html":{}}}],["this.steroidservice.finddetailedsteroids",{"_index":1307,"title":{},"body":{"controllers/SteroidsController.html":{}}}],["this.steroidservice.update(steroidid",{"_index":1313,"title":{},"body":{"controllers/SteroidsController.html":{}}}],["this.token",{"_index":1013,"title":{},"body":{"classes/LoginPayloadDto.html":{}}}],["this.user",{"_index":1012,"title":{},"body":{"classes/LoginPayloadDto.html":{}}}],["this.usermodel(createuserdto",{"_index":1410,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.usermodel.findone(querydto",{"_index":1407,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.userservice.create(createuserdto",{"_index":347,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.userservice.findone",{"_index":1003,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["this.userservice.usermodel.findone",{"_index":404,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["this.uuid",{"_index":856,"title":{},"body":{"injectables/GeneratorService.html":{}}}],["throw",{"_index":410,"title":{},"body":{"injectables/AuthenticationService.html":{},"injectables/CrudService.html":{},"classes/GeneratorProvider.html":{},"injectables/JwtStrategy.html":{},"injectables/UsersService.html":{}}}],["title",{"_index":123,"title":{},"body":{"classes/Article.html":{},"classes/ArticleDto.html":{},"classes/ArticleQueryDto.html":{},"classes/CreateArticleDto.html":{},"classes/CreateCategoryDto.html":{},"classes/CreateReviewDto.html":{},"classes/ReviewDto.html":{},"classes/ReviewQueryDto.html":{},"classes/UpdateArticleDto.html":{},"classes/UpdateReviewDto.html":{}}}],["tmpkeyfield",{"_index":940,"title":{},"body":{"interfaces/IFieldOptions.html":{},"interfaces/INumberFieldOptions.html":{},"interfaces/IStringFieldOptions.html":{},"coverage.html":{}}}],["tmpkeyfieldoptional",{"_index":942,"title":{},"body":{"interfaces/IFieldOptions.html":{},"interfaces/INumberFieldOptions.html":{},"interfaces/IStringFieldOptions.html":{},"coverage.html":{}}}],["toarray",{"_index":887,"title":{},"body":{"interfaces/IFieldOptions.html":{},"interfaces/INumberFieldOptions.html":{},"interfaces/IStringFieldOptions.html":{},"coverage.html":{}}}],["toboolean",{"_index":888,"title":{},"body":{"interfaces/IFieldOptions.html":{},"interfaces/INumberFieldOptions.html":{},"interfaces/IStringFieldOptions.html":{},"coverage.html":{}}}],["toclassonly",{"_index":1263,"title":{},"body":{"classes/SteroidCommentsCountDto.html":{},"classes/SteroidDto.html":{},"classes/SteroidQueryDto.html":{},"classes/UpdateSteroidDto.html":{}}}],["toint",{"_index":1447,"title":{},"body":{"coverage.html":{}}}],["token",{"_index":310,"title":{},"body":{"controllers/AuthController.html":{},"classes/LoginPayloadDto.html":{}}}],["tokenpayloaddto",{"_index":387,"title":{"classes/TokenPayloadDto.html":{}},"body":{"injectables/AuthenticationService.html":{},"classes/LoginPayloadDto.html":{},"classes/TokenPayloadDto.html":{},"coverage.html":{}}}],["tokentype",{"_index":389,"title":{},"body":{"injectables/AuthenticationService.html":{},"injectables/JwtStrategy.html":{},"miscellaneous/enumerations.html":{}}}],["tokentype.access_token",{"_index":402,"title":{},"body":{"injectables/AuthenticationService.html":{},"injectables/JwtStrategy.html":{}}}],["tolowercase",{"_index":889,"title":{},"body":{"interfaces/IFieldOptions.html":{},"interfaces/INumberFieldOptions.html":{},"interfaces/IStringFieldOptions.html":{},"coverage.html":{}}}],["touch",{"_index":1566,"title":{},"body":{"index.html":{}}}],["touppercase",{"_index":890,"title":{},"body":{"interfaces/IFieldOptions.html":{},"interfaces/INumberFieldOptions.html":{},"interfaces/IStringFieldOptions.html":{},"coverage.html":{}}}],["transform",{"_index":426,"title":{},"body":{"classes/BaseDto.html":{},"classes/SteroidCommentsCountDto.html":{},"classes/SteroidDto.html":{},"classes/SteroidQueryDto.html":{},"classes/UpdateSteroidDto.html":{}}}],["transform((value",{"_index":430,"title":{},"body":{"classes/BaseDto.html":{}}}],["transform.decorators",{"_index":891,"title":{},"body":{"interfaces/IFieldOptions.html":{},"interfaces/INumberFieldOptions.html":{},"interfaces/IStringFieldOptions.html":{}}}],["transformer",{"_index":394,"title":{},"body":{"injectables/AuthenticationService.html":{},"classes/BaseDto.html":{},"injectables/CrudService.html":{},"interfaces/IFieldOptions.html":{},"interfaces/INumberFieldOptions.html":{},"interfaces/IStringFieldOptions.html":{},"classes/SteroidCommentsCountDto.html":{},"classes/SteroidDto.html":{},"classes/SteroidQueryDto.html":{},"injectables/SteroidsService.html":{},"classes/UpdateSteroidDto.html":{},"classes/UpdateUserDto.html":{},"classes/UserDto.html":{},"classes/UserQueryDto.html":{},"injectables/UsersService.html":{},"dependencies.html":{}}}],["trim",{"_index":1448,"title":{},"body":{"coverage.html":{}}}],["true",{"_index":89,"title":{},"body":{"modules/AppModule.html":{},"classes/Article.html":{},"classes/ArticleDto.html":{},"classes/ArticleQueryDto.html":{},"classes/Category.html":{},"classes/CategoryDto.html":{},"classes/CategoryQueryDto.html":{},"classes/Comment.html":{},"classes/CommentDto.html":{},"classes/CommentQueryDto.html":{},"classes/CommonName.html":{},"classes/CommonNameDto.html":{},"classes/CommonNameQueryDto.html":{},"classes/CreateArticleDto.html":{},"classes/CreateCategoryDto.html":{},"classes/CreateCommentDto.html":{},"classes/CreateCommonNameDto.html":{},"classes/CreateManufacturerDto.html":{},"classes/CreateReviewDto.html":{},"classes/CreateSourceDto.html":{},"classes/CreateSteroidDto.html":{},"classes/CreateUserDto.html":{},"injectables/CrudService.html":{},"interfaces/IFieldOptions.html":{},"interfaces/INumberFieldOptions.html":{},"interfaces/IStringFieldOptions.html":{},"classes/Manufacturer.html":{},"classes/ManufacturerDto.html":{},"classes/ManufacturerQueryDto.html":{},"classes/Review.html":{},"classes/ReviewDto.html":{},"classes/ReviewQueryDto.html":{},"classes/Source.html":{},"classes/SourceDto.html":{},"classes/SourceQueryDto.html":{},"classes/Steroid.html":{},"classes/SteroidCommentsCountDto.html":{},"classes/SteroidDto.html":{},"classes/SteroidQueryDto.html":{},"classes/TokenPayloadDto.html":{},"classes/UpdateArticleDto.html":{},"classes/UpdateCategoryDto.html":{},"classes/UpdateCommentDto.html":{},"classes/UpdateCommonNameDto.html":{},"classes/UpdateManufacturerDto.html":{},"classes/UpdateReviewDto.html":{},"classes/UpdateSourceDto.html":{},"classes/UpdateSteroidDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"classes/UserDto.html":{},"classes/UserQueryDto.html":{},"miscellaneous/variables.html":{}}}],["true})@type(undefined",{"_index":1270,"title":{},"body":{"classes/SteroidDto.html":{}}}],["try",{"_index":782,"title":{},"body":{"injectables/CrudService.html":{},"classes/User.html":{},"injectables/UsersService.html":{}}}],["twitter",{"_index":1572,"title":{},"body":{"index.html":{}}}],["type",{"_index":63,"title":{},"body":{"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/Article.html":{},"classes/ArticleDto.html":{},"classes/ArticleQueryDto.html":{},"controllers/ArticlesController.html":{},"injectables/ArticlesService.html":{},"controllers/AuthController.html":{},"injectables/AuthenticationService.html":{},"classes/Base.html":{},"classes/BaseDto.html":{},"controllers/CategoriesController.html":{},"injectables/CategoriesService.html":{},"classes/Category.html":{},"classes/CategoryDto.html":{},"classes/CategoryQueryDto.html":{},"classes/Comment.html":{},"classes/CommentDto.html":{},"classes/CommentQueryDto.html":{},"controllers/CommentsController.html":{},"injectables/CommentsService.html":{},"classes/CommonName.html":{},"classes/CommonNameDto.html":{},"classes/CommonNameQueryDto.html":{},"controllers/CommonNamesController.html":{},"injectables/CommonNamesService.html":{},"classes/CreateArticleDto.html":{},"classes/CreateCategoryDto.html":{},"classes/CreateCommentDto.html":{},"classes/CreateCommonNameDto.html":{},"classes/CreateManufacturerDto.html":{},"classes/CreateReviewDto.html":{},"classes/CreateSourceDto.html":{},"classes/CreateSteroidDto.html":{},"classes/CreateUserDto.html":{},"injectables/CrudService.html":{},"classes/FileNotImageException.html":{},"classes/GeneratorProvider.html":{},"injectables/GeneratorService.html":{},"interfaces/IApiFile.html":{},"interfaces/IFieldOptions.html":{},"interfaces/IFile.html":{},"interfaces/INumberFieldOptions.html":{},"interfaces/IStringFieldOptions.html":{},"injectables/JwtStrategy.html":{},"classes/LoginPayloadDto.html":{},"classes/Manufacturer.html":{},"classes/ManufacturerDto.html":{},"classes/ManufacturerQueryDto.html":{},"controllers/ManufacturersController.html":{},"injectables/ManufacturersService.html":{},"classes/PaginationQueryDto.html":{},"classes/Review.html":{},"classes/ReviewDto.html":{},"classes/ReviewQueryDto.html":{},"controllers/ReviewsController.html":{},"injectables/ReviewsService.html":{},"modules/SharedModule.html":{},"classes/Source.html":{},"classes/SourceDto.html":{},"classes/SourceQueryDto.html":{},"controllers/SourcesController.html":{},"injectables/SourcesService.html":{},"classes/Steroid.html":{},"classes/SteroidCommentsCountDto.html":{},"classes/SteroidDto.html":{},"classes/SteroidQueryDto.html":{},"controllers/SteroidsController.html":{},"injectables/SteroidsService.html":{},"classes/TokenPayloadDto.html":{},"classes/UpdateCategoryDto.html":{},"classes/UpdateSteroidDto.html":{},"classes/User.html":{},"classes/UserDto.html":{},"classes/UserLoginDto.html":{},"classes/UserQueryDto.html":{},"injectables/UsersService.html":{},"injectables/ValidatorService.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["typealiases",{"_index":1587,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["typeerror('key",{"_index":847,"title":{},"body":{"classes/GeneratorProvider.html":{}}}],["typeof",{"_index":919,"title":{},"body":{"interfaces/IFieldOptions.html":{},"interfaces/INumberFieldOptions.html":{},"interfaces/IStringFieldOptions.html":{}}}],["types",{"_index":948,"title":{},"body":{"interfaces/IFieldOptions.html":{},"interfaces/INumberFieldOptions.html":{},"interfaces/IStringFieldOptions.html":{}}}],["types/types.ts",{"_index":1602,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["types/user.types",{"_index":757,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"classes/UserDto.html":{},"classes/UserQueryDto.html":{}}}],["typescript",{"_index":946,"title":{},"body":{"interfaces/IFieldOptions.html":{},"interfaces/INumberFieldOptions.html":{},"interfaces/IStringFieldOptions.html":{},"index.html":{}}}],["unauthorizedexception",{"_index":990,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["undefined",{"_index":193,"title":{},"body":{"controllers/ArticlesController.html":{},"classes/Base.html":{},"controllers/CategoriesController.html":{},"classes/Category.html":{},"classes/Comment.html":{},"controllers/CommentsController.html":{},"controllers/CommonNamesController.html":{},"controllers/ManufacturersController.html":{},"classes/Review.html":{},"controllers/ReviewsController.html":{},"classes/Source.html":{},"controllers/SourcesController.html":{},"classes/Steroid.html":{},"controllers/SteroidsController.html":{},"classes/User.html":{}}}],["undefined})@apiresponse({status",{"_index":213,"title":{},"body":{"controllers/ArticlesController.html":{},"controllers/CategoriesController.html":{},"controllers/CommentsController.html":{},"controllers/CommonNamesController.html":{},"controllers/ManufacturersController.html":{},"controllers/ReviewsController.html":{},"controllers/SourcesController.html":{},"controllers/SteroidsController.html":{}}}],["unique",{"_index":1350,"title":{},"body":{"classes/User.html":{}}}],["unit",{"_index":1544,"title":{},"body":{"index.html":{}}}],["unlicensed",{"_index":1586,"title":{},"body":{"properties.html":{}}}],["unwind",{"_index":1611,"title":{},"body":{"miscellaneous/variables.html":{}}}],["update",{"_index":188,"title":{},"body":{"controllers/ArticlesController.html":{},"injectables/ArticlesService.html":{},"controllers/CategoriesController.html":{},"injectables/CategoriesService.html":{},"controllers/CommentsController.html":{},"injectables/CommentsService.html":{},"controllers/CommonNamesController.html":{},"injectables/CommonNamesService.html":{},"injectables/CrudService.html":{},"controllers/ManufacturersController.html":{},"injectables/ManufacturersService.html":{},"controllers/ReviewsController.html":{},"injectables/ReviewsService.html":{},"controllers/SourcesController.html":{},"injectables/SourcesService.html":{},"controllers/SteroidsController.html":{},"injectables/SteroidsService.html":{}}}],["update(_id",{"_index":290,"title":{},"body":{"injectables/ArticlesService.html":{},"injectables/CategoriesService.html":{},"injectables/CommentsService.html":{},"injectables/CommonNamesService.html":{},"injectables/CrudService.html":{},"injectables/ManufacturersService.html":{},"injectables/ReviewsService.html":{},"injectables/SourcesService.html":{},"injectables/SteroidsService.html":{}}}],["update(articleid",{"_index":220,"title":{},"body":{"controllers/ArticlesController.html":{}}}],["update(categoryid",{"_index":452,"title":{},"body":{"controllers/CategoriesController.html":{}}}],["update(commentid",{"_index":570,"title":{},"body":{"controllers/CommentsController.html":{}}}],["update(commonnameid",{"_index":641,"title":{},"body":{"controllers/CommonNamesController.html":{}}}],["update(manufacturerid",{"_index":1046,"title":{},"body":{"controllers/ManufacturersController.html":{}}}],["update(reviewid",{"_index":1128,"title":{},"body":{"controllers/ReviewsController.html":{}}}],["update(sourceid",{"_index":1208,"title":{},"body":{"controllers/SourcesController.html":{}}}],["update(steroidid",{"_index":1296,"title":{},"body":{"controllers/SteroidsController.html":{}}}],["updatearticledto",{"_index":171,"title":{"classes/UpdateArticleDto.html":{}},"body":{"classes/ArticleDto.html":{},"classes/ArticleQueryDto.html":{},"controllers/ArticlesController.html":{},"injectables/ArticlesService.html":{},"classes/UpdateArticleDto.html":{},"coverage.html":{}}}],["updatecategorydto",{"_index":453,"title":{"classes/UpdateCategoryDto.html":{}},"body":{"controllers/CategoriesController.html":{},"injectables/CategoriesService.html":{},"classes/CategoryDto.html":{},"classes/CategoryQueryDto.html":{},"classes/UpdateCategoryDto.html":{},"coverage.html":{}}}],["updatecommentdto",{"_index":547,"title":{"classes/UpdateCommentDto.html":{}},"body":{"classes/CommentDto.html":{},"classes/CommentQueryDto.html":{},"controllers/CommentsController.html":{},"injectables/CommentsService.html":{},"classes/UpdateCommentDto.html":{},"coverage.html":{}}}],["updatecommonnamedto",{"_index":617,"title":{"classes/UpdateCommonNameDto.html":{}},"body":{"classes/CommonNameDto.html":{},"classes/CommonNameQueryDto.html":{},"controllers/CommonNamesController.html":{},"injectables/CommonNamesService.html":{},"classes/UpdateCommonNameDto.html":{},"coverage.html":{}}}],["updated",{"_index":221,"title":{},"body":{"controllers/ArticlesController.html":{},"controllers/CategoriesController.html":{},"controllers/CommentsController.html":{},"controllers/CommonNamesController.html":{},"controllers/ManufacturersController.html":{},"controllers/ReviewsController.html":{},"controllers/SourcesController.html":{},"controllers/SteroidsController.html":{}}}],["updatedat",{"_index":152,"title":{},"body":{"classes/ArticleDto.html":{},"classes/ArticleQueryDto.html":{},"classes/Base.html":{},"classes/BaseDto.html":{},"classes/CategoryDto.html":{},"classes/CategoryQueryDto.html":{},"classes/CommentDto.html":{},"classes/CommentQueryDto.html":{},"classes/CommonNameDto.html":{},"classes/CommonNameQueryDto.html":{},"classes/ManufacturerDto.html":{},"classes/ManufacturerQueryDto.html":{},"classes/ReviewDto.html":{},"classes/ReviewQueryDto.html":{},"classes/SourceDto.html":{},"classes/SourceQueryDto.html":{},"classes/SteroidCommentsCountDto.html":{},"classes/SteroidDto.html":{},"classes/SteroidQueryDto.html":{},"classes/UpdateArticleDto.html":{},"classes/UpdateCategoryDto.html":{},"classes/UpdateCommentDto.html":{},"classes/UpdateCommonNameDto.html":{},"classes/UpdateManufacturerDto.html":{},"classes/UpdateReviewDto.html":{},"classes/UpdateSourceDto.html":{},"classes/UpdateSteroidDto.html":{},"classes/UpdateUserDto.html":{},"classes/UserDto.html":{},"classes/UserQueryDto.html":{}}}],["updatedto",{"_index":292,"title":{},"body":{"injectables/ArticlesService.html":{},"injectables/CategoriesService.html":{},"injectables/CommentsService.html":{},"injectables/CommonNamesService.html":{},"injectables/CrudService.html":{},"injectables/ManufacturersService.html":{},"injectables/ReviewsService.html":{},"injectables/SourcesService.html":{},"injectables/SteroidsService.html":{}}}],["updatemanufacturerdto",{"_index":1025,"title":{"classes/UpdateManufacturerDto.html":{}},"body":{"classes/ManufacturerDto.html":{},"classes/ManufacturerQueryDto.html":{},"controllers/ManufacturersController.html":{},"injectables/ManufacturersService.html":{},"classes/UpdateManufacturerDto.html":{},"coverage.html":{}}}],["updatereviewdto",{"_index":1106,"title":{"classes/UpdateReviewDto.html":{}},"body":{"classes/ReviewDto.html":{},"classes/ReviewQueryDto.html":{},"controllers/ReviewsController.html":{},"injectables/ReviewsService.html":{},"classes/UpdateReviewDto.html":{},"coverage.html":{}}}],["updatesourcedto",{"_index":1186,"title":{"classes/UpdateSourceDto.html":{}},"body":{"classes/SourceDto.html":{},"classes/SourceQueryDto.html":{},"controllers/SourcesController.html":{},"injectables/SourcesService.html":{},"classes/UpdateSourceDto.html":{},"coverage.html":{}}}],["updatesteroiddto",{"_index":1265,"title":{"classes/UpdateSteroidDto.html":{}},"body":{"classes/SteroidCommentsCountDto.html":{},"classes/SteroidDto.html":{},"classes/SteroidQueryDto.html":{},"controllers/SteroidsController.html":{},"injectables/SteroidsService.html":{},"classes/UpdateSteroidDto.html":{},"coverage.html":{}}}],["updateuserdto",{"_index":1341,"title":{"classes/UpdateUserDto.html":{}},"body":{"classes/UpdateUserDto.html":{},"classes/UserDto.html":{},"classes/UserQueryDto.html":{},"coverage.html":{}}}],["uri",{"_index":96,"title":{},"body":{"modules/AppModule.html":{}}}],["url",{"_index":715,"title":{},"body":{"classes/CreateSourceDto.html":{},"classes/Source.html":{},"classes/SourceDto.html":{},"classes/SourceQueryDto.html":{},"classes/UpdateSourceDto.html":{}}}],["urlfield",{"_index":972,"title":{},"body":{"interfaces/IFieldOptions.html":{},"interfaces/INumberFieldOptions.html":{},"interfaces/IStringFieldOptions.html":{},"coverage.html":{}}}],["urlfieldoptional",{"_index":973,"title":{},"body":{"interfaces/IFieldOptions.html":{},"interfaces/INumberFieldOptions.html":{},"interfaces/IStringFieldOptions.html":{},"coverage.html":{}}}],["usedto",{"_index":1451,"title":{},"body":{"coverage.html":{}}}],["usefactory",{"_index":92,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthenticationModule.html":{}}}],["useguards",{"_index":230,"title":{},"body":{"controllers/ArticlesController.html":{},"controllers/CategoriesController.html":{},"controllers/CommentsController.html":{},"controllers/CommonNamesController.html":{},"controllers/ManufacturersController.html":{},"controllers/ReviewsController.html":{},"controllers/SourcesController.html":{},"controllers/SteroidsController.html":{}}}],["useguards(authguard('jwt",{"_index":240,"title":{},"body":{"controllers/ArticlesController.html":{},"controllers/CategoriesController.html":{},"controllers/CommentsController.html":{},"controllers/CommonNamesController.html":{},"controllers/ManufacturersController.html":{},"controllers/ReviewsController.html":{},"controllers/SourcesController.html":{},"controllers/SteroidsController.html":{}}}],["user",{"_index":129,"title":{"classes/User.html":{}},"body":{"classes/Article.html":{},"controllers/AuthController.html":{},"injectables/AuthenticationService.html":{},"classes/Comment.html":{},"classes/CommonName.html":{},"injectables/JwtStrategy.html":{},"classes/LoginPayloadDto.html":{},"classes/Manufacturer.html":{},"classes/Review.html":{},"classes/Source.html":{},"classes/Steroid.html":{},"classes/User.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["user._id",{"_index":340,"title":{},"body":{"controllers/AuthController.html":{}}}],["user.dto",{"_index":330,"title":{},"body":{"controllers/AuthController.html":{},"injectables/UsersService.html":{}}}],["user.dto.ts",{"_index":727,"title":{},"body":{"classes/CreateUserDto.html":{},"coverage.html":{}}}],["user.dto.ts:15",{"_index":755,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.dto.ts:18",{"_index":748,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.dto.ts:21",{"_index":750,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.dto.ts:24",{"_index":746,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.dto.ts:27",{"_index":738,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.dto.ts:30",{"_index":742,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.dto.ts:33",{"_index":756,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.dto.ts:36",{"_index":749,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.dto.ts:39",{"_index":744,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.dto.ts:42",{"_index":740,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.dto.ts:45",{"_index":752,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.dto.ts:48",{"_index":754,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.name",{"_index":539,"title":{},"body":{"classes/Comment.html":{},"classes/Review.html":{},"classes/Source.html":{},"classes/Steroid.html":{},"modules/UsersModule.html":{}}}],["user.role",{"_index":342,"title":{},"body":{"controllers/AuthController.html":{}}}],["user.schema",{"_index":1396,"title":{},"body":{"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["user.toobject",{"_index":415,"title":{},"body":{"injectables/AuthenticationService.html":{},"injectables/UsersService.html":{}}}],["user?.password",{"_index":409,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["userdocument",{"_index":1359,"title":{},"body":{"classes/User.html":{},"injectables/UsersService.html":{},"miscellaneous/typealiases.html":{}}}],["userdto",{"_index":315,"title":{"classes/UserDto.html":{}},"body":{"controllers/AuthController.html":{},"injectables/AuthenticationService.html":{},"injectables/JwtStrategy.html":{},"classes/LoginPayloadDto.html":{},"classes/UpdateUserDto.html":{},"classes/UserDto.html":{},"classes/UserQueryDto.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["userid",{"_index":339,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthenticationService.html":{},"injectables/JwtStrategy.html":{}}}],["userlogin",{"_index":303,"title":{},"body":{"controllers/AuthController.html":{}}}],["userlogin(userlogindto",{"_index":305,"title":{},"body":{"controllers/AuthController.html":{}}}],["userlogindto",{"_index":306,"title":{"classes/UserLoginDto.html":{}},"body":{"controllers/AuthController.html":{},"injectables/AuthenticationService.html":{},"classes/UserLoginDto.html":{},"coverage.html":{}}}],["userlogindto.password",{"_index":408,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["userlogindto.usernameoremail",{"_index":406,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["usermodel",{"_index":1401,"title":{},"body":{"injectables/UsersService.html":{}}}],["username",{"_index":736,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"classes/UserDto.html":{},"classes/UserQueryDto.html":{}}}],["usernameoremail",{"_index":1382,"title":{},"body":{"classes/UserLoginDto.html":{}}}],["userquerydto",{"_index":1344,"title":{"classes/UserQueryDto.html":{}},"body":{"classes/UpdateUserDto.html":{},"classes/UserDto.html":{},"classes/UserQueryDto.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["userregister",{"_index":304,"title":{},"body":{"controllers/AuthController.html":{}}}],["userregister(@body",{"_index":346,"title":{},"body":{"controllers/AuthController.html":{}}}],["userregister(createuserdto",{"_index":312,"title":{},"body":{"controllers/AuthController.html":{}}}],["userrepository",{"_index":1409,"title":{},"body":{"injectables/UsersService.html":{}}}],["userrepository.save",{"_index":1411,"title":{},"body":{"injectables/UsersService.html":{}}}],["users",{"_index":1389,"title":{},"body":{"controllers/UsersController.html":{}}}],["users.controller",{"_index":1397,"title":{},"body":{"modules/UsersModule.html":{}}}],["users.service",{"_index":1390,"title":{},"body":{"controllers/UsersController.html":{},"modules/UsersModule.html":{}}}],["users/dto/create",{"_index":329,"title":{},"body":{"controllers/AuthController.html":{}}}],["users/dto/user.dto",{"_index":328,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthenticationService.html":{}}}],["users/types/user.types",{"_index":392,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["users/user.schema",{"_index":528,"title":{},"body":{"classes/Comment.html":{},"classes/Source.html":{}}}],["users/users.module",{"_index":357,"title":{},"body":{"modules/AuthenticationModule.html":{}}}],["users/users.service",{"_index":325,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthenticationService.html":{}}}],["userschema",{"_index":1361,"title":{},"body":{"classes/User.html":{},"modules/UsersModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["userschema.pre('save",{"_index":1363,"title":{},"body":{"classes/User.html":{}}}],["userscontroller",{"_index":1387,"title":{"controllers/UsersController.html":{}},"body":{"controllers/UsersController.html":{},"modules/UsersModule.html":{},"coverage.html":{}}}],["userservice",{"_index":333,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthenticationService.html":{},"injectables/JwtStrategy.html":{}}}],["usersmodule",{"_index":50,"title":{"modules/UsersModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthenticationModule.html":{},"modules/UsersModule.html":{},"modules.html":{},"overview.html":{}}}],["usersservice",{"_index":324,"title":{"injectables/UsersService.html":{}},"body":{"controllers/AuthController.html":{},"injectables/AuthenticationService.html":{},"injectables/JwtStrategy.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"overview.html":{}}}],["uuid",{"_index":827,"title":{},"body":{"classes/GeneratorProvider.html":{},"injectables/GeneratorService.html":{}}}],["uuidfield",{"_index":968,"title":{},"body":{"interfaces/IFieldOptions.html":{},"interfaces/INumberFieldOptions.html":{},"interfaces/IStringFieldOptions.html":{},"coverage.html":{}}}],["uuidfieldoptional",{"_index":971,"title":{},"body":{"interfaces/IFieldOptions.html":{},"interfaces/INumberFieldOptions.html":{},"interfaces/IStringFieldOptions.html":{},"coverage.html":{}}}],["v1",{"_index":845,"title":{},"body":{"classes/GeneratorProvider.html":{},"injectables/GeneratorService.html":{}}}],["validate",{"_index":985,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["validate(args",{"_index":988,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["validatehash",{"_index":395,"title":{},"body":{"injectables/AuthenticationService.html":{},"coverage.html":{}}}],["validatenested",{"_index":882,"title":{},"body":{"interfaces/IFieldOptions.html":{},"interfaces/INumberFieldOptions.html":{},"interfaces/IStringFieldOptions.html":{}}}],["validateuser",{"_index":376,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["validateuser(userlogindto",{"_index":384,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["validator",{"_index":429,"title":{},"body":{"classes/BaseDto.html":{},"interfaces/IFieldOptions.html":{},"interfaces/INumberFieldOptions.html":{},"interfaces/IStringFieldOptions.html":{},"dependencies.html":{}}}],["validator.decorators",{"_index":898,"title":{},"body":{"interfaces/IFieldOptions.html":{},"interfaces/INumberFieldOptions.html":{},"interfaces/IStringFieldOptions.html":{}}}],["validatorservice",{"_index":1165,"title":{"injectables/ValidatorService.html":{}},"body":{"modules/SharedModule.html":{},"injectables/ValidatorService.html":{},"coverage.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["value",{"_index":1510,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["value.obj._id.tostring",{"_index":431,"title":{},"body":{"classes/BaseDto.html":{}}}],["variable",{"_index":1466,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":1604,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["verifyoptions",{"_index":372,"title":{},"body":{"modules/AuthenticationModule.html":{}}}],["version",{"_index":1584,"title":{},"body":{"properties.html":{}}}],["void",{"_index":66,"title":{},"body":{"modules/AppModule.html":{}}}],["watch",{"_index":1539,"title":{},"body":{"index.html":{}}}],["website",{"_index":1570,"title":{},"body":{"index.html":{}}}],["weight",{"_index":737,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"classes/UserDto.html":{},"classes/UserQueryDto.html":{}}}],["yes",{"_index":815,"title":{},"body":{"classes/FileNotImageException.html":{}}}],["you'd",{"_index":1559,"title":{},"body":{"index.html":{}}}],["zoom",{"_index":52,"title":{},"body":{"modules/AppModule.html":{},"modules/ArticlesModule.html":{},"modules/AuthenticationModule.html":{},"modules/CategoriesModule.html":{},"modules/CommentsModule.html":{},"modules/CommonNamesModule.html":{},"modules/ManufacturersModule.html":{},"modules/ReviewsModule.html":{},"modules/SharedModule.html":{},"modules/SourcesModule.html":{},"modules/SteroidsModule.html":{},"modules/UsersModule.html":{},"modules/_SteroidsModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"controllers/AppController.html":{"url":"controllers/AppController.html","title":"controller - AppController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AppController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.controller.ts\n        \n\n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                test\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        test\n                        \n                    \n                \n            \n            \n                \n                        \n                    test()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('health')\n                \n            \n\n                    \n                        \n                            Defined in src/app.controller.ts:11\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get } from '@nestjs/common';\nimport { AppService } from './app.service';\nimport { ApiTags } from '@nestjs/swagger';\n\n@ApiTags('Health')\n@Controller()\nexport class AppController {\n  constructor(private readonly appService: AppService) {}\n\n  @Get('health')\n  test(): string {\n    return this.appService.test();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\n\nArticlesModule\n\nArticlesModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nArticlesModule->AppModule\n\n\n\n\n\nAuthenticationModule\n\nAuthenticationModule\n\nAppModule -->\n\nAuthenticationModule->AppModule\n\n\n\n\n\nCategoriesModule\n\nCategoriesModule\n\nAppModule -->\n\nCategoriesModule->AppModule\n\n\n\n\n\nCommentsModule\n\nCommentsModule\n\nAppModule -->\n\nCommentsModule->AppModule\n\n\n\n\n\nReviewsModule\n\nReviewsModule\n\nAppModule -->\n\nReviewsModule->AppModule\n\n\n\n\n\nSourcesModule\n\nSourcesModule\n\nAppModule -->\n\nSourcesModule->AppModule\n\n\n\n\n\nUsersModule\n\nUsersModule\n\nAppModule -->\n\nUsersModule->AppModule\n\n\n\n\n\n_SteroidsModule\n\n_SteroidsModule\n\nAppModule -->\n\n_SteroidsModule->AppModule\n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AppService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AppController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            ArticlesModule\n                        \n                        \n                            AuthenticationModule\n                        \n                        \n                            CategoriesModule\n                        \n                        \n                            CommentsModule\n                        \n                        \n                            ReviewsModule\n                        \n                        \n                            SourcesModule\n                        \n                        \n                            UsersModule\n                        \n                        \n                            _SteroidsModule\n                        \n                    \n                \n            \n        \n\n        \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        configure\n                        \n                    \n                \n            \n            \n                \nconfigure(consumer: MiddlewareConsumer)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app.module.ts:46\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                consumer\n                                            \n                                                        MiddlewareConsumer\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n\n\n    \n        import { SourcesModule } from './modules/sources/sources.module';\nimport { CategoriesModule } from './modules/categories/categories.module';\nimport { CommentsModule } from './modules/comments/comments.module';\nimport { MiddlewareConsumer, Module, NestModule } from '@nestjs/common';\nimport { AppController } from './app.controller';\nimport { AppService } from './app.service';\nimport { ConfigModule, ConfigService } from '@nestjs/config';\nimport { ArticlesModule } from './modules/articles';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport { UsersModule } from './modules/users/users.module';\nimport { AuthenticationModule } from './modules/authentication/authentication.module';\nimport { DbConfig } from './@common/env-configuration/config.type';\nimport { _SteroidsModule } from './modules/steroids/steroids.module';\nimport config from './@common/env-configuration/config';\nimport { ReviewsModule } from './modules/reviews';\n\n@Module({\n  imports: [\n    ConfigModule.forRoot({\n      isGlobal: true,\n      load: [config],\n    }),\n    MongooseModule.forRootAsync({\n      imports: [ConfigModule],\n      useFactory: async (configService: ConfigService) => {\n        const dbConfig = configService.get('db');\n        return {\n          uri: dbConfig.connectionString,\n        };\n      },\n      inject: [ConfigService],\n    }),\n    ArticlesModule,\n    UsersModule,\n    AuthenticationModule,\n    _SteroidsModule,\n    CommentsModule,\n    CategoriesModule,\n    SourcesModule,\n    ReviewsModule,\n  ],\n  controllers: [AppController],\n  providers: [AppService],\n})\nexport class AppModule implements NestModule {\n  configure(consumer: MiddlewareConsumer) {\n    consumer\n      .apply((req, res, next) => {\n        next();\n      })\n      .forRoutes('*');\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AppService.html":{"url":"injectables/AppService.html","title":"injectable - AppService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AppService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                test\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(configService: ConfigService)\n                    \n                \n                        \n                            \n                                Defined in src/app.service.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        configService\n                                                  \n                                                        \n                                                                        ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        test\n                        \n                    \n                \n            \n            \n                \ntest()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app.service.ts:14\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { ConfigService } from '@nestjs/config';\nimport {\n  EnvConfiguration,\n  JwtConfig,\n} from './@common/env-configuration/config.type';\n\n@Injectable()\nexport class AppService {\n  constructor(\n    private readonly configService: ConfigService,\n  ) {}\n\n  test(): string {\n    const jwtConfig = this.configService.get('jwt');\n    console.log(jwtConfig);\n    return jwtConfig.privateKey;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Article.html":{"url":"classes/Article.html","title":"class - Article","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Article\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/articles/article.schema.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                content\n                            \n                            \n                                    \n                                creator\n                            \n                            \n                                    \n                                title\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        content\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: String, required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/articles/article.schema.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        creator\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: ObjectId, ref: 'User'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/articles/article.schema.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: String, required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/articles/article.schema.ts:12\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\nimport * as mongoose from 'mongoose';\nimport { Base } from 'src/@base/entity/base.entity';\n\nexport type ArticleDocument = Article & mongoose.Document;\n\nconst ObjectId = mongoose.Schema.Types.ObjectId;\n\n@Schema({ autoCreate: true })\nexport class Article extends Base {\n  @Prop({ type: String, required: true })\n  title: string;\n\n  @Prop({ type: String, required: true })\n  content: string;\n\n  @Prop({ type: ObjectId, ref: 'User' })\n  creator: any;\n}\n\nexport const ArticleSchema = SchemaFactory.createForClass(Article);\n\nArticleSchema.pre('save', function (next) {\n  next();\n});\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ArticleDto.html":{"url":"classes/ArticleDto.html","title":"class - ArticleDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ArticleDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/articles/dto/article.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            BaseDto\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                content\n                            \n                            \n                                    \n                                title\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                _id\n                            \n                            \n                                    \n                                createdAt\n                            \n                            \n                                    \n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        content\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @StringField({swagger: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/articles/dto/article.dto.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @StringField({swagger: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/articles/dto/article.dto.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@IsUUID()@IsOptional()@Transform(value => )\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseDto\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseDto:10\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseDto\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseDto:13\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseDto\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseDto:16\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiPropertyOptional, OmitType, PartialType } from '@nestjs/swagger';\nimport { BaseDto } from 'src/@base/dto/base.dto';\nimport {\n  NumberFieldOptional,\n  StringField,\n} from 'src/@common/decorators/field.decorators';\n\nexport class ArticleDto extends BaseDto {\n  @StringField({ swagger: true })\n  title: string;\n\n  @StringField({ swagger: true })\n  content: string;\n}\n\nexport class UpdateArticleDto extends PartialType(\n  OmitType(ArticleDto, ['createdAt', 'updatedAt', '_id'] as const),\n) {}\n\nexport class ArticleQueryDto extends PartialType(\n  OmitType(ArticleDto, ['createdAt', 'updatedAt'] as const),\n) {\n  @ApiPropertyOptional()\n  @NumberFieldOptional()\n  skip: number;\n\n  @ApiPropertyOptional()\n  @NumberFieldOptional()\n  limit: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ArticleQueryDto.html":{"url":"classes/ArticleQueryDto.html","title":"class - ArticleQueryDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ArticleQueryDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/articles/dto/article.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        PartialType(\n  OmitType(ArticleDto, ['createdAt', 'updatedAt'] as const),\n)\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                limit\n                            \n                            \n                                    \n                                    \n                                skip\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        limit\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional()@NumberFieldOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/articles/dto/article.dto.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        skip\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional()@NumberFieldOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/articles/dto/article.dto.ts:25\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiPropertyOptional, OmitType, PartialType } from '@nestjs/swagger';\nimport { BaseDto } from 'src/@base/dto/base.dto';\nimport {\n  NumberFieldOptional,\n  StringField,\n} from 'src/@common/decorators/field.decorators';\n\nexport class ArticleDto extends BaseDto {\n  @StringField({ swagger: true })\n  title: string;\n\n  @StringField({ swagger: true })\n  content: string;\n}\n\nexport class UpdateArticleDto extends PartialType(\n  OmitType(ArticleDto, ['createdAt', 'updatedAt', '_id'] as const),\n) {}\n\nexport class ArticleQueryDto extends PartialType(\n  OmitType(ArticleDto, ['createdAt', 'updatedAt'] as const),\n) {\n  @ApiPropertyOptional()\n  @NumberFieldOptional()\n  skip: number;\n\n  @ApiPropertyOptional()\n  @NumberFieldOptional()\n  limit: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/ArticlesController.html":{"url":"controllers/ArticlesController.html","title":"controller - ArticlesController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  ArticlesController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/articles/articles.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                articles\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    \n                                create\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                deleteById\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                find\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                findById\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(createArticleDto: CreateArticleDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiOperation({summary: 'Create an article'})@ApiResponse({status: undefined, description: 'Article successfully created.', type: ArticleDto})@ApiResponse({status: undefined, description: 'Bad Request.'})@Post()\n                \n            \n\n                    \n                        \n                            Defined in src/modules/articles/articles.controller.ts:40\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createArticleDto\n                                            \n                                                            CreateArticleDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                        deleteById\n                        \n                    \n                \n            \n            \n                \n                        \n                    deleteById(articleId: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiOperation({summary: 'Delete Article By Id'})@ApiResponse({status: undefined, description: 'Article Deleted.'})@ApiResponse({status: undefined, description: 'Bad Request.'})@Delete(':articleId')\n                \n            \n\n                    \n                        \n                            Defined in src/modules/articles/articles.controller.ts:102\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                articleId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                        find\n                        \n                    \n                \n            \n            \n                \n                        \n                    find(articleQueryDto: ArticleQueryDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiOperation({summary: 'List Articles'})@ApiResponse({status: undefined, description: 'Article list loaded.', type: undefined})@ApiResponse({status: undefined, description: 'Bad Request.'})@Get()\n                \n            \n\n                    \n                        \n                            Defined in src/modules/articles/articles.controller.ts:55\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                articleQueryDto\n                                            \n                                                            ArticleQueryDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                        findById\n                        \n                    \n                \n            \n            \n                \n                        \n                    findById(articleId: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiOperation({summary: 'Get Article By Id'})@ApiResponse({status: undefined, description: 'Article By Id Loaded.', type: ArticleDto})@ApiResponse({status: undefined, description: 'Bad Request.'})@Get(':articleId')\n                \n            \n\n                    \n                        \n                            Defined in src/modules/articles/articles.controller.ts:70\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                articleId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(articleId: string, updateArticleDto: UpdateArticleDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiOperation({summary: 'Get Article By Id'})@ApiResponse({status: undefined, description: 'Article Updated.', type: ArticleDto})@ApiResponse({status: undefined, description: 'Bad Request.'})@Put(':articleId')\n                \n            \n\n                    \n                        \n                            Defined in src/modules/articles/articles.controller.ts:85\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                articleId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updateArticleDto\n                                            \n                                                            UpdateArticleDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Controller,\n  Post,\n  Body,\n  HttpStatus,\n  Get,\n  Put,\n  Query,\n  Param,\n  Delete,\n  UseGuards,\n} from '@nestjs/common';\nimport { ArticlesService } from './articles.service';\nimport { ApiOperation, ApiResponse, ApiTags } from '@nestjs/swagger';\nimport { CreateArticleDto } from './dto/create-article.dto';\nimport {\n  ArticleDto,\n  ArticleQueryDto,\n  UpdateArticleDto,\n} from './dto/article.dto';\nimport { AuthGuard } from '@nestjs/passport';\n\n@UseGuards(AuthGuard('jwt'))\n@ApiTags('Articles')\n@Controller('articles')\nexport class ArticlesController {\n  constructor(private readonly articleService: ArticlesService) {}\n\n  @ApiOperation({ summary: 'Create an article' })\n  @ApiResponse({\n    status: HttpStatus.CREATED,\n    description: 'Article successfully created.',\n    type: ArticleDto,\n  })\n  @ApiResponse({\n    status: HttpStatus.BAD_REQUEST,\n    description: 'Bad Request.',\n  })\n  @Post()\n  create(@Body() createArticleDto: CreateArticleDto): Promise {\n    return this.articleService.create(createArticleDto);\n  }\n\n  @ApiOperation({ summary: 'List Articles' })\n  @ApiResponse({\n    status: HttpStatus.OK,\n    description: 'Article list loaded.',\n    type: [ArticleDto],\n  })\n  @ApiResponse({\n    status: HttpStatus.BAD_REQUEST,\n    description: 'Bad Request.',\n  })\n  @Get()\n  find(@Query() articleQueryDto: ArticleQueryDto): Promise {\n    return this.articleService.find(articleQueryDto);\n  }\n\n  @ApiOperation({ summary: 'Get Article By Id' })\n  @ApiResponse({\n    status: HttpStatus.OK,\n    description: 'Article By Id Loaded.',\n    type: ArticleDto,\n  })\n  @ApiResponse({\n    status: HttpStatus.BAD_REQUEST,\n    description: 'Bad Request.',\n  })\n  @Get(':articleId')\n  findById(@Param('articleId') articleId: string): Promise {\n    return this.articleService.findById(articleId);\n  }\n\n  @ApiOperation({ summary: 'Get Article By Id' })\n  @ApiResponse({\n    status: HttpStatus.OK,\n    description: 'Article Updated.',\n    type: ArticleDto,\n  })\n  @ApiResponse({\n    status: HttpStatus.BAD_REQUEST,\n    description: 'Bad Request.',\n  })\n  @Put(':articleId')\n  update(\n    @Param('articleId') articleId: string,\n    @Body() updateArticleDto: UpdateArticleDto,\n  ): Promise {\n    return this.articleService.update(articleId, updateArticleDto);\n  }\n\n  @ApiOperation({ summary: 'Delete Article By Id' })\n  @ApiResponse({\n    status: HttpStatus.OK,\n    description: 'Article Deleted.',\n  })\n  @ApiResponse({\n    status: HttpStatus.BAD_REQUEST,\n    description: 'Bad Request.',\n  })\n  @Delete(':articleId')\n  deleteById(@Param('articleId') articleId: string): Promise {\n    return this.articleService.delete(articleId);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ArticlesModule.html":{"url":"modules/ArticlesModule.html","title":"module - ArticlesModule","body":"\n                   \n\n\n\n\n    Modules\n    ArticlesModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ArticlesModule\n\n\n\ncluster_ArticlesModule_providers\n\n\n\n\nArticlesService\n\nArticlesService\n\n\n\nArticlesModule\n\nArticlesModule\n\nArticlesModule -->\n\nArticlesService->ArticlesModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/modules/articles/articles.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            ArticlesService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            ArticlesController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { Article, ArticleSchema } from './article.schema';\nimport { ArticlesService } from './articles.service';\nimport { ArticlesController } from './articles.controller';\nimport { MongooseModule } from '@nestjs/mongoose';\n\n@Module({\n  imports: [\n    MongooseModule.forFeature([{ name: Article.name, schema: ArticleSchema }]),\n  ],\n  controllers: [ArticlesController],\n  providers: [ArticlesService],\n})\nexport class ArticlesModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ArticlesService.html":{"url":"injectables/ArticlesService.html","title":"injectable - ArticlesService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ArticlesService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/articles/articles.service.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            CrudService\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                dtoClass\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                delete\n                            \n                            \n                                    Async\n                                find\n                            \n                            \n                                    Async\n                                findById\n                            \n                            \n                                    Async\n                                findOne\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(articleModel: Model)\n                    \n                \n                        \n                            \n                                Defined in src/modules/articles/articles.service.ts:19\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        articleModel\n                                                  \n                                                        \n                                                                        Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(createArticleDto: CreateDto)\n                \n            \n\n\n                    \n                        \n                            Inherited from         CrudService\n\n                        \n                    \n                    \n                        \n                                Defined in         CrudService:20\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createArticleDto\n                                            \n                                                        CreateDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        delete\n                        \n                    \n                \n            \n            \n                \n                        \n                    delete(_id: string)\n                \n            \n\n\n                    \n                        \n                            Inherited from         CrudService\n\n                        \n                    \n                    \n                        \n                                Defined in         CrudService:93\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                _id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        find\n                        \n                    \n                \n            \n            \n                \n                        \n                    find(queryDto: QueryDTO)\n                \n            \n\n\n                    \n                        \n                            Inherited from         CrudService\n\n                        \n                    \n                    \n                        \n                                Defined in         CrudService:33\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                queryDto\n                                            \n                                                        QueryDTO\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findById\n                        \n                    \n                \n            \n            \n                \n                        \n                    findById(_id: string)\n                \n            \n\n\n                    \n                        \n                            Inherited from         CrudService\n\n                        \n                    \n                    \n                        \n                                Defined in         CrudService:44\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                _id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(queryDto: QueryDTO)\n                \n            \n\n\n                    \n                        \n                            Inherited from         CrudService\n\n                        \n                    \n                    \n                        \n                                Defined in         CrudService:60\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                queryDto\n                                            \n                                                        QueryDTO\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(_id: string, payload: UpdateDto)\n                \n            \n\n\n                    \n                        \n                            Inherited from         CrudService\n\n                        \n                    \n                    \n                        \n                                Defined in         CrudService:75\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                _id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                payload\n                                            \n                                                        UpdateDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        dtoClass\n                        \n                    \n                \n            \n                        \n                            \n                                Inherited from         CrudService\n\n                            \n                        \n                    \n                        \n                                Defined in         CrudService:12\n\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { Article, ArticleDocument } from './article.schema';\nimport {\n  ArticleDto,\n  ArticleQueryDto,\n  UpdateArticleDto,\n} from './dto/article.dto';\nimport { CreateArticleDto } from './dto/create-article.dto';\nimport { InjectModel } from '@nestjs/mongoose';\nimport { Model } from 'mongoose';\nimport { CrudService } from 'src/@base/generics/crud-generic';\n\n@Injectable()\nexport class ArticlesService extends CrudService {\n  constructor(\n    @InjectModel(Article.name) readonly articleModel: Model,\n  ) {\n    super(articleModel, ArticleDto);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/AuthController.html":{"url":"controllers/AuthController.html","title":"controller - AuthController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AuthController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/authentication/authentication.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                auth\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    Async\n                                userLogin\n                            \n                            \n                                    \n                                    \n                                    \n                                    Async\n                                userRegister\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Async\n                        userLogin\n                        \n                    \n                \n            \n            \n                \n                        \n                    userLogin(userLoginDto: UserLoginDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('login')@HttpCode(HttpStatus.OK)@ApiOkResponse({type: LoginPayloadDto, description: 'User info with access token'})\n                \n            \n\n                    \n                        \n                            Defined in src/modules/authentication/authentication.controller.ts:25\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                userLoginDto\n                                            \n                                                            UserLoginDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Async\n                        userRegister\n                        \n                    \n                \n            \n            \n                \n                        \n                    userRegister(createUserDto: CreateUserDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('register')@HttpCode(HttpStatus.OK)@ApiOkResponse({type: UserDto, description: 'Successfully Registered'})\n                \n            \n\n                    \n                        \n                            Defined in src/modules/authentication/authentication.controller.ts:41\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createUserDto\n                                            \n                                                            CreateUserDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import { Body, Controller, HttpCode, HttpStatus, Post } from '@nestjs/common';\nimport { ApiOkResponse, ApiTags } from '@nestjs/swagger';\n\nimport { LoginPayloadDto } from './dto/login-payload.dto';\nimport { UserLoginDto } from './dto/user-login.dto';\nimport { UsersService } from '../users/users.service';\nimport { AuthenticationService } from './authentication.service';\nimport { UserDto } from '../users/dto/user.dto';\nimport { CreateUserDto } from '../users/dto/create-user.dto';\n\n@Controller('auth')\n@ApiTags('Authentication')\nexport class AuthController {\n  constructor(\n    private userService: UsersService,\n    private authenticationService: AuthenticationService,\n  ) {}\n\n  @Post('login')\n  @HttpCode(HttpStatus.OK)\n  @ApiOkResponse({\n    type: LoginPayloadDto,\n    description: 'User info with access token',\n  })\n  async userLogin(\n    @Body() userLoginDto: UserLoginDto,\n  ): Promise {\n    const user = await this.authenticationService.validateUser(userLoginDto);\n\n    const token = await this.authenticationService.createAccessToken({\n      userId: user._id,\n      role: user.role,\n    });\n\n    return new LoginPayloadDto(user, token);\n  }\n\n  @Post('register')\n  @HttpCode(HttpStatus.OK)\n  @ApiOkResponse({ type: UserDto, description: 'Successfully Registered' })\n  async userRegister(@Body() createUserDto: CreateUserDto): Promise {\n    return this.userService.create(createUserDto);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AuthenticationModule.html":{"url":"modules/AuthenticationModule.html","title":"module - AuthenticationModule","body":"\n                   \n\n\n\n\n    Modules\n    AuthenticationModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AuthenticationModule\n\n\n\ncluster_AuthenticationModule_imports\n\n\n\ncluster_AuthenticationModule_exports\n\n\n\ncluster_AuthenticationModule_providers\n\n\n\n\nUsersModule\n\nUsersModule\n\n\n\nAuthenticationModule\n\nAuthenticationModule\n\nAuthenticationModule -->\n\nUsersModule->AuthenticationModule\n\n\n\n\n\nAuthenticationService \n\nAuthenticationService \n\nAuthenticationService  -->\n\nAuthenticationModule->AuthenticationService \n\n\n\n\n\nAuthenticationService\n\nAuthenticationService\n\nAuthenticationModule -->\n\nAuthenticationService->AuthenticationModule\n\n\n\n\n\nJwtStrategy\n\nJwtStrategy\n\nAuthenticationModule -->\n\nJwtStrategy->AuthenticationModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/modules/authentication/authentication.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AuthenticationService\n                        \n                        \n                            JwtStrategy\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AuthController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            UsersModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            AuthenticationService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { JwtModule } from '@nestjs/jwt';\nimport { PassportModule } from '@nestjs/passport';\n\nimport { UsersModule } from '../users/users.module';\nimport { JwtStrategy } from './strategies/jwt.strategy';\nimport { ConfigService } from '@nestjs/config';\nimport { AuthController } from './authentication.controller';\nimport { AuthenticationService } from './authentication.service';\nimport { JwtConfig } from 'src/@common/env-configuration/config.type';\n\n@Module({\n  imports: [\n    UsersModule,\n    PassportModule.register({ defaultStrategy: 'jwt' }),\n    JwtModule.registerAsync({\n      useFactory: (configService: ConfigService) => {\n        const jwtConfig = configService.get('jwt');\n        return {\n          privateKey: jwtConfig.privateKey,\n          publicKey: jwtConfig.publicKey,\n          signOptions: {\n            algorithm: 'RS256',\n          },\n          verifyOptions: {\n            algorithms: ['RS256'],\n          },\n        };\n      },\n      inject: [ConfigService],\n    }),\n  ],\n  controllers: [AuthController],\n  providers: [AuthenticationService, JwtStrategy],\n  exports: [JwtModule, AuthenticationService],\n})\nexport class AuthenticationModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthenticationService.html":{"url":"injectables/AuthenticationService.html","title":"injectable - AuthenticationService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AuthenticationService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/authentication/authentication.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                createAccessToken\n                            \n                            \n                                    Async\n                                validateUser\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(jwtService: JwtService, configService: ConfigService, userService: UsersService)\n                    \n                \n                        \n                            \n                                Defined in src/modules/authentication/authentication.service.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        jwtService\n                                                  \n                                                        \n                                                                    JwtService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        configService\n                                                  \n                                                        \n                                                                    ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UsersService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        createAccessToken\n                        \n                    \n                \n            \n            \n                \n                        \n                    createAccessToken(data: literal type)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/authentication/authentication.service.ts:22\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                        literal type\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        validateUser\n                        \n                    \n                \n            \n            \n                \n                        \n                    validateUser(userLoginDto: UserLoginDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/authentication/authentication.service.ts:36\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                userLoginDto\n                                            \n                                                            UserLoginDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, NotFoundException } from '@nestjs/common';\nimport { JwtService } from '@nestjs/jwt';\n\nimport { TokenPayloadDto } from './dto/token-payload.dto';\nimport { type UserLoginDto } from './dto/user-login.dto';\nimport { UsersService } from '../users/users.service';\nimport { ConfigService } from '@nestjs/config';\nimport { TokenType } from 'src/app.constants';\nimport { RoleType } from '../users/types/user.types';\nimport { plainToClass } from 'class-transformer';\nimport { UserDto } from '../users/dto/user.dto';\nimport { validateHash } from 'src/@common/utilities/utils';\n\n@Injectable()\nexport class AuthenticationService {\n  constructor(\n    private jwtService: JwtService,\n    private configService: ConfigService,\n    private userService: UsersService,\n  ) {}\n\n  async createAccessToken(data: {\n    role: RoleType;\n    userId: string;\n  }): Promise {\n    return {\n      expiresIn: 60000,\n      accessToken: await this.jwtService.signAsync({\n        userId: data.userId,\n        type: TokenType.ACCESS_TOKEN,\n        role: data.role,\n      }),\n    };\n  }\n\n  async validateUser(userLoginDto: UserLoginDto): Promise {\n    const user = await this.userService.userModel.findOne({\n      email: userLoginDto.usernameOrEmail,\n    });\n    const isPasswordValid = await validateHash(\n      userLoginDto.password,\n      user?.password,\n    );\n\n    if (!isPasswordValid) {\n      throw new NotFoundException({ error: 'Invalid Credentials' });\n    }\n    return plainToClass(UserDto, user.toObject());\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Base.html":{"url":"classes/Base.html","title":"class - Base","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Base\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/@base/entity/base.entity.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                createdAt\n                            \n                            \n                                    \n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Date, default: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/@base/entity/base.entity.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Date, default: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/@base/entity/base.entity.ts:9\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Prop, Schema } from '@nestjs/mongoose';\n\n@Schema()\nexport abstract class Base {\n  @Prop({ type: Date, default: Date.now })\n  createdAt: Date;\n\n  @Prop({ type: Date, default: Date.now })\n  updatedAt: Date;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/BaseDto.html":{"url":"classes/BaseDto.html","title":"class - BaseDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  BaseDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/@base/dto/base.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    \n                                _id\n                            \n                            \n                                    \n                                createdAt\n                            \n                            \n                                    \n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@IsUUID()@IsOptional()@Transform(value => )\n                        \n                    \n                \n                    \n                        \n                                Defined in src/@base/dto/base.dto.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/@base/dto/base.dto.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/@base/dto/base.dto.ts:16\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { Transform } from 'class-transformer';\nimport { IsOptional, IsUUID } from 'class-validator';\n\nexport class BaseDto {\n  @ApiProperty()\n  @IsUUID()\n  @IsOptional()\n  @Transform((value) => value.obj._id.toString())\n  _id: string;\n\n  @ApiProperty()\n  createdAt: Date;\n\n  @ApiProperty()\n  updatedAt: Date;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/CategoriesController.html":{"url":"controllers/CategoriesController.html","title":"controller - CategoriesController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  CategoriesController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/categories/categories.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                categories\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    \n                                create\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                deleteById\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                find\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                findById\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(createCategoryDto: CreateCategoryDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiOperation({summary: 'Create an category'})@ApiResponse({status: undefined, description: 'Category successfully created.', type: CategoryDto})@ApiResponse({status: undefined, description: 'Bad Request.'})@Post()\n                \n            \n\n                    \n                        \n                            Defined in src/modules/categories/categories.controller.ts:40\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createCategoryDto\n                                            \n                                                            CreateCategoryDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                        deleteById\n                        \n                    \n                \n            \n            \n                \n                        \n                    deleteById(categoryId: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiOperation({summary: 'Delete Category By Id'})@ApiResponse({status: undefined, description: 'Category Deleted.'})@ApiResponse({status: undefined, description: 'Bad Request.'})@Delete(':categoryId')\n                \n            \n\n                    \n                        \n                            Defined in src/modules/categories/categories.controller.ts:102\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                categoryId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                        find\n                        \n                    \n                \n            \n            \n                \n                        \n                    find(categoryQueryDto: CategoryQueryDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiOperation({summary: 'List Categories'})@ApiResponse({status: undefined, description: 'Category list loaded.', type: undefined})@ApiResponse({status: undefined, description: 'Bad Request.'})@Get()\n                \n            \n\n                    \n                        \n                            Defined in src/modules/categories/categories.controller.ts:55\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                categoryQueryDto\n                                            \n                                                            CategoryQueryDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                        findById\n                        \n                    \n                \n            \n            \n                \n                        \n                    findById(categoryId: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiOperation({summary: 'Get Category By Id'})@ApiResponse({status: undefined, description: 'Category By Id Loaded.', type: CategoryDto})@ApiResponse({status: undefined, description: 'Bad Request.'})@Get(':categoryId')\n                \n            \n\n                    \n                        \n                            Defined in src/modules/categories/categories.controller.ts:70\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                categoryId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(categoryId: string, updateCategoryDto: UpdateCategoryDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiOperation({summary: 'Get Category By Id'})@ApiResponse({status: undefined, description: 'Category Updated.', type: CategoryDto})@ApiResponse({status: undefined, description: 'Bad Request.'})@Put(':categoryId')\n                \n            \n\n                    \n                        \n                            Defined in src/modules/categories/categories.controller.ts:85\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                categoryId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updateCategoryDto\n                                            \n                                                            UpdateCategoryDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Controller,\n  Post,\n  Body,\n  HttpStatus,\n  Get,\n  Put,\n  Query,\n  Param,\n  Delete,\n  UseGuards,\n} from '@nestjs/common';\nimport { CategoriesService } from './categories.service';\nimport { ApiOperation, ApiResponse, ApiTags } from '@nestjs/swagger';\nimport { CreateCategoryDto } from './dto/create-category.dto';\nimport {\n  CategoryDto,\n  CategoryQueryDto,\n  UpdateCategoryDto,\n} from './dto/category.dto';\nimport { AuthGuard } from '@nestjs/passport';\n\n@UseGuards(AuthGuard('jwt'))\n@ApiTags('Categories')\n@Controller('categories')\nexport class CategoriesController {\n  constructor(private readonly categoryService: CategoriesService) {}\n\n  @ApiOperation({ summary: 'Create an category' })\n  @ApiResponse({\n    status: HttpStatus.CREATED,\n    description: 'Category successfully created.',\n    type: CategoryDto,\n  })\n  @ApiResponse({\n    status: HttpStatus.BAD_REQUEST,\n    description: 'Bad Request.',\n  })\n  @Post()\n  create(@Body() createCategoryDto: CreateCategoryDto): Promise {\n    return this.categoryService.create(createCategoryDto);\n  }\n\n  @ApiOperation({ summary: 'List Categories' })\n  @ApiResponse({\n    status: HttpStatus.OK,\n    description: 'Category list loaded.',\n    type: [CategoryDto],\n  })\n  @ApiResponse({\n    status: HttpStatus.BAD_REQUEST,\n    description: 'Bad Request.',\n  })\n  @Get()\n  find(@Query() categoryQueryDto: CategoryQueryDto): Promise {\n    return this.categoryService.find(categoryQueryDto);\n  }\n\n  @ApiOperation({ summary: 'Get Category By Id' })\n  @ApiResponse({\n    status: HttpStatus.OK,\n    description: 'Category By Id Loaded.',\n    type: CategoryDto,\n  })\n  @ApiResponse({\n    status: HttpStatus.BAD_REQUEST,\n    description: 'Bad Request.',\n  })\n  @Get(':categoryId')\n  findById(@Param('categoryId') categoryId: string): Promise {\n    return this.categoryService.findById(categoryId);\n  }\n\n  @ApiOperation({ summary: 'Get Category By Id' })\n  @ApiResponse({\n    status: HttpStatus.OK,\n    description: 'Category Updated.',\n    type: CategoryDto,\n  })\n  @ApiResponse({\n    status: HttpStatus.BAD_REQUEST,\n    description: 'Bad Request.',\n  })\n  @Put(':categoryId')\n  update(\n    @Param('categoryId') categoryId: string,\n    @Body() updateCategoryDto: UpdateCategoryDto,\n  ): Promise {\n    return this.categoryService.update(categoryId, updateCategoryDto);\n  }\n\n  @ApiOperation({ summary: 'Delete Category By Id' })\n  @ApiResponse({\n    status: HttpStatus.OK,\n    description: 'Category Deleted.',\n  })\n  @ApiResponse({\n    status: HttpStatus.BAD_REQUEST,\n    description: 'Bad Request.',\n  })\n  @Delete(':categoryId')\n  deleteById(@Param('categoryId') categoryId: string): Promise {\n    return this.categoryService.delete(categoryId);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/CategoriesModule.html":{"url":"modules/CategoriesModule.html","title":"module - CategoriesModule","body":"\n                   \n\n\n\n\n    Modules\n    CategoriesModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_CategoriesModule\n\n\n\ncluster_CategoriesModule_providers\n\n\n\n\nCategoriesService\n\nCategoriesService\n\n\n\nCategoriesModule\n\nCategoriesModule\n\nCategoriesModule -->\n\nCategoriesService->CategoriesModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/modules/categories/categories.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            CategoriesService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            CategoriesController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { Category, CategorySchema } from './category.schema';\nimport { CategoriesService } from './categories.service';\nimport { CategoriesController } from './categories.controller';\nimport { MongooseModule } from '@nestjs/mongoose';\n\n@Module({\n  imports: [\n    MongooseModule.forFeature([{ name: Category.name, schema: CategorySchema }]),\n  ],\n  controllers: [CategoriesController],\n  providers: [CategoriesService],\n})\nexport class CategoriesModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CategoriesService.html":{"url":"injectables/CategoriesService.html","title":"injectable - CategoriesService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  CategoriesService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/categories/categories.service.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            CrudService\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                dtoClass\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                onModuleInit\n                            \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                delete\n                            \n                            \n                                    Async\n                                find\n                            \n                            \n                                    Async\n                                findById\n                            \n                            \n                                    Async\n                                findOne\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(categoryModel: Model)\n                    \n                \n                        \n                            \n                                Defined in src/modules/categories/categories.service.ts:23\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        categoryModel\n                                                  \n                                                        \n                                                                        Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        onModuleInit\n                        \n                    \n                \n            \n            \n                \n                        \n                    onModuleInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/categories/categories.service.ts:30\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(createArticleDto: CreateDto)\n                \n            \n\n\n                    \n                        \n                            Inherited from         CrudService\n\n                        \n                    \n                    \n                        \n                                Defined in         CrudService:20\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createArticleDto\n                                            \n                                                        CreateDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        delete\n                        \n                    \n                \n            \n            \n                \n                        \n                    delete(_id: string)\n                \n            \n\n\n                    \n                        \n                            Inherited from         CrudService\n\n                        \n                    \n                    \n                        \n                                Defined in         CrudService:93\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                _id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        find\n                        \n                    \n                \n            \n            \n                \n                        \n                    find(queryDto: QueryDTO)\n                \n            \n\n\n                    \n                        \n                            Inherited from         CrudService\n\n                        \n                    \n                    \n                        \n                                Defined in         CrudService:33\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                queryDto\n                                            \n                                                        QueryDTO\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findById\n                        \n                    \n                \n            \n            \n                \n                        \n                    findById(_id: string)\n                \n            \n\n\n                    \n                        \n                            Inherited from         CrudService\n\n                        \n                    \n                    \n                        \n                                Defined in         CrudService:44\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                _id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(queryDto: QueryDTO)\n                \n            \n\n\n                    \n                        \n                            Inherited from         CrudService\n\n                        \n                    \n                    \n                        \n                                Defined in         CrudService:60\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                queryDto\n                                            \n                                                        QueryDTO\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(_id: string, payload: UpdateDto)\n                \n            \n\n\n                    \n                        \n                            Inherited from         CrudService\n\n                        \n                    \n                    \n                        \n                                Defined in         CrudService:75\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                _id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                payload\n                                            \n                                                        UpdateDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        dtoClass\n                        \n                    \n                \n            \n                        \n                            \n                                Inherited from         CrudService\n\n                            \n                        \n                    \n                        \n                                Defined in         CrudService:12\n\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable, OnModuleInit } from '@nestjs/common';\nimport { Category, CategoryDocument } from './category.schema';\nimport {\n  CategoryDto,\n  CategoryQueryDto,\n  UpdateCategoryDto,\n} from './dto/category.dto';\nimport { CreateCategoryDto } from './dto/create-category.dto';\nimport { InjectModel } from '@nestjs/mongoose';\nimport { Model } from 'mongoose';\nimport { CrudService } from 'src/@base/generics/crud-generic';\nimport categories from './base-categories';\n\n@Injectable()\nexport class CategoriesService\n  extends CrudService\n  implements OnModuleInit\n{\n  constructor(\n    @InjectModel(Category.name) readonly categoryModel: Model,\n  ) {\n    super(categoryModel, CategoryDto);\n  }\n\n  async onModuleInit() {\n    const count = await this.categoryModel.countDocuments();\n    if (count === 0) {\n      await this.categoryModel.insertMany(categories);\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Category.html":{"url":"classes/Category.html","title":"class - Category","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Category\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/categories/category.schema.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                name\n                            \n                            \n                                    \n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: String, required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/categories/category.schema.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         CategoryType\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: String, required: true, enum: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/categories/category.schema.ts:15\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\nimport * as mongoose from 'mongoose';\nimport { Base } from 'src/@base/entity/base.entity';\nimport { CategoryType } from './category.types';\n\nexport type CategoryDocument = Category & mongoose.Document;\n\n@Schema({ autoCreate: true })\nexport class Category extends Base {\n  @Prop({\n    type: String,\n    required: true,\n    enum: [CategoryType.SOURCE, CategoryType.STEROID],\n  })\n  type: CategoryType;\n\n  @Prop({ type: String, required: true })\n  name: string;\n}\n\nexport const CategorySchema = SchemaFactory.createForClass(Category);\n\nCategorySchema.pre('save', function (next) {\n  next();\n});\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CategoryDto.html":{"url":"classes/CategoryDto.html","title":"class - CategoryDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CategoryDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/categories/dto/category.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            BaseDto\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                name\n                            \n                            \n                                    \n                                type\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                _id\n                            \n                            \n                                    \n                                createdAt\n                            \n                            \n                                    \n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @StringField({swagger: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/categories/dto/category.dto.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         CategoryType\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @EnumField(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/categories/dto/category.dto.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@IsUUID()@IsOptional()@Transform(value => )\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseDto\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseDto:10\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseDto\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseDto:13\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseDto\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseDto:16\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiPropertyOptional, OmitType, PartialType } from '@nestjs/swagger';\nimport { BaseDto } from 'src/@base/dto/base.dto';\nimport {\n  EnumField,\n  NumberFieldOptional,\n  StringField,\n} from 'src/@common/decorators/field.decorators';\nimport { CategoryType } from '../category.types';\n\nexport class CategoryDto extends BaseDto {\n  @EnumField(() => CategoryType)\n  type: CategoryType;\n\n  @StringField({ swagger: true })\n  name: string;\n}\n\nexport class UpdateCategoryDto extends PartialType(\n  OmitType(CategoryDto, ['createdAt', 'updatedAt', '_id'] as const),\n) {}\n\nexport class CategoryQueryDto extends PartialType(\n  OmitType(CategoryDto, ['createdAt', 'updatedAt'] as const),\n) {\n  @ApiPropertyOptional()\n  @NumberFieldOptional()\n  skip: number;\n\n  @ApiPropertyOptional()\n  @NumberFieldOptional()\n  limit: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CategoryQueryDto.html":{"url":"classes/CategoryQueryDto.html","title":"class - CategoryQueryDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CategoryQueryDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/categories/dto/category.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        PartialType(\n  OmitType(CategoryDto, ['createdAt', 'updatedAt'] as const),\n)\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                limit\n                            \n                            \n                                    \n                                    \n                                skip\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        limit\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional()@NumberFieldOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/categories/dto/category.dto.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        skip\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional()@NumberFieldOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/categories/dto/category.dto.ts:27\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiPropertyOptional, OmitType, PartialType } from '@nestjs/swagger';\nimport { BaseDto } from 'src/@base/dto/base.dto';\nimport {\n  EnumField,\n  NumberFieldOptional,\n  StringField,\n} from 'src/@common/decorators/field.decorators';\nimport { CategoryType } from '../category.types';\n\nexport class CategoryDto extends BaseDto {\n  @EnumField(() => CategoryType)\n  type: CategoryType;\n\n  @StringField({ swagger: true })\n  name: string;\n}\n\nexport class UpdateCategoryDto extends PartialType(\n  OmitType(CategoryDto, ['createdAt', 'updatedAt', '_id'] as const),\n) {}\n\nexport class CategoryQueryDto extends PartialType(\n  OmitType(CategoryDto, ['createdAt', 'updatedAt'] as const),\n) {\n  @ApiPropertyOptional()\n  @NumberFieldOptional()\n  skip: number;\n\n  @ApiPropertyOptional()\n  @NumberFieldOptional()\n  limit: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Comment.html":{"url":"classes/Comment.html","title":"class - Comment","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Comment\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/comments/comment.schema.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                content\n                            \n                            \n                                    \n                                creator\n                            \n                            \n                                    \n                                images\n                            \n                            \n                                    \n                                referenceId\n                            \n                            \n                                    \n                                referenceType\n                            \n                            \n                                    \n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        content\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: String, required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/comments/comment.schema.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        creator\n                        \n                    \n                \n            \n                \n                    \n                        Type :     mongoose.Types.ObjectId\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: ObjectId, ref: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/comments/comment.schema.ts:39\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        images\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: undefined, required: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/comments/comment.schema.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        referenceId\n                        \n                    \n                \n            \n                \n                    \n                        Type :     mongoose.Types.ObjectId\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: ObjectId, refPath: 'referenceType'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/comments/comment.schema.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        referenceType\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: String, required: true, enum: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/comments/comment.schema.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         CommentTypes\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: String, required: true, enum: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/comments/comment.schema.ts:30\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\nimport * as mongoose from 'mongoose';\nimport { Base } from 'src/@base/entity/base.entity';\nimport { User } from '../users/user.schema';\nimport { Steroid } from '../steroids/steroids/steroid.schema';\nimport { Source } from '../sources/source.schema';\n\nexport type CommentDocument = Comment & mongoose.Document;\n\nconst ObjectId = mongoose.Schema.Types.ObjectId;\n\nenum CommentTypes {\n  COMMENTARY = 'commentary',\n  REVIEW = 'review',\n}\n\n@Schema({ autoCreate: true })\nexport class Comment extends Base {\n  @Prop({ type: String, required: true })\n  content: string;\n\n  @Prop({ type: [String], required: false })\n  images: string[];\n\n  @Prop({\n    type: String,\n    required: true,\n    enum: [CommentTypes.COMMENTARY, CommentTypes.REVIEW],\n  })\n  type: CommentTypes;\n\n  @Prop({ type: String, required: true, enum: [Steroid.name, Source.name] })\n  referenceType: string;\n\n  @Prop({ type: ObjectId, refPath: 'referenceType' })\n  referenceId: mongoose.Types.ObjectId;\n\n  @Prop({ type: ObjectId, ref: User.name })\n  creator: mongoose.Types.ObjectId;\n}\n\nexport const CommentSchema = SchemaFactory.createForClass(Comment);\n\nCommentSchema.pre('save', function (next) {\n  next();\n});\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CommentDto.html":{"url":"classes/CommentDto.html","title":"class - CommentDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CommentDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/comments/dto/comment.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            BaseDto\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                content\n                            \n                            \n                                    \n                                referenceId\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                _id\n                            \n                            \n                                    \n                                createdAt\n                            \n                            \n                                    \n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        content\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @StringField({swagger: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/comments/dto/comment.dto.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        referenceId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @StringField({swagger: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/comments/dto/comment.dto.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@IsUUID()@IsOptional()@Transform(value => )\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseDto\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseDto:10\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseDto\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseDto:13\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseDto\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseDto:16\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiPropertyOptional, OmitType, PartialType } from '@nestjs/swagger';\nimport { BaseDto } from 'src/@base/dto/base.dto';\nimport {\n  NumberFieldOptional,\n  StringField,\n} from 'src/@common/decorators/field.decorators';\n\nexport class CommentDto extends BaseDto {\n  @StringField({ swagger: true })\n  content: string;\n\n  @StringField({ swagger: true })\n  referenceId: string;\n}\n\nexport class UpdateCommentDto extends PartialType(\n  OmitType(CommentDto, ['createdAt', 'updatedAt', '_id'] as const),\n) {}\n\nexport class CommentQueryDto extends PartialType(\n  OmitType(CommentDto, ['createdAt', 'updatedAt'] as const),\n) {\n  @ApiPropertyOptional()\n  @NumberFieldOptional()\n  skip: number;\n\n  @ApiPropertyOptional()\n  @NumberFieldOptional()\n  limit: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CommentQueryDto.html":{"url":"classes/CommentQueryDto.html","title":"class - CommentQueryDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CommentQueryDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/comments/dto/comment.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        PartialType(\n  OmitType(CommentDto, ['createdAt', 'updatedAt'] as const),\n)\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                limit\n                            \n                            \n                                    \n                                    \n                                skip\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        limit\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional()@NumberFieldOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/comments/dto/comment.dto.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        skip\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional()@NumberFieldOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/comments/dto/comment.dto.ts:25\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiPropertyOptional, OmitType, PartialType } from '@nestjs/swagger';\nimport { BaseDto } from 'src/@base/dto/base.dto';\nimport {\n  NumberFieldOptional,\n  StringField,\n} from 'src/@common/decorators/field.decorators';\n\nexport class CommentDto extends BaseDto {\n  @StringField({ swagger: true })\n  content: string;\n\n  @StringField({ swagger: true })\n  referenceId: string;\n}\n\nexport class UpdateCommentDto extends PartialType(\n  OmitType(CommentDto, ['createdAt', 'updatedAt', '_id'] as const),\n) {}\n\nexport class CommentQueryDto extends PartialType(\n  OmitType(CommentDto, ['createdAt', 'updatedAt'] as const),\n) {\n  @ApiPropertyOptional()\n  @NumberFieldOptional()\n  skip: number;\n\n  @ApiPropertyOptional()\n  @NumberFieldOptional()\n  limit: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/CommentsController.html":{"url":"controllers/CommentsController.html","title":"controller - CommentsController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  CommentsController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/comments/comments.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                comments\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    \n                                create\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                deleteById\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                find\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                findById\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(createCommentDto: CreateCommentDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiOperation({summary: 'Create an comment'})@ApiResponse({status: undefined, description: 'Comment successfully created.', type: CommentDto})@ApiResponse({status: undefined, description: 'Bad Request.'})@Post()\n                \n            \n\n                    \n                        \n                            Defined in src/modules/comments/comments.controller.ts:40\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createCommentDto\n                                            \n                                                            CreateCommentDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                        deleteById\n                        \n                    \n                \n            \n            \n                \n                        \n                    deleteById(commentId: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiOperation({summary: 'Delete Comment By Id'})@ApiResponse({status: undefined, description: 'Comment Deleted.'})@ApiResponse({status: undefined, description: 'Bad Request.'})@Delete(':commentId')\n                \n            \n\n                    \n                        \n                            Defined in src/modules/comments/comments.controller.ts:102\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                commentId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                        find\n                        \n                    \n                \n            \n            \n                \n                        \n                    find(commentQueryDto: CommentQueryDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiOperation({summary: 'List Comments'})@ApiResponse({status: undefined, description: 'Comment list loaded.', type: undefined})@ApiResponse({status: undefined, description: 'Bad Request.'})@Get()\n                \n            \n\n                    \n                        \n                            Defined in src/modules/comments/comments.controller.ts:55\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                commentQueryDto\n                                            \n                                                            CommentQueryDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                        findById\n                        \n                    \n                \n            \n            \n                \n                        \n                    findById(commentId: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiOperation({summary: 'Get Comment By Id'})@ApiResponse({status: undefined, description: 'Comment By Id Loaded.', type: CommentDto})@ApiResponse({status: undefined, description: 'Bad Request.'})@Get(':commentId')\n                \n            \n\n                    \n                        \n                            Defined in src/modules/comments/comments.controller.ts:70\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                commentId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(commentId: string, updateCommentDto: UpdateCommentDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiOperation({summary: 'Get Comment By Id'})@ApiResponse({status: undefined, description: 'Comment Updated.', type: CommentDto})@ApiResponse({status: undefined, description: 'Bad Request.'})@Put(':commentId')\n                \n            \n\n                    \n                        \n                            Defined in src/modules/comments/comments.controller.ts:85\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                commentId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updateCommentDto\n                                            \n                                                            UpdateCommentDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Controller,\n  Post,\n  Body,\n  HttpStatus,\n  Get,\n  Put,\n  Query,\n  Param,\n  Delete,\n  UseGuards,\n} from '@nestjs/common';\nimport { CommentsService } from './comments.service';\nimport { ApiOperation, ApiResponse, ApiTags } from '@nestjs/swagger';\nimport { CreateCommentDto } from './dto/create-comment.dto';\nimport {\n  CommentDto,\n  CommentQueryDto,\n  UpdateCommentDto,\n} from './dto/comment.dto';\nimport { AuthGuard } from '@nestjs/passport';\n\n@UseGuards(AuthGuard('jwt'))\n@ApiTags('Comments')\n@Controller('comments')\nexport class CommentsController {\n  constructor(private readonly commentService: CommentsService) {}\n\n  @ApiOperation({ summary: 'Create an comment' })\n  @ApiResponse({\n    status: HttpStatus.CREATED,\n    description: 'Comment successfully created.',\n    type: CommentDto,\n  })\n  @ApiResponse({\n    status: HttpStatus.BAD_REQUEST,\n    description: 'Bad Request.',\n  })\n  @Post()\n  create(@Body() createCommentDto: CreateCommentDto): Promise {\n    return this.commentService.create(createCommentDto);\n  }\n\n  @ApiOperation({ summary: 'List Comments' })\n  @ApiResponse({\n    status: HttpStatus.OK,\n    description: 'Comment list loaded.',\n    type: [CommentDto],\n  })\n  @ApiResponse({\n    status: HttpStatus.BAD_REQUEST,\n    description: 'Bad Request.',\n  })\n  @Get()\n  find(@Query() commentQueryDto: CommentQueryDto): Promise {\n    return this.commentService.find(commentQueryDto);\n  }\n\n  @ApiOperation({ summary: 'Get Comment By Id' })\n  @ApiResponse({\n    status: HttpStatus.OK,\n    description: 'Comment By Id Loaded.',\n    type: CommentDto,\n  })\n  @ApiResponse({\n    status: HttpStatus.BAD_REQUEST,\n    description: 'Bad Request.',\n  })\n  @Get(':commentId')\n  findById(@Param('commentId') commentId: string): Promise {\n    return this.commentService.findById(commentId);\n  }\n\n  @ApiOperation({ summary: 'Get Comment By Id' })\n  @ApiResponse({\n    status: HttpStatus.OK,\n    description: 'Comment Updated.',\n    type: CommentDto,\n  })\n  @ApiResponse({\n    status: HttpStatus.BAD_REQUEST,\n    description: 'Bad Request.',\n  })\n  @Put(':commentId')\n  update(\n    @Param('commentId') commentId: string,\n    @Body() updateCommentDto: UpdateCommentDto,\n  ): Promise {\n    return this.commentService.update(commentId, updateCommentDto);\n  }\n\n  @ApiOperation({ summary: 'Delete Comment By Id' })\n  @ApiResponse({\n    status: HttpStatus.OK,\n    description: 'Comment Deleted.',\n  })\n  @ApiResponse({\n    status: HttpStatus.BAD_REQUEST,\n    description: 'Bad Request.',\n  })\n  @Delete(':commentId')\n  deleteById(\n    @Param('commentId') commentId: string,\n  ): Promise {\n    return this.commentService.delete(commentId);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/CommentsModule.html":{"url":"modules/CommentsModule.html","title":"module - CommentsModule","body":"\n                   \n\n\n\n\n    Modules\n    CommentsModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_CommentsModule\n\n\n\ncluster_CommentsModule_providers\n\n\n\ncluster_CommentsModule_exports\n\n\n\n\nCommentsService \n\nCommentsService \n\n\n\nCommentsModule\n\nCommentsModule\n\nCommentsService  -->\n\nCommentsModule->CommentsService \n\n\n\n\n\nCommentsService\n\nCommentsService\n\nCommentsModule -->\n\nCommentsService->CommentsModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/modules/comments/comments.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            CommentsService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            CommentsController\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            CommentsService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { Comment, CommentSchema } from './comment.schema';\nimport { CommentsService } from './comments.service';\nimport { CommentsController } from './comments.controller';\nimport { MongooseModule } from '@nestjs/mongoose';\n\n@Module({\n  imports: [\n    MongooseModule.forFeature([{ name: Comment.name, schema: CommentSchema }]),\n  ],\n  controllers: [CommentsController],\n  providers: [CommentsService],\n  exports: [CommentsService],\n})\nexport class CommentsModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CommentsService.html":{"url":"injectables/CommentsService.html","title":"injectable - CommentsService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  CommentsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/comments/comments.service.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            CrudService\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                dtoClass\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                delete\n                            \n                            \n                                    Async\n                                find\n                            \n                            \n                                    Async\n                                findById\n                            \n                            \n                                    Async\n                                findOne\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(commentModel: Model)\n                    \n                \n                        \n                            \n                                Defined in src/modules/comments/comments.service.ts:19\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        commentModel\n                                                  \n                                                        \n                                                                        Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(createArticleDto: CreateDto)\n                \n            \n\n\n                    \n                        \n                            Inherited from         CrudService\n\n                        \n                    \n                    \n                        \n                                Defined in         CrudService:20\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createArticleDto\n                                            \n                                                        CreateDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        delete\n                        \n                    \n                \n            \n            \n                \n                        \n                    delete(_id: string)\n                \n            \n\n\n                    \n                        \n                            Inherited from         CrudService\n\n                        \n                    \n                    \n                        \n                                Defined in         CrudService:93\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                _id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        find\n                        \n                    \n                \n            \n            \n                \n                        \n                    find(queryDto: QueryDTO)\n                \n            \n\n\n                    \n                        \n                            Inherited from         CrudService\n\n                        \n                    \n                    \n                        \n                                Defined in         CrudService:33\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                queryDto\n                                            \n                                                        QueryDTO\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findById\n                        \n                    \n                \n            \n            \n                \n                        \n                    findById(_id: string)\n                \n            \n\n\n                    \n                        \n                            Inherited from         CrudService\n\n                        \n                    \n                    \n                        \n                                Defined in         CrudService:44\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                _id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(queryDto: QueryDTO)\n                \n            \n\n\n                    \n                        \n                            Inherited from         CrudService\n\n                        \n                    \n                    \n                        \n                                Defined in         CrudService:60\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                queryDto\n                                            \n                                                        QueryDTO\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(_id: string, payload: UpdateDto)\n                \n            \n\n\n                    \n                        \n                            Inherited from         CrudService\n\n                        \n                    \n                    \n                        \n                                Defined in         CrudService:75\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                _id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                payload\n                                            \n                                                        UpdateDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        dtoClass\n                        \n                    \n                \n            \n                        \n                            \n                                Inherited from         CrudService\n\n                            \n                        \n                    \n                        \n                                Defined in         CrudService:12\n\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { Comment, CommentDocument } from './comment.schema';\nimport {\n  CommentDto,\n  CommentQueryDto,\n  UpdateCommentDto,\n} from './dto/comment.dto';\nimport { CreateCommentDto } from './dto/create-comment.dto';\nimport { InjectModel } from '@nestjs/mongoose';\nimport { Model } from 'mongoose';\nimport { CrudService } from 'src/@base/generics/crud-generic';\n\n@Injectable()\nexport class CommentsService extends CrudService {\n  constructor(\n    @InjectModel(Comment.name) readonly commentModel: Model,\n  ) {\n    super(commentModel, CommentDto);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CommonName.html":{"url":"classes/CommonName.html","title":"class - CommonName","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CommonName\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/steroids/common-names/common-name.schema.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                creator\n                            \n                            \n                                    \n                                name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        creator\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: ObjectId, ref: 'User'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/steroids/common-names/common-name.schema.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: String, required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/steroids/common-names/common-name.schema.ts:12\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\nimport * as mongoose from 'mongoose';\nimport { Base } from 'src/@base/entity/base.entity';\n\nexport type CommonNameDocument = CommonName & mongoose.Document;\n\nconst ObjectId = mongoose.Schema.Types.ObjectId;\n\n@Schema({ autoCreate: true })\nexport class CommonName extends Base {\n  @Prop({ type: String, required: true })\n  name: string;\n\n  @Prop({ type: ObjectId, ref: 'User' })\n  creator: any;\n}\n\nexport const CommonNameSchema = SchemaFactory.createForClass(CommonName);\n\nCommonNameSchema.pre('save', function (next) {\n  next();\n});\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CommonNameDto.html":{"url":"classes/CommonNameDto.html","title":"class - CommonNameDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CommonNameDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/steroids/common-names/dto/common-name.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            BaseDto\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                name\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                _id\n                            \n                            \n                                    \n                                createdAt\n                            \n                            \n                                    \n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @StringField({swagger: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/steroids/common-names/dto/common-name.dto.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@IsUUID()@IsOptional()@Transform(value => )\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseDto\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseDto:10\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseDto\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseDto:13\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseDto\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseDto:16\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiPropertyOptional, OmitType, PartialType } from '@nestjs/swagger';\nimport { BaseDto } from 'src/@base/dto/base.dto';\nimport {\n  NumberFieldOptional,\n  StringField,\n} from 'src/@common/decorators/field.decorators';\n\nexport class CommonNameDto extends BaseDto {\n  @StringField({ swagger: true })\n  name: string;\n}\n\nexport class UpdateCommonNameDto extends PartialType(\n  OmitType(CommonNameDto, ['createdAt', 'updatedAt', '_id'] as const),\n) {}\n\nexport class CommonNameQueryDto extends PartialType(\n  OmitType(CommonNameDto, ['createdAt', 'updatedAt'] as const),\n) {\n  @ApiPropertyOptional()\n  @NumberFieldOptional()\n  skip: number;\n\n  @ApiPropertyOptional()\n  @NumberFieldOptional()\n  limit: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CommonNameQueryDto.html":{"url":"classes/CommonNameQueryDto.html","title":"class - CommonNameQueryDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CommonNameQueryDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/steroids/common-names/dto/common-name.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        PartialType(\n  OmitType(CommonNameDto, ['createdAt', 'updatedAt'] as const),\n)\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                limit\n                            \n                            \n                                    \n                                    \n                                skip\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        limit\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional()@NumberFieldOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/steroids/common-names/dto/common-name.dto.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        skip\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional()@NumberFieldOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/steroids/common-names/dto/common-name.dto.ts:22\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiPropertyOptional, OmitType, PartialType } from '@nestjs/swagger';\nimport { BaseDto } from 'src/@base/dto/base.dto';\nimport {\n  NumberFieldOptional,\n  StringField,\n} from 'src/@common/decorators/field.decorators';\n\nexport class CommonNameDto extends BaseDto {\n  @StringField({ swagger: true })\n  name: string;\n}\n\nexport class UpdateCommonNameDto extends PartialType(\n  OmitType(CommonNameDto, ['createdAt', 'updatedAt', '_id'] as const),\n) {}\n\nexport class CommonNameQueryDto extends PartialType(\n  OmitType(CommonNameDto, ['createdAt', 'updatedAt'] as const),\n) {\n  @ApiPropertyOptional()\n  @NumberFieldOptional()\n  skip: number;\n\n  @ApiPropertyOptional()\n  @NumberFieldOptional()\n  limit: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/CommonNamesController.html":{"url":"controllers/CommonNamesController.html","title":"controller - CommonNamesController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  CommonNamesController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/steroids/common-names/common-names.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                common-names\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    \n                                create\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                deleteById\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                find\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                findById\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(createCommonNameDto: CreateCommonNameDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiOperation({summary: 'Create an commonName'})@ApiResponse({status: undefined, description: 'CommonName successfully created.', type: CommonNameDto})@ApiResponse({status: undefined, description: 'Bad Request.'})@Post()\n                \n            \n\n                    \n                        \n                            Defined in src/modules/steroids/common-names/common-names.controller.ts:46\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createCommonNameDto\n                                            \n                                                            CreateCommonNameDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                        deleteById\n                        \n                    \n                \n            \n            \n                \n                        \n                    deleteById(commonNameId: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiOperation({summary: 'Delete CommonName By Id'})@ApiResponse({status: undefined, description: 'CommonName Deleted.'})@ApiResponse({status: undefined, description: 'Bad Request.'})@Delete(':commonNameId')\n                \n            \n\n                    \n                        \n                            Defined in src/modules/steroids/common-names/common-names.controller.ts:114\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                commonNameId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                        find\n                        \n                    \n                \n            \n            \n                \n                        \n                    find(commonNameQueryDto: CommonNameQueryDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiOperation({summary: 'List CommonNames'})@ApiResponse({status: undefined, description: 'CommonName list loaded.', type: undefined})@ApiResponse({status: undefined, description: 'Bad Request.'})@Get()\n                \n            \n\n                    \n                        \n                            Defined in src/modules/steroids/common-names/common-names.controller.ts:63\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                commonNameQueryDto\n                                            \n                                                            CommonNameQueryDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                        findById\n                        \n                    \n                \n            \n            \n                \n                        \n                    findById(commonNameId: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiOperation({summary: 'Get CommonName By Id'})@ApiResponse({status: undefined, description: 'CommonName By Id Loaded.', type: CommonNameDto})@ApiResponse({status: undefined, description: 'Bad Request.'})@Get(':commonNameId')\n                \n            \n\n                    \n                        \n                            Defined in src/modules/steroids/common-names/common-names.controller.ts:80\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                commonNameId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(commonNameId: string, updateCommonNameDto: UpdateCommonNameDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiOperation({summary: 'Get CommonName By Id'})@ApiResponse({status: undefined, description: 'CommonName Updated.', type: CommonNameDto})@ApiResponse({status: undefined, description: 'Bad Request.'})@Put(':commonNameId')\n                \n            \n\n                    \n                        \n                            Defined in src/modules/steroids/common-names/common-names.controller.ts:97\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                commonNameId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updateCommonNameDto\n                                            \n                                                            UpdateCommonNameDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Controller,\n  Post,\n  Body,\n  HttpStatus,\n  Get,\n  Put,\n  Query,\n  Param,\n  Delete,\n  UseGuards,\n} from '@nestjs/common';\nimport { CommonNamesService } from './common-names.service';\nimport {\n  ApiBearerAuth,\n  ApiOperation,\n  ApiResponse,\n  ApiTags,\n} from '@nestjs/swagger';\nimport { CreateCommonNameDto } from './dto/create-common-name.dto';\nimport {\n  CommonNameDto,\n  CommonNameQueryDto,\n  UpdateCommonNameDto,\n} from './dto/common-name.dto';\nimport { AuthGuard } from '@nestjs/passport';\n\n@ApiBearerAuth()\n@UseGuards(AuthGuard('jwt'))\n@ApiTags('Common Names')\n@Controller('common-names')\nexport class CommonNamesController {\n  constructor(private readonly commonNameService: CommonNamesService) {}\n\n  @ApiOperation({ summary: 'Create an commonName' })\n  @ApiResponse({\n    status: HttpStatus.CREATED,\n    description: 'CommonName successfully created.',\n    type: CommonNameDto,\n  })\n  @ApiResponse({\n    status: HttpStatus.BAD_REQUEST,\n    description: 'Bad Request.',\n  })\n  @Post()\n  create(\n    @Body() createCommonNameDto: CreateCommonNameDto,\n  ): Promise {\n    return this.commonNameService.create(createCommonNameDto);\n  }\n\n  @ApiOperation({ summary: 'List CommonNames' })\n  @ApiResponse({\n    status: HttpStatus.OK,\n    description: 'CommonName list loaded.',\n    type: [CommonNameDto],\n  })\n  @ApiResponse({\n    status: HttpStatus.BAD_REQUEST,\n    description: 'Bad Request.',\n  })\n  @Get()\n  find(\n    @Query() commonNameQueryDto: CommonNameQueryDto,\n  ): Promise {\n    return this.commonNameService.find(commonNameQueryDto);\n  }\n\n  @ApiOperation({ summary: 'Get CommonName By Id' })\n  @ApiResponse({\n    status: HttpStatus.OK,\n    description: 'CommonName By Id Loaded.',\n    type: CommonNameDto,\n  })\n  @ApiResponse({\n    status: HttpStatus.BAD_REQUEST,\n    description: 'Bad Request.',\n  })\n  @Get(':commonNameId')\n  findById(\n    @Param('commonNameId') commonNameId: string,\n  ): Promise {\n    return this.commonNameService.findById(commonNameId);\n  }\n\n  @ApiOperation({ summary: 'Get CommonName By Id' })\n  @ApiResponse({\n    status: HttpStatus.OK,\n    description: 'CommonName Updated.',\n    type: CommonNameDto,\n  })\n  @ApiResponse({\n    status: HttpStatus.BAD_REQUEST,\n    description: 'Bad Request.',\n  })\n  @Put(':commonNameId')\n  update(\n    @Param('commonNameId') commonNameId: string,\n    @Body() updateCommonNameDto: UpdateCommonNameDto,\n  ): Promise {\n    return this.commonNameService.update(commonNameId, updateCommonNameDto);\n  }\n\n  @ApiOperation({ summary: 'Delete CommonName By Id' })\n  @ApiResponse({\n    status: HttpStatus.OK,\n    description: 'CommonName Deleted.',\n  })\n  @ApiResponse({\n    status: HttpStatus.BAD_REQUEST,\n    description: 'Bad Request.',\n  })\n  @Delete(':commonNameId')\n  deleteById(\n    @Param('commonNameId') commonNameId: string,\n  ): Promise {\n    return this.commonNameService.delete(commonNameId);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/CommonNamesModule.html":{"url":"modules/CommonNamesModule.html","title":"module - CommonNamesModule","body":"\n                   \n\n\n\n\n    Modules\n    CommonNamesModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_CommonNamesModule\n\n\n\ncluster_CommonNamesModule_providers\n\n\n\n\nCommonNamesService\n\nCommonNamesService\n\n\n\nCommonNamesModule\n\nCommonNamesModule\n\nCommonNamesModule -->\n\nCommonNamesService->CommonNamesModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/modules/steroids/common-names/common-names.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            CommonNamesService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            CommonNamesController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { CommonName, CommonNameSchema } from './common-name.schema';\nimport { CommonNamesService } from './common-names.service';\nimport { CommonNamesController } from './common-names.controller';\nimport { MongooseModule } from '@nestjs/mongoose';\n\n@Module({\n  imports: [\n    MongooseModule.forFeature([\n      { name: CommonName.name, schema: CommonNameSchema },\n    ]),\n  ],\n  controllers: [CommonNamesController],\n  providers: [CommonNamesService],\n})\nexport class CommonNamesModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CommonNamesService.html":{"url":"injectables/CommonNamesService.html","title":"injectable - CommonNamesService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  CommonNamesService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/steroids/common-names/common-names.service.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            CrudService\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                dtoClass\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                onModuleInit\n                            \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                delete\n                            \n                            \n                                    Async\n                                find\n                            \n                            \n                                    Async\n                                findById\n                            \n                            \n                                    Async\n                                findOne\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(commonNameModel: Model)\n                    \n                \n                        \n                            \n                                Defined in src/modules/steroids/common-names/common-names.service.ts:23\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        commonNameModel\n                                                  \n                                                        \n                                                                        Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        onModuleInit\n                        \n                    \n                \n            \n            \n                \n                        \n                    onModuleInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/steroids/common-names/common-names.service.ts:31\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(createArticleDto: CreateDto)\n                \n            \n\n\n                    \n                        \n                            Inherited from         CrudService\n\n                        \n                    \n                    \n                        \n                                Defined in         CrudService:20\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createArticleDto\n                                            \n                                                        CreateDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        delete\n                        \n                    \n                \n            \n            \n                \n                        \n                    delete(_id: string)\n                \n            \n\n\n                    \n                        \n                            Inherited from         CrudService\n\n                        \n                    \n                    \n                        \n                                Defined in         CrudService:93\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                _id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        find\n                        \n                    \n                \n            \n            \n                \n                        \n                    find(queryDto: QueryDTO)\n                \n            \n\n\n                    \n                        \n                            Inherited from         CrudService\n\n                        \n                    \n                    \n                        \n                                Defined in         CrudService:33\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                queryDto\n                                            \n                                                        QueryDTO\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findById\n                        \n                    \n                \n            \n            \n                \n                        \n                    findById(_id: string)\n                \n            \n\n\n                    \n                        \n                            Inherited from         CrudService\n\n                        \n                    \n                    \n                        \n                                Defined in         CrudService:44\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                _id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(queryDto: QueryDTO)\n                \n            \n\n\n                    \n                        \n                            Inherited from         CrudService\n\n                        \n                    \n                    \n                        \n                                Defined in         CrudService:60\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                queryDto\n                                            \n                                                        QueryDTO\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(_id: string, payload: UpdateDto)\n                \n            \n\n\n                    \n                        \n                            Inherited from         CrudService\n\n                        \n                    \n                    \n                        \n                                Defined in         CrudService:75\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                _id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                payload\n                                            \n                                                        UpdateDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        dtoClass\n                        \n                    \n                \n            \n                        \n                            \n                                Inherited from         CrudService\n\n                            \n                        \n                    \n                        \n                                Defined in         CrudService:12\n\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable, OnModuleInit } from '@nestjs/common';\nimport { CommonName, CommonNameDocument } from './common-name.schema';\nimport {\n  CommonNameDto,\n  CommonNameQueryDto,\n  UpdateCommonNameDto,\n} from './dto/common-name.dto';\nimport { CreateCommonNameDto } from './dto/create-common-name.dto';\nimport { InjectModel } from '@nestjs/mongoose';\nimport { Model } from 'mongoose';\nimport { CrudService } from 'src/@base/generics/crud-generic';\nimport commonNames from './base-common-names';\n\n@Injectable()\nexport class CommonNamesService\n  extends CrudService\n  implements OnModuleInit\n{\n  constructor(\n    @InjectModel(CommonName.name)\n    readonly commonNameModel: Model,\n  ) {\n    super(commonNameModel, CommonNameDto);\n  }\n\n  async onModuleInit() {\n    const count = await this.commonNameModel.countDocuments();\n    if (count === 0) {\n      const commonNamesDtos = commonNames.map((name) => ({ name }));\n      await this.commonNameModel.insertMany(commonNamesDtos);\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateArticleDto.html":{"url":"classes/CreateArticleDto.html","title":"class - CreateArticleDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateArticleDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/articles/dto/create-article.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                content\n                            \n                            \n                                    \n                                title\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        content\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @StringField({minLength: 1, maxLength: 100, swagger: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/articles/dto/create-article.dto.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @StringField({minLength: 1, maxLength: 50, swagger: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/articles/dto/create-article.dto.ts:5\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { StringField } from 'src/@common/decorators/field.decorators';\n\nexport class CreateArticleDto {\n  @StringField({ minLength: 1, maxLength: 50, swagger: true })\n  title: string;\n\n  @StringField({ minLength: 1, maxLength: 100, swagger: true })\n  content: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateCategoryDto.html":{"url":"classes/CreateCategoryDto.html","title":"class - CreateCategoryDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateCategoryDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/categories/dto/create-category.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                content\n                            \n                            \n                                    \n                                title\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        content\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @StringField({minLength: 1, maxLength: 100, swagger: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/categories/dto/create-category.dto.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @StringField({minLength: 1, maxLength: 50, swagger: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/categories/dto/create-category.dto.ts:5\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { StringField } from 'src/@common/decorators/field.decorators';\n\nexport class CreateCategoryDto {\n  @StringField({ minLength: 1, maxLength: 50, swagger: true })\n  title: string;\n\n  @StringField({ minLength: 1, maxLength: 100, swagger: true })\n  content: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateCommentDto.html":{"url":"classes/CreateCommentDto.html","title":"class - CreateCommentDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateCommentDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/comments/dto/create-comment.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                content\n                            \n                            \n                                    \n                                referenceId\n                            \n                            \n                                    \n                                referenceType\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        content\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @StringField({minLength: 1, swagger: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/comments/dto/create-comment.dto.ts:5\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        referenceId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @StringField()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/comments/dto/create-comment.dto.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        referenceType\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @StringField({minLength: 1, maxLength: 100, swagger: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/comments/dto/create-comment.dto.ts:8\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { StringField } from 'src/@common/decorators/field.decorators';\n\nexport class CreateCommentDto {\n  @StringField({ minLength: 1, swagger: true })\n  content: string;\n\n  @StringField({ minLength: 1, maxLength: 100, swagger: true })\n  referenceType: string;\n\n  @StringField()\n  referenceId: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateCommonNameDto.html":{"url":"classes/CreateCommonNameDto.html","title":"class - CreateCommonNameDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateCommonNameDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/steroids/common-names/dto/create-common-name.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @StringField({minLength: 1, maxLength: 200, swagger: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/steroids/common-names/dto/create-common-name.dto.ts:5\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { StringField } from 'src/@common/decorators/field.decorators';\n\nexport class CreateCommonNameDto {\n  @StringField({ minLength: 1, maxLength: 200, swagger: true })\n  name: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateManufacturerDto.html":{"url":"classes/CreateManufacturerDto.html","title":"class - CreateManufacturerDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateManufacturerDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/steroids/manufacturers/dto/create-manufacturer.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @StringField({minLength: 1, maxLength: 50, swagger: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/steroids/manufacturers/dto/create-manufacturer.dto.ts:5\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { StringField } from 'src/@common/decorators/field.decorators';\n\nexport class CreateManufacturerDto {\n  @StringField({ minLength: 1, maxLength: 50, swagger: true })\n  name: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateReviewDto.html":{"url":"classes/CreateReviewDto.html","title":"class - CreateReviewDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateReviewDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/reviews/dto/create-review.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                content\n                            \n                            \n                                    \n                                title\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        content\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @StringField({minLength: 1, maxLength: 100, swagger: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/reviews/dto/create-review.dto.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @StringField({minLength: 1, maxLength: 50, swagger: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/reviews/dto/create-review.dto.ts:5\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { StringField } from 'src/@common/decorators/field.decorators';\n\nexport class CreateReviewDto {\n  @StringField({ minLength: 1, maxLength: 50, swagger: true })\n  title: string;\n\n  @StringField({ minLength: 1, maxLength: 100, swagger: true })\n  content: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateSourceDto.html":{"url":"classes/CreateSourceDto.html","title":"class - CreateSourceDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateSourceDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/sources/dto/create-source.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                sourceImage\n                            \n                            \n                                    \n                                url\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        sourceImage\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @StringField({swagger: true, each: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/sources/dto/create-source.dto.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        url\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @StringField({minLength: 1, maxLength: 100, swagger: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/sources/dto/create-source.dto.ts:5\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { StringField } from 'src/@common/decorators/field.decorators';\n\nexport class CreateSourceDto {\n  @StringField({ minLength: 1, maxLength: 100, swagger: true })\n  url: string;\n\n  @StringField({ swagger: true, each: true })\n  sourceImage: string[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateSteroidDto.html":{"url":"classes/CreateSteroidDto.html","title":"class - CreateSteroidDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateSteroidDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/steroids/steroids/dto/create-steroid.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                commonNameId\n                            \n                            \n                                    \n                                manufacturerId\n                            \n                            \n                                    \n                                name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        commonNameId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @StringField({swagger: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/steroids/steroids/dto/create-steroid.dto.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        manufacturerId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @StringField({swagger: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/steroids/steroids/dto/create-steroid.dto.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @StringField({swagger: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/steroids/steroids/dto/create-steroid.dto.ts:5\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { StringField } from 'src/@common/decorators/field.decorators';\n\nexport class CreateSteroidDto {\n  @StringField({ swagger: true })\n  name: string;\n\n  @StringField({ swagger: true })\n  commonNameId: string;\n\n  @StringField({ swagger: true })\n  manufacturerId: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateUserDto.html":{"url":"classes/CreateUserDto.html","title":"class - CreateUserDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateUserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/users/dto/create-user.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                aboutMe\n                            \n                            \n                                    \n                                    Optional\n                                avatar\n                            \n                            \n                                    \n                                birthDate\n                            \n                            \n                                    \n                                bodyFat\n                            \n                            \n                                    \n                                confirmPassword\n                            \n                            \n                                    \n                                email\n                            \n                            \n                                    \n                                height\n                            \n                            \n                                    \n                                password\n                            \n                            \n                                    \n                                    Optional\n                                phone\n                            \n                            \n                                    \n                                    Optional\n                                role\n                            \n                            \n                                    \n                                username\n                            \n                            \n                                    \n                                weight\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        aboutMe\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @StringField({swagger: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/users/dto/create-user.dto.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        avatar\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @StringFieldOptional({swagger: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/users/dto/create-user.dto.ts:42\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        birthDate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @DateField({swagger: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/users/dto/create-user.dto.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        bodyFat\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @NumberField({swagger: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/users/dto/create-user.dto.ts:39\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        confirmPassword\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PasswordField({swagger: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/users/dto/create-user.dto.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @EmailField({swagger: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/users/dto/create-user.dto.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        height\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @NumberField({swagger: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/users/dto/create-user.dto.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PasswordField({swagger: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/users/dto/create-user.dto.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        phone\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PhoneFieldOptional({swagger: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/users/dto/create-user.dto.ts:45\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        role\n                        \n                    \n                \n            \n                \n                    \n                        Type :         RoleType\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @EnumFieldOptional(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/users/dto/create-user.dto.ts:48\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        username\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @StringField({swagger: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/users/dto/create-user.dto.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        weight\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @NumberField({swagger: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/users/dto/create-user.dto.ts:33\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { RoleType } from '../types/user.types';\nimport {\n  DateField,\n  EmailField,\n  EnumFieldOptional,\n  NumberField,\n  PasswordField,\n  PhoneFieldOptional,\n  StringField,\n  StringFieldOptional,\n} from 'src/@common/decorators/field.decorators';\n\nexport class CreateUserDto {\n  @StringField({ swagger: true })\n  username: string;\n\n  @EmailField({ swagger: true })\n  email: string;\n\n  @PasswordField({ swagger: true })\n  password: string;\n\n  @PasswordField({ swagger: true })\n  confirmPassword: string;\n\n  @StringField({ swagger: true })\n  aboutMe: string;\n\n  @DateField({ swagger: true })\n  birthDate: Date;\n\n  @NumberField({ swagger: true })\n  weight: number;\n\n  @NumberField({ swagger: true })\n  height: number;\n\n  @NumberField({ swagger: true })\n  bodyFat: number;\n\n  @StringFieldOptional({ swagger: true })\n  avatar?: string;\n\n  @PhoneFieldOptional({ swagger: true })\n  phone?: string;\n\n  @EnumFieldOptional(() => RoleType)\n  role?: RoleType;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CrudService.html":{"url":"injectables/CrudService.html","title":"injectable - CrudService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  CrudService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/@base/generics/crud-generic.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                dtoClass\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                delete\n                            \n                            \n                                    Async\n                                find\n                            \n                            \n                                    Async\n                                findById\n                            \n                            \n                                    Async\n                                findOne\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \n                                Protected\n                        constructor(model, dtoClass)\n                    \n                \n                        \n                            \n                                Defined in src/@base/generics/crud-generic.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        model\n                                                  \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        dtoClass\n                                                  \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(createArticleDto: CreateDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/@base/generics/crud-generic.ts:20\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createArticleDto\n                                            \n                                                        CreateDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        delete\n                        \n                    \n                \n            \n            \n                \n                        \n                    delete(_id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/@base/generics/crud-generic.ts:93\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                _id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        find\n                        \n                    \n                \n            \n            \n                \n                        \n                    find(queryDto: QueryDTO)\n                \n            \n\n\n                    \n                        \n                            Defined in src/@base/generics/crud-generic.ts:33\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                queryDto\n                                            \n                                                        QueryDTO\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findById\n                        \n                    \n                \n            \n            \n                \n                        \n                    findById(_id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/@base/generics/crud-generic.ts:44\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                _id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(queryDto: QueryDTO)\n                \n            \n\n\n                    \n                        \n                            Defined in src/@base/generics/crud-generic.ts:60\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                queryDto\n                                            \n                                                        QueryDTO\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(_id: string, payload: UpdateDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/@base/generics/crud-generic.ts:75\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                _id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                payload\n                                            \n                                                        UpdateDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        dtoClass\n                        \n                    \n                \n            \n                    \n                        \n                                Defined in src/@base/generics/crud-generic.ts:12\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { HttpException, HttpStatus, Injectable } from '@nestjs/common';\nimport { plainToClass } from 'class-transformer';\nimport { getErrorMessage } from 'src/@common/utilities/mongodb-parser';\n\n@Injectable()\nexport abstract class CrudService {\n  private dtoClass: new (...args: any[]) => DTO;\n  protected constructor(\n    private readonly model,\n    dtoClass: new (...args: any[]) => DTO,\n  ) {\n    this.dtoClass = dtoClass;\n  }\n\n  async create(createArticleDto: CreateDto): Promise {\n    try {\n      const Repository = new this.model(createArticleDto);\n      const result = await Repository.save();\n      return plainToClass(this.dtoClass, result.toObject());\n    } catch (ex) {\n      throw new HttpException(\n        getErrorMessage(ex),\n        HttpStatus.UNPROCESSABLE_ENTITY,\n      );\n    }\n  }\n\n  async find(queryDto: QueryDTO): Promise {\n    const { skip, limit, populate, ...props } = queryDto;\n    const items = await this.model.find(props, null, {\n      skip,\n      limit,\n      populate: populate || [],\n    });\n\n    return items.map((it) => plainToClass(this.dtoClass, it.toObject()));\n  }\n\n  async findById(_id: string): Promise {\n    try {\n      const result = await this.model.findById(_id);\n\n      if (!result) {\n        throw new Error(`${this.model.modelName} not found`);\n      }\n      return plainToClass(this.dtoClass, result.toObject());\n    } catch (ex) {\n      throw new HttpException(\n        getErrorMessage(ex),\n        HttpStatus.UNPROCESSABLE_ENTITY,\n      );\n    }\n  }\n\n  async findOne(queryDto: QueryDTO): Promise {\n    try {\n      const article = await this.model.findOne(queryDto);\n      if (!article) {\n        throw new Error(`${this.model.modelName} not found`);\n      }\n      return plainToClass(this.dtoClass, article.toObject());\n    } catch (ex) {\n      throw new HttpException(\n        getErrorMessage(ex),\n        HttpStatus.UNPROCESSABLE_ENTITY,\n      );\n    }\n  }\n\n  async update(_id: string, payload: UpdateDto): Promise {\n    try {\n      const article = await this.model.findOneAndUpdate({ _id }, payload, {\n        new: true,\n      });\n      if (!article) {\n        throw new Error(`${this.model.modelName} not found`);\n      }\n\n      return plainToClass(this.dtoClass, article.toObject());\n    } catch (ex) {\n      throw new HttpException(\n        getErrorMessage(ex),\n        HttpStatus.UNPROCESSABLE_ENTITY,\n      );\n    }\n  }\n\n  async delete(_id: string): Promise {\n    const model = await this.model.deleteOne({ _id });\n\n    return {\n      success: model.acknowledged,\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/FileNotImageException.html":{"url":"classes/FileNotImageException.html","title":"class - FileNotImageException","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  FileNotImageException\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/@common/exceptions/file-not-image.exception.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        BadRequestException\n            \n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(error?: string)\n                    \n                \n                        \n                            \n                                Defined in src/@common/exceptions/file-not-image.exception.ts:3\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        error\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { BadRequestException } from '@nestjs/common';\n\nexport class FileNotImageException extends BadRequestException {\n  constructor(error?: string) {\n    super('error.fileNotImage', error);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GeneratorProvider.html":{"url":"classes/GeneratorProvider.html","title":"class - GeneratorProvider","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GeneratorProvider\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/@common/global-providers/generator.provider.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                fileName\n                            \n                            \n                                    Static\n                                generatePassword\n                            \n                            \n                                    Static\n                                generateRandomString\n                            \n                            \n                                    Static\n                                generateVerificationCode\n                            \n                            \n                                    Static\n                                getS3Key\n                            \n                            \n                                    Static\n                                getS3PublicUrl\n                            \n                            \n                                    Static\n                                uuid\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        fileName\n                        \n                    \n                \n            \n            \n                \n                        \n                    fileName(ext: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/@common/global-providers/generator.provider.ts:8\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                ext\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        generatePassword\n                        \n                    \n                \n            \n            \n                \n                        \n                    generatePassword()\n                \n            \n\n\n                    \n                        \n                            Defined in src/@common/global-providers/generator.provider.ts:40\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        generateRandomString\n                        \n                    \n                \n            \n            \n                \n                        \n                    generateRandomString(length: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/@common/global-providers/generator.provider.ts:60\n                        \n                    \n\n\n            \n                \n                        generate random string\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                length\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        generateVerificationCode\n                        \n                    \n                \n            \n            \n                \n                        \n                    generateVerificationCode()\n                \n            \n\n\n                    \n                        \n                            Defined in src/@common/global-providers/generator.provider.ts:36\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        getS3Key\n                        \n                    \n                \n            \n            \n                \n                        \n                    getS3Key(publicUrl: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/@common/global-providers/generator.provider.ts:20\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                publicUrl\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        getS3PublicUrl\n                        \n                    \n                \n            \n            \n                \n                        \n                    getS3PublicUrl(key: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/@common/global-providers/generator.provider.ts:12\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                key\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        uuid\n                        \n                    \n                \n            \n            \n                \n                        \n                    uuid()\n                \n            \n\n\n                    \n                        \n                            Defined in src/@common/global-providers/generator.provider.ts:4\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { v1 as uuid } from 'uuid';\n\nexport class GeneratorProvider {\n  static uuid(): string {\n    return uuid();\n  }\n\n  static fileName(ext: string): string {\n    return GeneratorProvider.uuid() + '.' + ext;\n  }\n\n  static getS3PublicUrl(key: string): string {\n    if (!key) {\n      throw new TypeError('key is required');\n    }\n\n    return `https://s3.${process.env.AWS_S3_BUCKET_NAME_REGION}.amazonaws.com/${process.env.AWS_S3_BUCKET_NAME}/${key}`;\n  }\n\n  static getS3Key(publicUrl: string): string {\n    if (!publicUrl) {\n      throw new TypeError('key is required');\n    }\n\n    const exec = new RegExp(\n      `(?\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/GeneratorService.html":{"url":"injectables/GeneratorService.html","title":"injectable - GeneratorService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  GeneratorService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/shared/services/generator.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                fileName\n                            \n                            \n                                    Public\n                                uuid\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        fileName\n                        \n                    \n                \n            \n            \n                \n                        \n                    fileName(ext: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/shared/services/generator.service.ts:10\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                ext\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        uuid\n                        \n                    \n                \n            \n            \n                \n                        \n                    uuid()\n                \n            \n\n\n                    \n                        \n                            Defined in src/shared/services/generator.service.ts:6\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { v1 as uuid } from 'uuid';\n\n@Injectable()\nexport class GeneratorService {\n  public uuid(): string {\n    return uuid();\n  }\n\n  public fileName(ext: string): string {\n    return this.uuid() + '.' + ext;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IApiFile.html":{"url":"interfaces/IApiFile.html","title":"interface - IApiFile","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IApiFile\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/@common/interfaces/IApiFile.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            isArray\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        isArray\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        isArray:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface IApiFile {\n  name: string;\n  isArray?: boolean;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IFieldOptions.html":{"url":"interfaces/IFieldOptions.html","title":"interface - IFieldOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IFieldOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/@common/decorators/field.decorators.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            each\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            groups\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            nullable\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            swagger\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        each\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        each:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        groups\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        groups:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        nullable\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        nullable:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        swagger\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        swagger:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { applyDecorators } from '@nestjs/common';\nimport { ApiProperty, type ApiPropertyOptions } from '@nestjs/swagger';\nimport { Type } from 'class-transformer';\nimport {\n  IsBoolean,\n  IsDate,\n  IsDefined,\n  IsEmail,\n  IsEnum,\n  IsInt,\n  IsNumber,\n  IsPositive,\n  IsString,\n  IsUrl,\n  IsUUID,\n  Max,\n  MaxLength,\n  Min,\n  MinLength,\n  NotEquals,\n  ValidateNested,\n} from 'class-validator';\n\nimport { ApiEnumProperty, ApiUUIDProperty } from './property.decorators';\nimport {\n  PhoneNumberSerializer,\n  ToArray,\n  ToBoolean,\n  ToLowerCase,\n  ToUpperCase,\n} from './transform.decorators';\nimport {\n  IsNullable,\n  IsPassword,\n  IsPhoneNumber,\n  IsTmpKey as IsTemporaryKey,\n  IsUndefinable,\n} from './validator.decorators';\nimport { Constructor } from 'src/types';\n\ninterface IFieldOptions {\n  each?: boolean;\n  swagger?: boolean;\n  nullable?: boolean;\n  groups?: string[];\n}\n\ninterface INumberFieldOptions extends IFieldOptions {\n  min?: number;\n  max?: number;\n  int?: boolean;\n  isPositive?: boolean;\n}\n\ninterface IStringFieldOptions extends IFieldOptions {\n  minLength?: number;\n  maxLength?: number;\n  toLowerCase?: boolean;\n  toUpperCase?: boolean;\n}\n\ntype IClassFieldOptions = IFieldOptions;\ntype IBooleanFieldOptions = IFieldOptions;\ntype IEnumFieldOptions = IFieldOptions;\n\nexport function NumberField(\n  options: Omit & INumberFieldOptions = {},\n): PropertyDecorator {\n  const decorators = [Type(() => Number)];\n\n  if (options.nullable) {\n    decorators.push(IsNullable({ each: options.each }));\n  } else {\n    decorators.push(NotEquals(null, { each: options.each }));\n  }\n\n  if (options.swagger !== false) {\n    decorators.push(ApiProperty({ type: Number, ...options }));\n  }\n\n  if (options.each) {\n    decorators.push(ToArray());\n  }\n\n  if (options.int) {\n    decorators.push(IsInt({ each: options.each }));\n  } else {\n    decorators.push(IsNumber({}, { each: options.each }));\n  }\n\n  if (typeof options.min === 'number') {\n    decorators.push(Min(options.min, { each: options.each }));\n  }\n\n  if (typeof options.max === 'number') {\n    decorators.push(Max(options.max, { each: options.each }));\n  }\n\n  if (options.isPositive) {\n    decorators.push(IsPositive({ each: options.each }));\n  }\n\n  return applyDecorators(...decorators);\n}\n\nexport function NumberFieldOptional(\n  options: Omit &\n    INumberFieldOptions = {},\n): PropertyDecorator {\n  return applyDecorators(\n    IsUndefinable(),\n    NumberField({ required: false, ...options }),\n  );\n}\n\nexport function StringField(\n  options: Omit & IStringFieldOptions = {},\n): PropertyDecorator {\n  const decorators = [Type(() => String), IsString({ each: options.each })];\n\n  if (options.nullable) {\n    decorators.push(IsNullable({ each: options.each }));\n  } else {\n    decorators.push(NotEquals(null, { each: options.each }));\n  }\n\n  if (options.swagger !== false) {\n    decorators.push(\n      ApiProperty({ type: String, ...options, isArray: options.each }),\n    );\n  }\n\n  const minLength = options.minLength || 1;\n\n  decorators.push(MinLength(minLength, { each: options.each }));\n\n  if (options.maxLength) {\n    decorators.push(MaxLength(options.maxLength, { each: options.each }));\n  }\n\n  if (options.toLowerCase) {\n    decorators.push(ToLowerCase());\n  }\n\n  if (options.toUpperCase) {\n    decorators.push(ToUpperCase());\n  }\n\n  return applyDecorators(...decorators);\n}\n\nexport function StringFieldOptional(\n  options: Omit &\n    IStringFieldOptions = {},\n): PropertyDecorator {\n  return applyDecorators(\n    IsUndefinable(),\n    StringField({ required: false, ...options }),\n  );\n}\n\nexport function PasswordField(\n  options: Omit &\n    IStringFieldOptions = {},\n): PropertyDecorator {\n  const decorators = [StringField({ ...options, minLength: 6 }), IsPassword()];\n\n  if (options.nullable) {\n    decorators.push(IsNullable());\n  } else {\n    decorators.push(NotEquals(null));\n  }\n\n  return applyDecorators(...decorators);\n}\n\nexport function PasswordFieldOptional(\n  options: Omit &\n    IStringFieldOptions = {},\n): PropertyDecorator {\n  return applyDecorators(\n    IsUndefinable(),\n    PasswordField({ required: false, ...options }),\n  );\n}\n\nexport function BooleanField(\n  options: Omit & IBooleanFieldOptions = {},\n): PropertyDecorator {\n  const decorators = [ToBoolean(), IsBoolean()];\n\n  if (options.nullable) {\n    decorators.push(IsNullable());\n  } else {\n    decorators.push(NotEquals(null));\n  }\n\n  if (options.swagger !== false) {\n    decorators.push(ApiProperty({ type: Boolean, ...options }));\n  }\n\n  return applyDecorators(...decorators);\n}\n\nexport function BooleanFieldOptional(\n  options: Omit &\n    IBooleanFieldOptions = {},\n): PropertyDecorator {\n  return applyDecorators(\n    IsUndefinable(),\n    BooleanField({ required: false, ...options }),\n  );\n}\n\nexport function TmpKeyField(\n  options: Omit & IStringFieldOptions = {},\n): PropertyDecorator {\n  const decorators = [\n    StringField(options),\n    IsTemporaryKey({ each: options.each }),\n  ];\n\n  if (options.nullable) {\n    decorators.push(IsNullable());\n  } else {\n    decorators.push(NotEquals(null));\n  }\n\n  if (options.swagger !== false) {\n    decorators.push(\n      ApiProperty({ type: String, ...options, isArray: options.each }),\n    );\n  }\n\n  return applyDecorators(...decorators);\n}\n\nexport function TmpKeyFieldOptional(\n  options: Omit &\n    IStringFieldOptions = {},\n): PropertyDecorator {\n  return applyDecorators(\n    IsUndefinable(),\n    TmpKeyField({ required: false, ...options }),\n  );\n}\n\n// eslint-disable-next-line @typescript-eslint/ban-types\nexport function EnumField(\n  getEnum: () => TEnum,\n  options: Omit &\n    IEnumFieldOptions = {},\n): PropertyDecorator {\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any,@typescript-eslint/ban-types\n  const enumValue = getEnum();\n  const decorators = [IsEnum(enumValue, { each: options.each })];\n\n  if (options.nullable) {\n    decorators.push(IsNullable());\n  } else {\n    decorators.push(NotEquals(null));\n  }\n\n  if (options.each) {\n    decorators.push(ToArray());\n  }\n\n  if (options.swagger !== false) {\n    decorators.push(\n      ApiEnumProperty(getEnum, { ...options, isArray: options.each }),\n    );\n  }\n\n  return applyDecorators(...decorators);\n}\n\n// eslint-disable-next-line @typescript-eslint/ban-types\nexport function ClassField(\n  getClass: () => TClass,\n  options: Omit & IClassFieldOptions = {},\n): PropertyDecorator {\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  const classValue = getClass();\n\n  const decorators = [\n    Type(() => classValue),\n    ValidateNested({ each: options.each }),\n  ];\n\n  if (options.required !== false) {\n    decorators.push(IsDefined());\n  }\n\n  if (options.nullable) {\n    decorators.push(IsNullable());\n  } else {\n    decorators.push(NotEquals(null));\n  }\n\n  if (options.swagger !== false) {\n    decorators.push(\n      ApiProperty({\n        type: () => classValue,\n        ...options,\n      }),\n    );\n  }\n\n  // if (options.each) {\n  //   decorators.push(ToArray());\n  // }\n\n  return applyDecorators(...decorators);\n}\n\n// eslint-disable-next-line @typescript-eslint/ban-types\nexport function EnumFieldOptional(\n  getEnum: () => TEnum,\n  options: Omit &\n    IEnumFieldOptions = {},\n): PropertyDecorator {\n  return applyDecorators(\n    IsUndefinable(),\n    EnumField(getEnum, { required: false, ...options }),\n  );\n}\n\n// eslint-disable-next-line @typescript-eslint/ban-types\nexport function ClassFieldOptional(\n  getClass: () => TClass,\n  options: Omit &\n    IClassFieldOptions = {},\n): PropertyDecorator {\n  return applyDecorators(\n    IsUndefinable(),\n    ClassField(getClass, { required: false, ...options }),\n  );\n}\n\nexport function EmailField(\n  options: Omit & IStringFieldOptions = {},\n): PropertyDecorator {\n  const decorators = [\n    IsEmail(),\n    StringField({ toLowerCase: true, ...options }),\n  ];\n\n  if (options.nullable) {\n    decorators.push(IsNullable());\n  } else {\n    decorators.push(NotEquals(null));\n  }\n\n  if (options.swagger !== false) {\n    decorators.push(ApiProperty({ type: String, ...options }));\n  }\n\n  return applyDecorators(...decorators);\n}\n\nexport function EmailFieldOptional(\n  options: Omit & IStringFieldOptions = {},\n): PropertyDecorator {\n  return applyDecorators(\n    IsUndefinable(),\n    EmailField({ required: false, ...options }),\n  );\n}\n\nexport function PhoneField(\n  options: Omit & IFieldOptions = {},\n): PropertyDecorator {\n  const decorators = [IsPhoneNumber(), PhoneNumberSerializer()];\n\n  if (options.nullable) {\n    decorators.push(IsNullable());\n  } else {\n    decorators.push(NotEquals(null));\n  }\n\n  if (options.swagger !== false) {\n    decorators.push(ApiProperty({ type: String, ...options }));\n  }\n\n  return applyDecorators(...decorators);\n}\n\nexport function PhoneFieldOptional(\n  options: Omit & IFieldOptions = {},\n): PropertyDecorator {\n  return applyDecorators(\n    IsUndefinable(),\n    PhoneField({ required: false, ...options }),\n  );\n}\n\nexport function UUIDField(\n  options: Omit &\n    IFieldOptions = {},\n): PropertyDecorator {\n  const decorators = [Type(() => String), IsUUID('4', { each: options.each })];\n\n  if (options.nullable) {\n    decorators.push(IsNullable());\n  } else {\n    decorators.push(NotEquals(null));\n  }\n\n  if (options.swagger !== false) {\n    decorators.push(ApiUUIDProperty(options));\n  }\n\n  if (options.each) {\n    decorators.push(ToArray());\n  }\n\n  return applyDecorators(...decorators);\n}\n\nexport function UUIDFieldOptional(\n  options: Omit &\n    IFieldOptions = {},\n): PropertyDecorator {\n  return applyDecorators(\n    IsUndefinable(),\n    UUIDField({ required: false, ...options }),\n  );\n}\n\nexport function URLField(\n  options: Omit & IStringFieldOptions = {},\n): PropertyDecorator {\n  const decorators = [StringField(options), IsUrl({}, { each: true })];\n\n  if (options.nullable) {\n    decorators.push(IsNullable({ each: options.each }));\n  } else {\n    decorators.push(NotEquals(null, { each: options.each }));\n  }\n\n  return applyDecorators(...decorators);\n}\n\nexport function URLFieldOptional(\n  options: Omit & IStringFieldOptions = {},\n): PropertyDecorator {\n  return applyDecorators(\n    IsUndefinable(),\n    URLField({ required: false, ...options }),\n  );\n}\n\nexport function DateField(\n  options: Omit & IFieldOptions = {},\n): PropertyDecorator {\n  const decorators = [Type(() => Date), IsDate()];\n\n  if (options.nullable) {\n    decorators.push(IsNullable());\n  } else {\n    decorators.push(NotEquals(null));\n  }\n\n  if (options.swagger !== false) {\n    decorators.push(ApiProperty({ type: Date, ...options }));\n  }\n\n  return applyDecorators(...decorators);\n}\n\nexport function DateFieldOptional(\n  options: Omit & IFieldOptions = {},\n): PropertyDecorator {\n  return applyDecorators(\n    IsUndefinable(),\n    DateField({ ...options, required: false }),\n  );\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IFile.html":{"url":"interfaces/IFile.html","title":"interface - IFile","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IFile\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/@common/interfaces/IFile.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            buffer\n                                        \n                                \n                                \n                                        \n                                            encoding\n                                        \n                                \n                                \n                                        \n                                            fieldname\n                                        \n                                \n                                \n                                        \n                                            mimetype\n                                        \n                                \n                                \n                                        \n                                            originalname\n                                        \n                                \n                                \n                                        \n                                            size\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        buffer\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        buffer:     Buffer\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Buffer\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        encoding\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        encoding:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        fieldname\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        fieldname:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        mimetype\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        mimetype:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        originalname\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        originalname:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        size\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        size:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface IFile {\n  encoding: string;\n  buffer: Buffer;\n  fieldname: string;\n  mimetype: string;\n  originalname: string;\n  size: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/INumberFieldOptions.html":{"url":"interfaces/INumberFieldOptions.html","title":"interface - INumberFieldOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  INumberFieldOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/@common/decorators/field.decorators.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            IFieldOptions\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            int\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            isPositive\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            max\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            min\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        int\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        int:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        isPositive\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        isPositive:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        max\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        max:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        min\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        min:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { applyDecorators } from '@nestjs/common';\nimport { ApiProperty, type ApiPropertyOptions } from '@nestjs/swagger';\nimport { Type } from 'class-transformer';\nimport {\n  IsBoolean,\n  IsDate,\n  IsDefined,\n  IsEmail,\n  IsEnum,\n  IsInt,\n  IsNumber,\n  IsPositive,\n  IsString,\n  IsUrl,\n  IsUUID,\n  Max,\n  MaxLength,\n  Min,\n  MinLength,\n  NotEquals,\n  ValidateNested,\n} from 'class-validator';\n\nimport { ApiEnumProperty, ApiUUIDProperty } from './property.decorators';\nimport {\n  PhoneNumberSerializer,\n  ToArray,\n  ToBoolean,\n  ToLowerCase,\n  ToUpperCase,\n} from './transform.decorators';\nimport {\n  IsNullable,\n  IsPassword,\n  IsPhoneNumber,\n  IsTmpKey as IsTemporaryKey,\n  IsUndefinable,\n} from './validator.decorators';\nimport { Constructor } from 'src/types';\n\ninterface IFieldOptions {\n  each?: boolean;\n  swagger?: boolean;\n  nullable?: boolean;\n  groups?: string[];\n}\n\ninterface INumberFieldOptions extends IFieldOptions {\n  min?: number;\n  max?: number;\n  int?: boolean;\n  isPositive?: boolean;\n}\n\ninterface IStringFieldOptions extends IFieldOptions {\n  minLength?: number;\n  maxLength?: number;\n  toLowerCase?: boolean;\n  toUpperCase?: boolean;\n}\n\ntype IClassFieldOptions = IFieldOptions;\ntype IBooleanFieldOptions = IFieldOptions;\ntype IEnumFieldOptions = IFieldOptions;\n\nexport function NumberField(\n  options: Omit & INumberFieldOptions = {},\n): PropertyDecorator {\n  const decorators = [Type(() => Number)];\n\n  if (options.nullable) {\n    decorators.push(IsNullable({ each: options.each }));\n  } else {\n    decorators.push(NotEquals(null, { each: options.each }));\n  }\n\n  if (options.swagger !== false) {\n    decorators.push(ApiProperty({ type: Number, ...options }));\n  }\n\n  if (options.each) {\n    decorators.push(ToArray());\n  }\n\n  if (options.int) {\n    decorators.push(IsInt({ each: options.each }));\n  } else {\n    decorators.push(IsNumber({}, { each: options.each }));\n  }\n\n  if (typeof options.min === 'number') {\n    decorators.push(Min(options.min, { each: options.each }));\n  }\n\n  if (typeof options.max === 'number') {\n    decorators.push(Max(options.max, { each: options.each }));\n  }\n\n  if (options.isPositive) {\n    decorators.push(IsPositive({ each: options.each }));\n  }\n\n  return applyDecorators(...decorators);\n}\n\nexport function NumberFieldOptional(\n  options: Omit &\n    INumberFieldOptions = {},\n): PropertyDecorator {\n  return applyDecorators(\n    IsUndefinable(),\n    NumberField({ required: false, ...options }),\n  );\n}\n\nexport function StringField(\n  options: Omit & IStringFieldOptions = {},\n): PropertyDecorator {\n  const decorators = [Type(() => String), IsString({ each: options.each })];\n\n  if (options.nullable) {\n    decorators.push(IsNullable({ each: options.each }));\n  } else {\n    decorators.push(NotEquals(null, { each: options.each }));\n  }\n\n  if (options.swagger !== false) {\n    decorators.push(\n      ApiProperty({ type: String, ...options, isArray: options.each }),\n    );\n  }\n\n  const minLength = options.minLength || 1;\n\n  decorators.push(MinLength(minLength, { each: options.each }));\n\n  if (options.maxLength) {\n    decorators.push(MaxLength(options.maxLength, { each: options.each }));\n  }\n\n  if (options.toLowerCase) {\n    decorators.push(ToLowerCase());\n  }\n\n  if (options.toUpperCase) {\n    decorators.push(ToUpperCase());\n  }\n\n  return applyDecorators(...decorators);\n}\n\nexport function StringFieldOptional(\n  options: Omit &\n    IStringFieldOptions = {},\n): PropertyDecorator {\n  return applyDecorators(\n    IsUndefinable(),\n    StringField({ required: false, ...options }),\n  );\n}\n\nexport function PasswordField(\n  options: Omit &\n    IStringFieldOptions = {},\n): PropertyDecorator {\n  const decorators = [StringField({ ...options, minLength: 6 }), IsPassword()];\n\n  if (options.nullable) {\n    decorators.push(IsNullable());\n  } else {\n    decorators.push(NotEquals(null));\n  }\n\n  return applyDecorators(...decorators);\n}\n\nexport function PasswordFieldOptional(\n  options: Omit &\n    IStringFieldOptions = {},\n): PropertyDecorator {\n  return applyDecorators(\n    IsUndefinable(),\n    PasswordField({ required: false, ...options }),\n  );\n}\n\nexport function BooleanField(\n  options: Omit & IBooleanFieldOptions = {},\n): PropertyDecorator {\n  const decorators = [ToBoolean(), IsBoolean()];\n\n  if (options.nullable) {\n    decorators.push(IsNullable());\n  } else {\n    decorators.push(NotEquals(null));\n  }\n\n  if (options.swagger !== false) {\n    decorators.push(ApiProperty({ type: Boolean, ...options }));\n  }\n\n  return applyDecorators(...decorators);\n}\n\nexport function BooleanFieldOptional(\n  options: Omit &\n    IBooleanFieldOptions = {},\n): PropertyDecorator {\n  return applyDecorators(\n    IsUndefinable(),\n    BooleanField({ required: false, ...options }),\n  );\n}\n\nexport function TmpKeyField(\n  options: Omit & IStringFieldOptions = {},\n): PropertyDecorator {\n  const decorators = [\n    StringField(options),\n    IsTemporaryKey({ each: options.each }),\n  ];\n\n  if (options.nullable) {\n    decorators.push(IsNullable());\n  } else {\n    decorators.push(NotEquals(null));\n  }\n\n  if (options.swagger !== false) {\n    decorators.push(\n      ApiProperty({ type: String, ...options, isArray: options.each }),\n    );\n  }\n\n  return applyDecorators(...decorators);\n}\n\nexport function TmpKeyFieldOptional(\n  options: Omit &\n    IStringFieldOptions = {},\n): PropertyDecorator {\n  return applyDecorators(\n    IsUndefinable(),\n    TmpKeyField({ required: false, ...options }),\n  );\n}\n\n// eslint-disable-next-line @typescript-eslint/ban-types\nexport function EnumField(\n  getEnum: () => TEnum,\n  options: Omit &\n    IEnumFieldOptions = {},\n): PropertyDecorator {\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any,@typescript-eslint/ban-types\n  const enumValue = getEnum();\n  const decorators = [IsEnum(enumValue, { each: options.each })];\n\n  if (options.nullable) {\n    decorators.push(IsNullable());\n  } else {\n    decorators.push(NotEquals(null));\n  }\n\n  if (options.each) {\n    decorators.push(ToArray());\n  }\n\n  if (options.swagger !== false) {\n    decorators.push(\n      ApiEnumProperty(getEnum, { ...options, isArray: options.each }),\n    );\n  }\n\n  return applyDecorators(...decorators);\n}\n\n// eslint-disable-next-line @typescript-eslint/ban-types\nexport function ClassField(\n  getClass: () => TClass,\n  options: Omit & IClassFieldOptions = {},\n): PropertyDecorator {\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  const classValue = getClass();\n\n  const decorators = [\n    Type(() => classValue),\n    ValidateNested({ each: options.each }),\n  ];\n\n  if (options.required !== false) {\n    decorators.push(IsDefined());\n  }\n\n  if (options.nullable) {\n    decorators.push(IsNullable());\n  } else {\n    decorators.push(NotEquals(null));\n  }\n\n  if (options.swagger !== false) {\n    decorators.push(\n      ApiProperty({\n        type: () => classValue,\n        ...options,\n      }),\n    );\n  }\n\n  // if (options.each) {\n  //   decorators.push(ToArray());\n  // }\n\n  return applyDecorators(...decorators);\n}\n\n// eslint-disable-next-line @typescript-eslint/ban-types\nexport function EnumFieldOptional(\n  getEnum: () => TEnum,\n  options: Omit &\n    IEnumFieldOptions = {},\n): PropertyDecorator {\n  return applyDecorators(\n    IsUndefinable(),\n    EnumField(getEnum, { required: false, ...options }),\n  );\n}\n\n// eslint-disable-next-line @typescript-eslint/ban-types\nexport function ClassFieldOptional(\n  getClass: () => TClass,\n  options: Omit &\n    IClassFieldOptions = {},\n): PropertyDecorator {\n  return applyDecorators(\n    IsUndefinable(),\n    ClassField(getClass, { required: false, ...options }),\n  );\n}\n\nexport function EmailField(\n  options: Omit & IStringFieldOptions = {},\n): PropertyDecorator {\n  const decorators = [\n    IsEmail(),\n    StringField({ toLowerCase: true, ...options }),\n  ];\n\n  if (options.nullable) {\n    decorators.push(IsNullable());\n  } else {\n    decorators.push(NotEquals(null));\n  }\n\n  if (options.swagger !== false) {\n    decorators.push(ApiProperty({ type: String, ...options }));\n  }\n\n  return applyDecorators(...decorators);\n}\n\nexport function EmailFieldOptional(\n  options: Omit & IStringFieldOptions = {},\n): PropertyDecorator {\n  return applyDecorators(\n    IsUndefinable(),\n    EmailField({ required: false, ...options }),\n  );\n}\n\nexport function PhoneField(\n  options: Omit & IFieldOptions = {},\n): PropertyDecorator {\n  const decorators = [IsPhoneNumber(), PhoneNumberSerializer()];\n\n  if (options.nullable) {\n    decorators.push(IsNullable());\n  } else {\n    decorators.push(NotEquals(null));\n  }\n\n  if (options.swagger !== false) {\n    decorators.push(ApiProperty({ type: String, ...options }));\n  }\n\n  return applyDecorators(...decorators);\n}\n\nexport function PhoneFieldOptional(\n  options: Omit & IFieldOptions = {},\n): PropertyDecorator {\n  return applyDecorators(\n    IsUndefinable(),\n    PhoneField({ required: false, ...options }),\n  );\n}\n\nexport function UUIDField(\n  options: Omit &\n    IFieldOptions = {},\n): PropertyDecorator {\n  const decorators = [Type(() => String), IsUUID('4', { each: options.each })];\n\n  if (options.nullable) {\n    decorators.push(IsNullable());\n  } else {\n    decorators.push(NotEquals(null));\n  }\n\n  if (options.swagger !== false) {\n    decorators.push(ApiUUIDProperty(options));\n  }\n\n  if (options.each) {\n    decorators.push(ToArray());\n  }\n\n  return applyDecorators(...decorators);\n}\n\nexport function UUIDFieldOptional(\n  options: Omit &\n    IFieldOptions = {},\n): PropertyDecorator {\n  return applyDecorators(\n    IsUndefinable(),\n    UUIDField({ required: false, ...options }),\n  );\n}\n\nexport function URLField(\n  options: Omit & IStringFieldOptions = {},\n): PropertyDecorator {\n  const decorators = [StringField(options), IsUrl({}, { each: true })];\n\n  if (options.nullable) {\n    decorators.push(IsNullable({ each: options.each }));\n  } else {\n    decorators.push(NotEquals(null, { each: options.each }));\n  }\n\n  return applyDecorators(...decorators);\n}\n\nexport function URLFieldOptional(\n  options: Omit & IStringFieldOptions = {},\n): PropertyDecorator {\n  return applyDecorators(\n    IsUndefinable(),\n    URLField({ required: false, ...options }),\n  );\n}\n\nexport function DateField(\n  options: Omit & IFieldOptions = {},\n): PropertyDecorator {\n  const decorators = [Type(() => Date), IsDate()];\n\n  if (options.nullable) {\n    decorators.push(IsNullable());\n  } else {\n    decorators.push(NotEquals(null));\n  }\n\n  if (options.swagger !== false) {\n    decorators.push(ApiProperty({ type: Date, ...options }));\n  }\n\n  return applyDecorators(...decorators);\n}\n\nexport function DateFieldOptional(\n  options: Omit & IFieldOptions = {},\n): PropertyDecorator {\n  return applyDecorators(\n    IsUndefinable(),\n    DateField({ ...options, required: false }),\n  );\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IStringFieldOptions.html":{"url":"interfaces/IStringFieldOptions.html","title":"interface - IStringFieldOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IStringFieldOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/@common/decorators/field.decorators.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            IFieldOptions\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            maxLength\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            minLength\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            toLowerCase\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            toUpperCase\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        maxLength\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        maxLength:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        minLength\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        minLength:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        toLowerCase\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        toLowerCase:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        toUpperCase\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        toUpperCase:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { applyDecorators } from '@nestjs/common';\nimport { ApiProperty, type ApiPropertyOptions } from '@nestjs/swagger';\nimport { Type } from 'class-transformer';\nimport {\n  IsBoolean,\n  IsDate,\n  IsDefined,\n  IsEmail,\n  IsEnum,\n  IsInt,\n  IsNumber,\n  IsPositive,\n  IsString,\n  IsUrl,\n  IsUUID,\n  Max,\n  MaxLength,\n  Min,\n  MinLength,\n  NotEquals,\n  ValidateNested,\n} from 'class-validator';\n\nimport { ApiEnumProperty, ApiUUIDProperty } from './property.decorators';\nimport {\n  PhoneNumberSerializer,\n  ToArray,\n  ToBoolean,\n  ToLowerCase,\n  ToUpperCase,\n} from './transform.decorators';\nimport {\n  IsNullable,\n  IsPassword,\n  IsPhoneNumber,\n  IsTmpKey as IsTemporaryKey,\n  IsUndefinable,\n} from './validator.decorators';\nimport { Constructor } from 'src/types';\n\ninterface IFieldOptions {\n  each?: boolean;\n  swagger?: boolean;\n  nullable?: boolean;\n  groups?: string[];\n}\n\ninterface INumberFieldOptions extends IFieldOptions {\n  min?: number;\n  max?: number;\n  int?: boolean;\n  isPositive?: boolean;\n}\n\ninterface IStringFieldOptions extends IFieldOptions {\n  minLength?: number;\n  maxLength?: number;\n  toLowerCase?: boolean;\n  toUpperCase?: boolean;\n}\n\ntype IClassFieldOptions = IFieldOptions;\ntype IBooleanFieldOptions = IFieldOptions;\ntype IEnumFieldOptions = IFieldOptions;\n\nexport function NumberField(\n  options: Omit & INumberFieldOptions = {},\n): PropertyDecorator {\n  const decorators = [Type(() => Number)];\n\n  if (options.nullable) {\n    decorators.push(IsNullable({ each: options.each }));\n  } else {\n    decorators.push(NotEquals(null, { each: options.each }));\n  }\n\n  if (options.swagger !== false) {\n    decorators.push(ApiProperty({ type: Number, ...options }));\n  }\n\n  if (options.each) {\n    decorators.push(ToArray());\n  }\n\n  if (options.int) {\n    decorators.push(IsInt({ each: options.each }));\n  } else {\n    decorators.push(IsNumber({}, { each: options.each }));\n  }\n\n  if (typeof options.min === 'number') {\n    decorators.push(Min(options.min, { each: options.each }));\n  }\n\n  if (typeof options.max === 'number') {\n    decorators.push(Max(options.max, { each: options.each }));\n  }\n\n  if (options.isPositive) {\n    decorators.push(IsPositive({ each: options.each }));\n  }\n\n  return applyDecorators(...decorators);\n}\n\nexport function NumberFieldOptional(\n  options: Omit &\n    INumberFieldOptions = {},\n): PropertyDecorator {\n  return applyDecorators(\n    IsUndefinable(),\n    NumberField({ required: false, ...options }),\n  );\n}\n\nexport function StringField(\n  options: Omit & IStringFieldOptions = {},\n): PropertyDecorator {\n  const decorators = [Type(() => String), IsString({ each: options.each })];\n\n  if (options.nullable) {\n    decorators.push(IsNullable({ each: options.each }));\n  } else {\n    decorators.push(NotEquals(null, { each: options.each }));\n  }\n\n  if (options.swagger !== false) {\n    decorators.push(\n      ApiProperty({ type: String, ...options, isArray: options.each }),\n    );\n  }\n\n  const minLength = options.minLength || 1;\n\n  decorators.push(MinLength(minLength, { each: options.each }));\n\n  if (options.maxLength) {\n    decorators.push(MaxLength(options.maxLength, { each: options.each }));\n  }\n\n  if (options.toLowerCase) {\n    decorators.push(ToLowerCase());\n  }\n\n  if (options.toUpperCase) {\n    decorators.push(ToUpperCase());\n  }\n\n  return applyDecorators(...decorators);\n}\n\nexport function StringFieldOptional(\n  options: Omit &\n    IStringFieldOptions = {},\n): PropertyDecorator {\n  return applyDecorators(\n    IsUndefinable(),\n    StringField({ required: false, ...options }),\n  );\n}\n\nexport function PasswordField(\n  options: Omit &\n    IStringFieldOptions = {},\n): PropertyDecorator {\n  const decorators = [StringField({ ...options, minLength: 6 }), IsPassword()];\n\n  if (options.nullable) {\n    decorators.push(IsNullable());\n  } else {\n    decorators.push(NotEquals(null));\n  }\n\n  return applyDecorators(...decorators);\n}\n\nexport function PasswordFieldOptional(\n  options: Omit &\n    IStringFieldOptions = {},\n): PropertyDecorator {\n  return applyDecorators(\n    IsUndefinable(),\n    PasswordField({ required: false, ...options }),\n  );\n}\n\nexport function BooleanField(\n  options: Omit & IBooleanFieldOptions = {},\n): PropertyDecorator {\n  const decorators = [ToBoolean(), IsBoolean()];\n\n  if (options.nullable) {\n    decorators.push(IsNullable());\n  } else {\n    decorators.push(NotEquals(null));\n  }\n\n  if (options.swagger !== false) {\n    decorators.push(ApiProperty({ type: Boolean, ...options }));\n  }\n\n  return applyDecorators(...decorators);\n}\n\nexport function BooleanFieldOptional(\n  options: Omit &\n    IBooleanFieldOptions = {},\n): PropertyDecorator {\n  return applyDecorators(\n    IsUndefinable(),\n    BooleanField({ required: false, ...options }),\n  );\n}\n\nexport function TmpKeyField(\n  options: Omit & IStringFieldOptions = {},\n): PropertyDecorator {\n  const decorators = [\n    StringField(options),\n    IsTemporaryKey({ each: options.each }),\n  ];\n\n  if (options.nullable) {\n    decorators.push(IsNullable());\n  } else {\n    decorators.push(NotEquals(null));\n  }\n\n  if (options.swagger !== false) {\n    decorators.push(\n      ApiProperty({ type: String, ...options, isArray: options.each }),\n    );\n  }\n\n  return applyDecorators(...decorators);\n}\n\nexport function TmpKeyFieldOptional(\n  options: Omit &\n    IStringFieldOptions = {},\n): PropertyDecorator {\n  return applyDecorators(\n    IsUndefinable(),\n    TmpKeyField({ required: false, ...options }),\n  );\n}\n\n// eslint-disable-next-line @typescript-eslint/ban-types\nexport function EnumField(\n  getEnum: () => TEnum,\n  options: Omit &\n    IEnumFieldOptions = {},\n): PropertyDecorator {\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any,@typescript-eslint/ban-types\n  const enumValue = getEnum();\n  const decorators = [IsEnum(enumValue, { each: options.each })];\n\n  if (options.nullable) {\n    decorators.push(IsNullable());\n  } else {\n    decorators.push(NotEquals(null));\n  }\n\n  if (options.each) {\n    decorators.push(ToArray());\n  }\n\n  if (options.swagger !== false) {\n    decorators.push(\n      ApiEnumProperty(getEnum, { ...options, isArray: options.each }),\n    );\n  }\n\n  return applyDecorators(...decorators);\n}\n\n// eslint-disable-next-line @typescript-eslint/ban-types\nexport function ClassField(\n  getClass: () => TClass,\n  options: Omit & IClassFieldOptions = {},\n): PropertyDecorator {\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  const classValue = getClass();\n\n  const decorators = [\n    Type(() => classValue),\n    ValidateNested({ each: options.each }),\n  ];\n\n  if (options.required !== false) {\n    decorators.push(IsDefined());\n  }\n\n  if (options.nullable) {\n    decorators.push(IsNullable());\n  } else {\n    decorators.push(NotEquals(null));\n  }\n\n  if (options.swagger !== false) {\n    decorators.push(\n      ApiProperty({\n        type: () => classValue,\n        ...options,\n      }),\n    );\n  }\n\n  // if (options.each) {\n  //   decorators.push(ToArray());\n  // }\n\n  return applyDecorators(...decorators);\n}\n\n// eslint-disable-next-line @typescript-eslint/ban-types\nexport function EnumFieldOptional(\n  getEnum: () => TEnum,\n  options: Omit &\n    IEnumFieldOptions = {},\n): PropertyDecorator {\n  return applyDecorators(\n    IsUndefinable(),\n    EnumField(getEnum, { required: false, ...options }),\n  );\n}\n\n// eslint-disable-next-line @typescript-eslint/ban-types\nexport function ClassFieldOptional(\n  getClass: () => TClass,\n  options: Omit &\n    IClassFieldOptions = {},\n): PropertyDecorator {\n  return applyDecorators(\n    IsUndefinable(),\n    ClassField(getClass, { required: false, ...options }),\n  );\n}\n\nexport function EmailField(\n  options: Omit & IStringFieldOptions = {},\n): PropertyDecorator {\n  const decorators = [\n    IsEmail(),\n    StringField({ toLowerCase: true, ...options }),\n  ];\n\n  if (options.nullable) {\n    decorators.push(IsNullable());\n  } else {\n    decorators.push(NotEquals(null));\n  }\n\n  if (options.swagger !== false) {\n    decorators.push(ApiProperty({ type: String, ...options }));\n  }\n\n  return applyDecorators(...decorators);\n}\n\nexport function EmailFieldOptional(\n  options: Omit & IStringFieldOptions = {},\n): PropertyDecorator {\n  return applyDecorators(\n    IsUndefinable(),\n    EmailField({ required: false, ...options }),\n  );\n}\n\nexport function PhoneField(\n  options: Omit & IFieldOptions = {},\n): PropertyDecorator {\n  const decorators = [IsPhoneNumber(), PhoneNumberSerializer()];\n\n  if (options.nullable) {\n    decorators.push(IsNullable());\n  } else {\n    decorators.push(NotEquals(null));\n  }\n\n  if (options.swagger !== false) {\n    decorators.push(ApiProperty({ type: String, ...options }));\n  }\n\n  return applyDecorators(...decorators);\n}\n\nexport function PhoneFieldOptional(\n  options: Omit & IFieldOptions = {},\n): PropertyDecorator {\n  return applyDecorators(\n    IsUndefinable(),\n    PhoneField({ required: false, ...options }),\n  );\n}\n\nexport function UUIDField(\n  options: Omit &\n    IFieldOptions = {},\n): PropertyDecorator {\n  const decorators = [Type(() => String), IsUUID('4', { each: options.each })];\n\n  if (options.nullable) {\n    decorators.push(IsNullable());\n  } else {\n    decorators.push(NotEquals(null));\n  }\n\n  if (options.swagger !== false) {\n    decorators.push(ApiUUIDProperty(options));\n  }\n\n  if (options.each) {\n    decorators.push(ToArray());\n  }\n\n  return applyDecorators(...decorators);\n}\n\nexport function UUIDFieldOptional(\n  options: Omit &\n    IFieldOptions = {},\n): PropertyDecorator {\n  return applyDecorators(\n    IsUndefinable(),\n    UUIDField({ required: false, ...options }),\n  );\n}\n\nexport function URLField(\n  options: Omit & IStringFieldOptions = {},\n): PropertyDecorator {\n  const decorators = [StringField(options), IsUrl({}, { each: true })];\n\n  if (options.nullable) {\n    decorators.push(IsNullable({ each: options.each }));\n  } else {\n    decorators.push(NotEquals(null, { each: options.each }));\n  }\n\n  return applyDecorators(...decorators);\n}\n\nexport function URLFieldOptional(\n  options: Omit & IStringFieldOptions = {},\n): PropertyDecorator {\n  return applyDecorators(\n    IsUndefinable(),\n    URLField({ required: false, ...options }),\n  );\n}\n\nexport function DateField(\n  options: Omit & IFieldOptions = {},\n): PropertyDecorator {\n  const decorators = [Type(() => Date), IsDate()];\n\n  if (options.nullable) {\n    decorators.push(IsNullable());\n  } else {\n    decorators.push(NotEquals(null));\n  }\n\n  if (options.swagger !== false) {\n    decorators.push(ApiProperty({ type: Date, ...options }));\n  }\n\n  return applyDecorators(...decorators);\n}\n\nexport function DateFieldOptional(\n  options: Omit & IFieldOptions = {},\n): PropertyDecorator {\n  return applyDecorators(\n    IsUndefinable(),\n    DateField({ ...options, required: false }),\n  );\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/JwtStrategy.html":{"url":"injectables/JwtStrategy.html","title":"injectable - JwtStrategy","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  JwtStrategy\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/authentication/strategies/jwt.strategy.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        PassportStrategy(Strategy)\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userService: UsersService, configService: ConfigService)\n                    \n                \n                        \n                            \n                                Defined in src/modules/authentication/strategies/jwt.strategy.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UsersService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        configService\n                                                  \n                                                        \n                                                                    ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        validate\n                        \n                    \n                \n            \n            \n                \n                        \n                    validate(args: literal type)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/authentication/strategies/jwt.strategy.ts:24\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                args\n                                            \n                                                        literal type\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, UnauthorizedException } from '@nestjs/common';\nimport { ConfigService } from '@nestjs/config';\nimport { PassportStrategy } from '@nestjs/passport';\nimport { ExtractJwt, Strategy } from 'passport-jwt';\nimport { JwtConfig } from 'src/@common/env-configuration/config.type';\nimport { TokenType } from 'src/app.constants';\nimport { UserDto } from 'src/modules/users/dto/user.dto';\nimport { RoleType } from 'src/modules/users/types/user.types';\nimport { UsersService } from 'src/modules/users/users.service';\n\n@Injectable()\nexport class JwtStrategy extends PassportStrategy(Strategy) {\n  constructor(\n    private readonly userService: UsersService,\n    private readonly configService: ConfigService,\n  ) {\n    const jwtConfig = configService.get('jwt');\n    super({\n      jwtFromRequest: ExtractJwt.fromAuthHeaderAsBearerToken(),\n      secretOrKey: jwtConfig.publicKey,\n    });\n  }\n\n  async validate(args: {\n    userId: string;\n    role: RoleType;\n    type: TokenType;\n  }): Promise {\n    if (args.type !== TokenType.ACCESS_TOKEN) {\n      throw new UnauthorizedException();\n    }\n\n    const user = await this.userService.findOne({\n      _id: args.userId,\n      role: args.role,\n    });\n\n    if (!user) {\n      throw new UnauthorizedException();\n    }\n\n    return user;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LoginPayloadDto.html":{"url":"classes/LoginPayloadDto.html","title":"class - LoginPayloadDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LoginPayloadDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/authentication/dto/login-payload.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                token\n                            \n                            \n                                    \n                                user\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(user: UserDto, token: TokenPayloadDto)\n                    \n                \n                        \n                            \n                                Defined in src/modules/authentication/dto/login-payload.dto.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        user\n                                                  \n                                                        \n                                                                        UserDto\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        token\n                                                  \n                                                        \n                                                                        TokenPayloadDto\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        token\n                        \n                    \n                \n            \n                \n                    \n                        Type :         TokenPayloadDto\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ClassField(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/authentication/dto/login-payload.dto.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        user\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UserDto\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ClassField(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/authentication/dto/login-payload.dto.ts:7\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { UserDto } from 'src/modules/users/dto/user.dto';\nimport { TokenPayloadDto } from './token-payload.dto';\nimport { ClassField } from 'src/@common/decorators/field.decorators';\n\nexport class LoginPayloadDto {\n  @ClassField(() => UserDto)\n  user: UserDto;\n\n  @ClassField(() => TokenPayloadDto)\n  token: TokenPayloadDto;\n\n  constructor(user: UserDto, token: TokenPayloadDto) {\n    this.user = user;\n    this.token = token;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Manufacturer.html":{"url":"classes/Manufacturer.html","title":"class - Manufacturer","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Manufacturer\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/steroids/manufacturers/manufacturer.schema.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                creator\n                            \n                            \n                                    \n                                name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        creator\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: ObjectId, ref: 'User'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/steroids/manufacturers/manufacturer.schema.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: String, required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/steroids/manufacturers/manufacturer.schema.ts:12\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\nimport * as mongoose from 'mongoose';\nimport { Base } from 'src/@base/entity/base.entity';\n\nexport type ManufacturerDocument = Manufacturer & mongoose.Document;\n\nconst ObjectId = mongoose.Schema.Types.ObjectId;\n\n@Schema({ autoCreate: true })\nexport class Manufacturer extends Base {\n  @Prop({ type: String, required: true })\n  name: string;\n\n  @Prop({ type: ObjectId, ref: 'User' })\n  creator: any;\n}\n\nexport const ManufacturerSchema = SchemaFactory.createForClass(Manufacturer);\n\nManufacturerSchema.pre('save', function (next) {\n  next();\n});\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ManufacturerDto.html":{"url":"classes/ManufacturerDto.html","title":"class - ManufacturerDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ManufacturerDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/steroids/manufacturers/dto/manufacturer.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            BaseDto\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                name\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                _id\n                            \n                            \n                                    \n                                createdAt\n                            \n                            \n                                    \n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @StringField({swagger: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/steroids/manufacturers/dto/manufacturer.dto.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@IsUUID()@IsOptional()@Transform(value => )\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseDto\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseDto:10\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseDto\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseDto:13\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseDto\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseDto:16\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiPropertyOptional, OmitType, PartialType } from '@nestjs/swagger';\nimport { BaseDto } from 'src/@base/dto/base.dto';\nimport {\n  NumberFieldOptional,\n  StringField,\n} from 'src/@common/decorators/field.decorators';\n\nexport class ManufacturerDto extends BaseDto {\n  @StringField({ swagger: true })\n  name: string;\n}\n\nexport class UpdateManufacturerDto extends PartialType(\n  OmitType(ManufacturerDto, ['createdAt', 'updatedAt', '_id'] as const),\n) {}\n\nexport class ManufacturerQueryDto extends PartialType(\n  OmitType(ManufacturerDto, ['createdAt', 'updatedAt'] as const),\n) {\n  @ApiPropertyOptional()\n  @NumberFieldOptional()\n  skip: number;\n\n  @ApiPropertyOptional()\n  @NumberFieldOptional()\n  limit: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ManufacturerQueryDto.html":{"url":"classes/ManufacturerQueryDto.html","title":"class - ManufacturerQueryDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ManufacturerQueryDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/steroids/manufacturers/dto/manufacturer.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        PartialType(\n  OmitType(ManufacturerDto, ['createdAt', 'updatedAt'] as const),\n)\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                limit\n                            \n                            \n                                    \n                                    \n                                skip\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        limit\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional()@NumberFieldOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/steroids/manufacturers/dto/manufacturer.dto.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        skip\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional()@NumberFieldOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/steroids/manufacturers/dto/manufacturer.dto.ts:22\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiPropertyOptional, OmitType, PartialType } from '@nestjs/swagger';\nimport { BaseDto } from 'src/@base/dto/base.dto';\nimport {\n  NumberFieldOptional,\n  StringField,\n} from 'src/@common/decorators/field.decorators';\n\nexport class ManufacturerDto extends BaseDto {\n  @StringField({ swagger: true })\n  name: string;\n}\n\nexport class UpdateManufacturerDto extends PartialType(\n  OmitType(ManufacturerDto, ['createdAt', 'updatedAt', '_id'] as const),\n) {}\n\nexport class ManufacturerQueryDto extends PartialType(\n  OmitType(ManufacturerDto, ['createdAt', 'updatedAt'] as const),\n) {\n  @ApiPropertyOptional()\n  @NumberFieldOptional()\n  skip: number;\n\n  @ApiPropertyOptional()\n  @NumberFieldOptional()\n  limit: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/ManufacturersController.html":{"url":"controllers/ManufacturersController.html","title":"controller - ManufacturersController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  ManufacturersController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/steroids/manufacturers/manufacturers.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                manufacturers\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    \n                                create\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                deleteById\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                find\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                findById\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(createManufacturerDto: CreateManufacturerDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiOperation({summary: 'Create an manufacturer'})@ApiResponse({status: undefined, description: 'Manufacturer successfully created.', type: ManufacturerDto})@ApiResponse({status: undefined, description: 'Bad Request.'})@Post()\n                \n            \n\n                    \n                        \n                            Defined in src/modules/steroids/manufacturers/manufacturers.controller.ts:46\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createManufacturerDto\n                                            \n                                                            CreateManufacturerDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                        deleteById\n                        \n                    \n                \n            \n            \n                \n                        \n                    deleteById(manufacturerId: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiOperation({summary: 'Delete Manufacturer By Id'})@ApiResponse({status: undefined, description: 'Manufacturer Deleted.'})@ApiResponse({status: undefined, description: 'Bad Request.'})@Delete(':manufacturerId')\n                \n            \n\n                    \n                        \n                            Defined in src/modules/steroids/manufacturers/manufacturers.controller.ts:117\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                manufacturerId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                        find\n                        \n                    \n                \n            \n            \n                \n                        \n                    find(manufacturerQueryDto: ManufacturerQueryDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiOperation({summary: 'List Manufacturers'})@ApiResponse({status: undefined, description: 'Manufacturer list loaded.', type: undefined})@ApiResponse({status: undefined, description: 'Bad Request.'})@Get()\n                \n            \n\n                    \n                        \n                            Defined in src/modules/steroids/manufacturers/manufacturers.controller.ts:63\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                manufacturerQueryDto\n                                            \n                                                            ManufacturerQueryDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                        findById\n                        \n                    \n                \n            \n            \n                \n                        \n                    findById(manufacturerId: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiOperation({summary: 'Get Manufacturer By Id'})@ApiResponse({status: undefined, description: 'Manufacturer By Id Loaded.', type: ManufacturerDto})@ApiResponse({status: undefined, description: 'Bad Request.'})@Get(':manufacturerId')\n                \n            \n\n                    \n                        \n                            Defined in src/modules/steroids/manufacturers/manufacturers.controller.ts:80\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                manufacturerId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(manufacturerId: string, updateManufacturerDto: UpdateManufacturerDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiOperation({summary: 'Get Manufacturer By Id'})@ApiResponse({status: undefined, description: 'Manufacturer Updated.', type: ManufacturerDto})@ApiResponse({status: undefined, description: 'Bad Request.'})@Put(':manufacturerId')\n                \n            \n\n                    \n                        \n                            Defined in src/modules/steroids/manufacturers/manufacturers.controller.ts:97\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                manufacturerId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updateManufacturerDto\n                                            \n                                                            UpdateManufacturerDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Controller,\n  Post,\n  Body,\n  HttpStatus,\n  Get,\n  Put,\n  Query,\n  Param,\n  Delete,\n  UseGuards,\n} from '@nestjs/common';\nimport { ManufacturersService } from './manufacturers.service';\nimport {\n  ApiBearerAuth,\n  ApiOperation,\n  ApiResponse,\n  ApiTags,\n} from '@nestjs/swagger';\nimport { CreateManufacturerDto } from './dto/create-manufacturer.dto';\nimport {\n  ManufacturerDto,\n  ManufacturerQueryDto,\n  UpdateManufacturerDto,\n} from './dto/manufacturer.dto';\nimport { AuthGuard } from '@nestjs/passport';\n\n@ApiBearerAuth()\n@UseGuards(AuthGuard('jwt'))\n@ApiTags('Manufacturers')\n@Controller('manufacturers')\nexport class ManufacturersController {\n  constructor(private readonly manufacturerService: ManufacturersService) {}\n\n  @ApiOperation({ summary: 'Create an manufacturer' })\n  @ApiResponse({\n    status: HttpStatus.CREATED,\n    description: 'Manufacturer successfully created.',\n    type: ManufacturerDto,\n  })\n  @ApiResponse({\n    status: HttpStatus.BAD_REQUEST,\n    description: 'Bad Request.',\n  })\n  @Post()\n  create(\n    @Body() createManufacturerDto: CreateManufacturerDto,\n  ): Promise {\n    return this.manufacturerService.create(createManufacturerDto);\n  }\n\n  @ApiOperation({ summary: 'List Manufacturers' })\n  @ApiResponse({\n    status: HttpStatus.OK,\n    description: 'Manufacturer list loaded.',\n    type: [ManufacturerDto],\n  })\n  @ApiResponse({\n    status: HttpStatus.BAD_REQUEST,\n    description: 'Bad Request.',\n  })\n  @Get()\n  find(\n    @Query() manufacturerQueryDto: ManufacturerQueryDto,\n  ): Promise {\n    return this.manufacturerService.find(manufacturerQueryDto);\n  }\n\n  @ApiOperation({ summary: 'Get Manufacturer By Id' })\n  @ApiResponse({\n    status: HttpStatus.OK,\n    description: 'Manufacturer By Id Loaded.',\n    type: ManufacturerDto,\n  })\n  @ApiResponse({\n    status: HttpStatus.BAD_REQUEST,\n    description: 'Bad Request.',\n  })\n  @Get(':manufacturerId')\n  findById(\n    @Param('manufacturerId') manufacturerId: string,\n  ): Promise {\n    return this.manufacturerService.findById(manufacturerId);\n  }\n\n  @ApiOperation({ summary: 'Get Manufacturer By Id' })\n  @ApiResponse({\n    status: HttpStatus.OK,\n    description: 'Manufacturer Updated.',\n    type: ManufacturerDto,\n  })\n  @ApiResponse({\n    status: HttpStatus.BAD_REQUEST,\n    description: 'Bad Request.',\n  })\n  @Put(':manufacturerId')\n  update(\n    @Param('manufacturerId') manufacturerId: string,\n    @Body() updateManufacturerDto: UpdateManufacturerDto,\n  ): Promise {\n    return this.manufacturerService.update(\n      manufacturerId,\n      updateManufacturerDto,\n    );\n  }\n\n  @ApiOperation({ summary: 'Delete Manufacturer By Id' })\n  @ApiResponse({\n    status: HttpStatus.OK,\n    description: 'Manufacturer Deleted.',\n  })\n  @ApiResponse({\n    status: HttpStatus.BAD_REQUEST,\n    description: 'Bad Request.',\n  })\n  @Delete(':manufacturerId')\n  deleteById(\n    @Param('manufacturerId') manufacturerId: string,\n  ): Promise {\n    return this.manufacturerService.delete(manufacturerId);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ManufacturersModule.html":{"url":"modules/ManufacturersModule.html","title":"module - ManufacturersModule","body":"\n                   \n\n\n\n\n    Modules\n    ManufacturersModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ManufacturersModule\n\n\n\ncluster_ManufacturersModule_providers\n\n\n\n\nManufacturersService\n\nManufacturersService\n\n\n\nManufacturersModule\n\nManufacturersModule\n\nManufacturersModule -->\n\nManufacturersService->ManufacturersModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/modules/steroids/manufacturers/manufacturers.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            ManufacturersService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            ManufacturersController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { Manufacturer, ManufacturerSchema } from './manufacturer.schema';\nimport { ManufacturersService } from './manufacturers.service';\nimport { ManufacturersController } from './manufacturers.controller';\nimport { MongooseModule } from '@nestjs/mongoose';\n\n@Module({\n  imports: [\n    MongooseModule.forFeature([\n      { name: Manufacturer.name, schema: ManufacturerSchema },\n    ]),\n  ],\n  controllers: [ManufacturersController],\n  providers: [ManufacturersService],\n})\nexport class ManufacturersModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ManufacturersService.html":{"url":"injectables/ManufacturersService.html","title":"injectable - ManufacturersService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ManufacturersService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/steroids/manufacturers/manufacturers.service.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            CrudService\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                dtoClass\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                onModuleInit\n                            \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                delete\n                            \n                            \n                                    Async\n                                find\n                            \n                            \n                                    Async\n                                findById\n                            \n                            \n                                    Async\n                                findOne\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(manufacturerModel: Model)\n                    \n                \n                        \n                            \n                                Defined in src/modules/steroids/manufacturers/manufacturers.service.ts:23\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        manufacturerModel\n                                                  \n                                                        \n                                                                        Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        onModuleInit\n                        \n                    \n                \n            \n            \n                \n                        \n                    onModuleInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/steroids/manufacturers/manufacturers.service.ts:31\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(createArticleDto: CreateDto)\n                \n            \n\n\n                    \n                        \n                            Inherited from         CrudService\n\n                        \n                    \n                    \n                        \n                                Defined in         CrudService:20\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createArticleDto\n                                            \n                                                        CreateDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        delete\n                        \n                    \n                \n            \n            \n                \n                        \n                    delete(_id: string)\n                \n            \n\n\n                    \n                        \n                            Inherited from         CrudService\n\n                        \n                    \n                    \n                        \n                                Defined in         CrudService:93\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                _id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        find\n                        \n                    \n                \n            \n            \n                \n                        \n                    find(queryDto: QueryDTO)\n                \n            \n\n\n                    \n                        \n                            Inherited from         CrudService\n\n                        \n                    \n                    \n                        \n                                Defined in         CrudService:33\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                queryDto\n                                            \n                                                        QueryDTO\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findById\n                        \n                    \n                \n            \n            \n                \n                        \n                    findById(_id: string)\n                \n            \n\n\n                    \n                        \n                            Inherited from         CrudService\n\n                        \n                    \n                    \n                        \n                                Defined in         CrudService:44\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                _id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(queryDto: QueryDTO)\n                \n            \n\n\n                    \n                        \n                            Inherited from         CrudService\n\n                        \n                    \n                    \n                        \n                                Defined in         CrudService:60\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                queryDto\n                                            \n                                                        QueryDTO\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(_id: string, payload: UpdateDto)\n                \n            \n\n\n                    \n                        \n                            Inherited from         CrudService\n\n                        \n                    \n                    \n                        \n                                Defined in         CrudService:75\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                _id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                payload\n                                            \n                                                        UpdateDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        dtoClass\n                        \n                    \n                \n            \n                        \n                            \n                                Inherited from         CrudService\n\n                            \n                        \n                    \n                        \n                                Defined in         CrudService:12\n\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable, OnModuleInit } from '@nestjs/common';\nimport { Manufacturer, ManufacturerDocument } from './manufacturer.schema';\nimport {\n  ManufacturerDto,\n  ManufacturerQueryDto,\n  UpdateManufacturerDto,\n} from './dto/manufacturer.dto';\nimport { CreateManufacturerDto } from './dto/create-manufacturer.dto';\nimport { InjectModel } from '@nestjs/mongoose';\nimport { Model } from 'mongoose';\nimport { CrudService } from 'src/@base/generics/crud-generic';\nimport manufacturerNames from './base-manufacturer';\n\n@Injectable()\nexport class ManufacturersService\n  extends CrudService\n  implements OnModuleInit\n{\n  constructor(\n    @InjectModel(Manufacturer.name)\n    readonly manufacturerModel: Model,\n  ) {\n    super(manufacturerModel, ManufacturerDto);\n  }\n\n  async onModuleInit() {\n    const count = await this.manufacturerModel.countDocuments();\n    if (count === 0) {\n      const manufacturersDto = manufacturerNames.map((name) => ({ name }));\n      await this.manufacturerModel.insertMany(manufacturersDto);\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PaginationQueryDto.html":{"url":"classes/PaginationQueryDto.html","title":"class - PaginationQueryDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PaginationQueryDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/@base/dto/pagination-query.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    Optional\n                                limit\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                skip\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        limit\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional()@NumberFieldOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/@base/dto/pagination-query.dto.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        skip\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional()@NumberFieldOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/@base/dto/pagination-query.dto.ts:7\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiPropertyOptional } from '@nestjs/swagger';\nimport { NumberFieldOptional } from 'src/@common/decorators/field.decorators';\n\nexport class PaginationQueryDto {\n  @ApiPropertyOptional()\n  @NumberFieldOptional()\n  skip?: number;\n\n  @ApiPropertyOptional()\n  @NumberFieldOptional()\n  limit?: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Review.html":{"url":"classes/Review.html","title":"class - Review","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Review\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/reviews/review.schema.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                categoryId\n                            \n                            \n                                    \n                                creator\n                            \n                            \n                                    \n                                points\n                            \n                            \n                                    \n                                referenceId\n                            \n                            \n                                    \n                                referenceType\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        categoryId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: ObjectId, required: true, ref: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/reviews/review.schema.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        creator\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: ObjectId, ref: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/reviews/review.schema.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        points\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: String, required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/reviews/review.schema.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        referenceId\n                        \n                    \n                \n            \n                \n                    \n                        Type :     mongoose.Types.ObjectId\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: ObjectId, refPath: 'referenceType'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/reviews/review.schema.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        referenceType\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: String, required: true, enum: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/reviews/review.schema.ts:19\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\nimport * as mongoose from 'mongoose';\nimport { Base } from 'src/@base/entity/base.entity';\nimport { User } from 'src/modules/users/user.schema';\nimport { Source } from '../sources/source.schema';\nimport { Category } from '../categories/category.schema';\nimport { Steroid } from '../steroids/steroids/steroid.schema';\n\nexport type ReviewDocument = Review & mongoose.Document;\n\nconst ObjectId = mongoose.Schema.Types.ObjectId;\n\n@Schema({ autoCreate: true })\nexport class Review extends Base {\n  @Prop({ type: String, required: true })\n  points: string;\n\n  @Prop({ type: String, required: true, enum: [Steroid.name, Source.name] })\n  referenceType: string;\n\n  @Prop({ type: ObjectId, refPath: 'referenceType' })\n  referenceId: mongoose.Types.ObjectId;\n\n  @Prop({ type: ObjectId, required: true, ref: Category.name })\n  categoryId: string;\n\n  @Prop({ type: ObjectId, ref: User.name })\n  creator: User;\n}\n\nexport const ReviewSchema = SchemaFactory.createForClass(Review);\n\nReviewSchema.pre('save', function (next) {\n  next();\n});\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ReviewDto.html":{"url":"classes/ReviewDto.html","title":"class - ReviewDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ReviewDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/reviews/dto/review.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            BaseDto\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                content\n                            \n                            \n                                    \n                                title\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                _id\n                            \n                            \n                                    \n                                createdAt\n                            \n                            \n                                    \n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        content\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @StringField({swagger: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/reviews/dto/review.dto.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @StringField({swagger: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/reviews/dto/review.dto.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@IsUUID()@IsOptional()@Transform(value => )\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseDto\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseDto:10\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseDto\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseDto:13\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseDto\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseDto:16\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiPropertyOptional, OmitType, PartialType } from '@nestjs/swagger';\nimport { BaseDto } from 'src/@base/dto/base.dto';\nimport {\n  NumberFieldOptional,\n  StringField,\n} from 'src/@common/decorators/field.decorators';\n\nexport class ReviewDto extends BaseDto {\n  @StringField({ swagger: true })\n  title: string;\n\n  @StringField({ swagger: true })\n  content: string;\n}\n\nexport class UpdateReviewDto extends PartialType(\n  OmitType(ReviewDto, ['createdAt', 'updatedAt', '_id'] as const),\n) {}\n\nexport class ReviewQueryDto extends PartialType(\n  OmitType(ReviewDto, ['createdAt', 'updatedAt'] as const),\n) {\n  @ApiPropertyOptional()\n  @NumberFieldOptional()\n  skip: number;\n\n  @ApiPropertyOptional()\n  @NumberFieldOptional()\n  limit: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ReviewQueryDto.html":{"url":"classes/ReviewQueryDto.html","title":"class - ReviewQueryDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ReviewQueryDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/reviews/dto/review.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        PartialType(\n  OmitType(ReviewDto, ['createdAt', 'updatedAt'] as const),\n)\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                limit\n                            \n                            \n                                    \n                                    \n                                skip\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        limit\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional()@NumberFieldOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/reviews/dto/review.dto.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        skip\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional()@NumberFieldOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/reviews/dto/review.dto.ts:25\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiPropertyOptional, OmitType, PartialType } from '@nestjs/swagger';\nimport { BaseDto } from 'src/@base/dto/base.dto';\nimport {\n  NumberFieldOptional,\n  StringField,\n} from 'src/@common/decorators/field.decorators';\n\nexport class ReviewDto extends BaseDto {\n  @StringField({ swagger: true })\n  title: string;\n\n  @StringField({ swagger: true })\n  content: string;\n}\n\nexport class UpdateReviewDto extends PartialType(\n  OmitType(ReviewDto, ['createdAt', 'updatedAt', '_id'] as const),\n) {}\n\nexport class ReviewQueryDto extends PartialType(\n  OmitType(ReviewDto, ['createdAt', 'updatedAt'] as const),\n) {\n  @ApiPropertyOptional()\n  @NumberFieldOptional()\n  skip: number;\n\n  @ApiPropertyOptional()\n  @NumberFieldOptional()\n  limit: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/ReviewsController.html":{"url":"controllers/ReviewsController.html","title":"controller - ReviewsController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  ReviewsController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/reviews/reviews.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                reviews\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    \n                                create\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                deleteById\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                find\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                findById\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(createReviewDto: CreateReviewDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiOperation({summary: 'Create a Review'})@ApiResponse({status: undefined, description: 'Review successfully created.', type: ReviewDto})@ApiResponse({status: undefined, description: 'Bad Request.'})@Post()\n                \n            \n\n                    \n                        \n                            Defined in src/modules/reviews/reviews.controller.ts:36\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createReviewDto\n                                            \n                                                            CreateReviewDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                        deleteById\n                        \n                    \n                \n            \n            \n                \n                        \n                    deleteById(reviewId: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiOperation({summary: 'Delete Review By Id'})@ApiResponse({status: undefined, description: 'Review Deleted.'})@ApiResponse({status: undefined, description: 'Bad Request.'})@Delete(':reviewId')\n                \n            \n\n                    \n                        \n                            Defined in src/modules/reviews/reviews.controller.ts:98\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                reviewId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                        find\n                        \n                    \n                \n            \n            \n                \n                        \n                    find(reviewQueryDto: ReviewQueryDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiOperation({summary: 'List Reviews'})@ApiResponse({status: undefined, description: 'Review list loaded.', type: undefined})@ApiResponse({status: undefined, description: 'Bad Request.'})@Get()\n                \n            \n\n                    \n                        \n                            Defined in src/modules/reviews/reviews.controller.ts:51\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                reviewQueryDto\n                                            \n                                                            ReviewQueryDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                        findById\n                        \n                    \n                \n            \n            \n                \n                        \n                    findById(reviewId: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiOperation({summary: 'Get Review By Id'})@ApiResponse({status: undefined, description: 'Review By Id Loaded.', type: ReviewDto})@ApiResponse({status: undefined, description: 'Bad Request.'})@Get(':reviewId')\n                \n            \n\n                    \n                        \n                            Defined in src/modules/reviews/reviews.controller.ts:66\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                reviewId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(reviewId: string, updateReviewDto: UpdateReviewDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiOperation({summary: 'Get Review By Id'})@ApiResponse({status: undefined, description: 'Review Updated.', type: ReviewDto})@ApiResponse({status: undefined, description: 'Bad Request.'})@Put(':reviewId')\n                \n            \n\n                    \n                        \n                            Defined in src/modules/reviews/reviews.controller.ts:81\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                reviewId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updateReviewDto\n                                            \n                                                            UpdateReviewDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Controller,\n  Post,\n  Body,\n  HttpStatus,\n  Get,\n  Put,\n  Query,\n  Param,\n  Delete,\n  UseGuards,\n} from '@nestjs/common';\nimport { ReviewsService } from './reviews.service';\nimport { ApiOperation, ApiResponse, ApiTags } from '@nestjs/swagger';\nimport { CreateReviewDto } from './dto/create-review.dto';\nimport { ReviewDto, ReviewQueryDto, UpdateReviewDto } from './dto/review.dto';\nimport { AuthGuard } from '@nestjs/passport';\n\n@UseGuards(AuthGuard('jwt'))\n@ApiTags('Reviews')\n@Controller('reviews')\nexport class ReviewsController {\n  constructor(private readonly reviewService: ReviewsService) {}\n\n  @ApiOperation({ summary: 'Create a Review' })\n  @ApiResponse({\n    status: HttpStatus.CREATED,\n    description: 'Review successfully created.',\n    type: ReviewDto,\n  })\n  @ApiResponse({\n    status: HttpStatus.BAD_REQUEST,\n    description: 'Bad Request.',\n  })\n  @Post()\n  create(@Body() createReviewDto: CreateReviewDto): Promise {\n    return this.reviewService.create(createReviewDto);\n  }\n\n  @ApiOperation({ summary: 'List Reviews' })\n  @ApiResponse({\n    status: HttpStatus.OK,\n    description: 'Review list loaded.',\n    type: [ReviewDto],\n  })\n  @ApiResponse({\n    status: HttpStatus.BAD_REQUEST,\n    description: 'Bad Request.',\n  })\n  @Get()\n  find(@Query() reviewQueryDto: ReviewQueryDto): Promise {\n    return this.reviewService.find(reviewQueryDto);\n  }\n\n  @ApiOperation({ summary: 'Get Review By Id' })\n  @ApiResponse({\n    status: HttpStatus.OK,\n    description: 'Review By Id Loaded.',\n    type: ReviewDto,\n  })\n  @ApiResponse({\n    status: HttpStatus.BAD_REQUEST,\n    description: 'Bad Request.',\n  })\n  @Get(':reviewId')\n  findById(@Param('reviewId') reviewId: string): Promise {\n    return this.reviewService.findById(reviewId);\n  }\n\n  @ApiOperation({ summary: 'Get Review By Id' })\n  @ApiResponse({\n    status: HttpStatus.OK,\n    description: 'Review Updated.',\n    type: ReviewDto,\n  })\n  @ApiResponse({\n    status: HttpStatus.BAD_REQUEST,\n    description: 'Bad Request.',\n  })\n  @Put(':reviewId')\n  update(\n    @Param('reviewId') reviewId: string,\n    @Body() updateReviewDto: UpdateReviewDto,\n  ): Promise {\n    return this.reviewService.update(reviewId, updateReviewDto);\n  }\n\n  @ApiOperation({ summary: 'Delete Review By Id' })\n  @ApiResponse({\n    status: HttpStatus.OK,\n    description: 'Review Deleted.',\n  })\n  @ApiResponse({\n    status: HttpStatus.BAD_REQUEST,\n    description: 'Bad Request.',\n  })\n  @Delete(':reviewId')\n  deleteById(@Param('reviewId') reviewId: string): Promise {\n    return this.reviewService.delete(reviewId);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ReviewsModule.html":{"url":"modules/ReviewsModule.html","title":"module - ReviewsModule","body":"\n                   \n\n\n\n\n    Modules\n    ReviewsModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ReviewsModule\n\n\n\ncluster_ReviewsModule_providers\n\n\n\n\nReviewsService\n\nReviewsService\n\n\n\nReviewsModule\n\nReviewsModule\n\nReviewsModule -->\n\nReviewsService->ReviewsModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/modules/reviews/reviews.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            ReviewsService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            ReviewsController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { Review, ReviewSchema } from './review.schema';\nimport { ReviewsService } from './reviews.service';\nimport { ReviewsController } from './reviews.controller';\nimport { MongooseModule } from '@nestjs/mongoose';\n\n@Module({\n  imports: [\n    MongooseModule.forFeature([{ name: Review.name, schema: ReviewSchema }]),\n  ],\n  controllers: [ReviewsController],\n  providers: [ReviewsService],\n})\nexport class ReviewsModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ReviewsService.html":{"url":"injectables/ReviewsService.html","title":"injectable - ReviewsService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ReviewsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/reviews/reviews.service.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            CrudService\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                dtoClass\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                delete\n                            \n                            \n                                    Async\n                                find\n                            \n                            \n                                    Async\n                                findById\n                            \n                            \n                                    Async\n                                findOne\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(reviewModel: Model)\n                    \n                \n                        \n                            \n                                Defined in src/modules/reviews/reviews.service.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        reviewModel\n                                                  \n                                                        \n                                                                        Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(createArticleDto: CreateDto)\n                \n            \n\n\n                    \n                        \n                            Inherited from         CrudService\n\n                        \n                    \n                    \n                        \n                                Defined in         CrudService:20\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createArticleDto\n                                            \n                                                        CreateDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        delete\n                        \n                    \n                \n            \n            \n                \n                        \n                    delete(_id: string)\n                \n            \n\n\n                    \n                        \n                            Inherited from         CrudService\n\n                        \n                    \n                    \n                        \n                                Defined in         CrudService:93\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                _id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        find\n                        \n                    \n                \n            \n            \n                \n                        \n                    find(queryDto: QueryDTO)\n                \n            \n\n\n                    \n                        \n                            Inherited from         CrudService\n\n                        \n                    \n                    \n                        \n                                Defined in         CrudService:33\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                queryDto\n                                            \n                                                        QueryDTO\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findById\n                        \n                    \n                \n            \n            \n                \n                        \n                    findById(_id: string)\n                \n            \n\n\n                    \n                        \n                            Inherited from         CrudService\n\n                        \n                    \n                    \n                        \n                                Defined in         CrudService:44\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                _id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(queryDto: QueryDTO)\n                \n            \n\n\n                    \n                        \n                            Inherited from         CrudService\n\n                        \n                    \n                    \n                        \n                                Defined in         CrudService:60\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                queryDto\n                                            \n                                                        QueryDTO\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(_id: string, payload: UpdateDto)\n                \n            \n\n\n                    \n                        \n                            Inherited from         CrudService\n\n                        \n                    \n                    \n                        \n                                Defined in         CrudService:75\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                _id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                payload\n                                            \n                                                        UpdateDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        dtoClass\n                        \n                    \n                \n            \n                        \n                            \n                                Inherited from         CrudService\n\n                            \n                        \n                    \n                        \n                                Defined in         CrudService:12\n\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { Review, ReviewDocument } from './review.schema';\nimport { ReviewDto, ReviewQueryDto, UpdateReviewDto } from './dto/review.dto';\nimport { CreateReviewDto } from './dto/create-review.dto';\nimport { InjectModel } from '@nestjs/mongoose';\nimport { Model } from 'mongoose';\nimport { CrudService } from 'src/@base/generics/crud-generic';\n\n@Injectable()\nexport class ReviewsService extends CrudService {\n  constructor(\n    @InjectModel(Review.name) readonly reviewModel: Model,\n  ) {\n    super(reviewModel, ReviewDto);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/SharedModule.html":{"url":"modules/SharedModule.html","title":"module - SharedModule","body":"\n                   \n\n\n\n\n    Modules\n    SharedModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_SharedModule\n\n\n\ncluster_SharedModule_exports\n\n\n\ncluster_SharedModule_providers\n\n\n\n\nGeneratorService \n\nGeneratorService \n\n\n\nValidatorService \n\nValidatorService \n\n\n\nSharedModule\n\nSharedModule\n\nGeneratorService  -->\n\nSharedModule->GeneratorService \n\n\n\nValidatorService  -->\n\nSharedModule->ValidatorService \n\n\n\n\n\nGeneratorService\n\nGeneratorService\n\nSharedModule -->\n\nGeneratorService->SharedModule\n\n\n\n\n\nValidatorService\n\nValidatorService\n\nSharedModule -->\n\nValidatorService->SharedModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/shared/shared.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            GeneratorService\n                        \n                        \n                            ValidatorService\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            GeneratorService\n                        \n                        \n                            ValidatorService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Global, Module, type Provider } from '@nestjs/common';\nimport { CqrsModule } from '@nestjs/cqrs';\n\nimport { GeneratorService } from './services/generator.service';\nimport { ValidatorService } from './services/validator.service';\n\nconst providers: Provider[] = [ValidatorService, GeneratorService];\n\n@Global()\n@Module({\n  providers,\n  imports: [CqrsModule],\n  exports: [...providers, CqrsModule],\n})\nexport class SharedModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Source.html":{"url":"classes/Source.html","title":"class - Source","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Source\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/sources/source.schema.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                creator\n                            \n                            \n                                    \n                                sourceImages\n                            \n                            \n                                    \n                                url\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        creator\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: ObjectId, ref: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/sources/source.schema.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        sourceImages\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: undefined, required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/sources/source.schema.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        url\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: String, required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/sources/source.schema.ts:13\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\nimport * as mongoose from 'mongoose';\nimport { Base } from 'src/@base/entity/base.entity';\nimport { User } from '../users/user.schema';\n\nexport type SourceDocument = Source & mongoose.Document;\n\nconst ObjectId = mongoose.Schema.Types.ObjectId;\n\n@Schema({ autoCreate: true })\nexport class Source extends Base {\n  @Prop({ type: String, required: true })\n  url: string;\n\n  @Prop({ type: [String], required: true })\n  sourceImages: string[];\n\n  @Prop({ type: ObjectId, ref: User.name })\n  creator: User;\n}\n\nexport const SourceSchema = SchemaFactory.createForClass(Source);\n\nSourceSchema.pre('save', function (next) {\n  next();\n});\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SourceDto.html":{"url":"classes/SourceDto.html","title":"class - SourceDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SourceDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/sources/dto/source.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            BaseDto\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                sourceImage\n                            \n                            \n                                    \n                                url\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                _id\n                            \n                            \n                                    \n                                createdAt\n                            \n                            \n                                    \n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        sourceImage\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @StringField({swagger: true, each: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/sources/dto/source.dto.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        url\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @StringField({swagger: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/sources/dto/source.dto.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@IsUUID()@IsOptional()@Transform(value => )\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseDto\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseDto:10\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseDto\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseDto:13\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseDto\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseDto:16\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiPropertyOptional, OmitType, PartialType } from '@nestjs/swagger';\nimport { BaseDto } from 'src/@base/dto/base.dto';\nimport {\n  NumberFieldOptional,\n  StringField,\n} from 'src/@common/decorators/field.decorators';\n\nexport class SourceDto extends BaseDto {\n  @StringField({ swagger: true })\n  url: string;\n\n  @StringField({ swagger: true, each: true })\n  sourceImage: string[];\n}\n\nexport class UpdateSourceDto extends PartialType(\n  OmitType(SourceDto, ['createdAt', 'updatedAt', '_id'] as const),\n) {}\n\nexport class SourceQueryDto extends PartialType(\n  OmitType(SourceDto, ['createdAt', 'updatedAt'] as const),\n) {\n  @ApiPropertyOptional()\n  @NumberFieldOptional()\n  skip: number;\n\n  @ApiPropertyOptional()\n  @NumberFieldOptional()\n  limit: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SourceQueryDto.html":{"url":"classes/SourceQueryDto.html","title":"class - SourceQueryDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SourceQueryDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/sources/dto/source.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        PartialType(\n  OmitType(SourceDto, ['createdAt', 'updatedAt'] as const),\n)\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                limit\n                            \n                            \n                                    \n                                    \n                                skip\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        limit\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional()@NumberFieldOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/sources/dto/source.dto.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        skip\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional()@NumberFieldOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/sources/dto/source.dto.ts:25\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiPropertyOptional, OmitType, PartialType } from '@nestjs/swagger';\nimport { BaseDto } from 'src/@base/dto/base.dto';\nimport {\n  NumberFieldOptional,\n  StringField,\n} from 'src/@common/decorators/field.decorators';\n\nexport class SourceDto extends BaseDto {\n  @StringField({ swagger: true })\n  url: string;\n\n  @StringField({ swagger: true, each: true })\n  sourceImage: string[];\n}\n\nexport class UpdateSourceDto extends PartialType(\n  OmitType(SourceDto, ['createdAt', 'updatedAt', '_id'] as const),\n) {}\n\nexport class SourceQueryDto extends PartialType(\n  OmitType(SourceDto, ['createdAt', 'updatedAt'] as const),\n) {\n  @ApiPropertyOptional()\n  @NumberFieldOptional()\n  skip: number;\n\n  @ApiPropertyOptional()\n  @NumberFieldOptional()\n  limit: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/SourcesController.html":{"url":"controllers/SourcesController.html","title":"controller - SourcesController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  SourcesController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/sources/sources.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                sources\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    \n                                create\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                deleteById\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                find\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                findById\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(createSourceDto: CreateSourceDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiOperation({summary: 'Create an source'})@ApiResponse({status: undefined, description: 'Source successfully created.', type: SourceDto})@ApiResponse({status: undefined, description: 'Bad Request.'})@Post()\n                \n            \n\n                    \n                        \n                            Defined in src/modules/sources/sources.controller.ts:36\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createSourceDto\n                                            \n                                                            CreateSourceDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                        deleteById\n                        \n                    \n                \n            \n            \n                \n                        \n                    deleteById(sourceId: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiOperation({summary: 'Delete Source By Id'})@ApiResponse({status: undefined, description: 'Source Deleted.'})@ApiResponse({status: undefined, description: 'Bad Request.'})@Delete(':sourceId')\n                \n            \n\n                    \n                        \n                            Defined in src/modules/sources/sources.controller.ts:98\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                sourceId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                        find\n                        \n                    \n                \n            \n            \n                \n                        \n                    find(sourceQueryDto: SourceQueryDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiOperation({summary: 'List Sources'})@ApiResponse({status: undefined, description: 'Source list loaded.', type: undefined})@ApiResponse({status: undefined, description: 'Bad Request.'})@Get()\n                \n            \n\n                    \n                        \n                            Defined in src/modules/sources/sources.controller.ts:51\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                sourceQueryDto\n                                            \n                                                            SourceQueryDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                        findById\n                        \n                    \n                \n            \n            \n                \n                        \n                    findById(sourceId: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiOperation({summary: 'Get Source By Id'})@ApiResponse({status: undefined, description: 'Source By Id Loaded.', type: SourceDto})@ApiResponse({status: undefined, description: 'Bad Request.'})@Get(':sourceId')\n                \n            \n\n                    \n                        \n                            Defined in src/modules/sources/sources.controller.ts:66\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                sourceId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(sourceId: string, updateSourceDto: UpdateSourceDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiOperation({summary: 'Get Source By Id'})@ApiResponse({status: undefined, description: 'Source Updated.', type: SourceDto})@ApiResponse({status: undefined, description: 'Bad Request.'})@Put(':sourceId')\n                \n            \n\n                    \n                        \n                            Defined in src/modules/sources/sources.controller.ts:81\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                sourceId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updateSourceDto\n                                            \n                                                            UpdateSourceDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Controller,\n  Post,\n  Body,\n  HttpStatus,\n  Get,\n  Put,\n  Query,\n  Param,\n  Delete,\n  UseGuards,\n} from '@nestjs/common';\nimport { SourcesService } from './sources.service';\nimport { ApiOperation, ApiResponse, ApiTags } from '@nestjs/swagger';\nimport { CreateSourceDto } from './dto/create-source.dto';\nimport { SourceDto, SourceQueryDto, UpdateSourceDto } from './dto/source.dto';\nimport { AuthGuard } from '@nestjs/passport';\n\n@UseGuards(AuthGuard('jwt'))\n@ApiTags('Sources')\n@Controller('sources')\nexport class SourcesController {\n  constructor(private readonly sourceService: SourcesService) {}\n\n  @ApiOperation({ summary: 'Create an source' })\n  @ApiResponse({\n    status: HttpStatus.CREATED,\n    description: 'Source successfully created.',\n    type: SourceDto,\n  })\n  @ApiResponse({\n    status: HttpStatus.BAD_REQUEST,\n    description: 'Bad Request.',\n  })\n  @Post()\n  create(@Body() createSourceDto: CreateSourceDto): Promise {\n    return this.sourceService.create(createSourceDto);\n  }\n\n  @ApiOperation({ summary: 'List Sources' })\n  @ApiResponse({\n    status: HttpStatus.OK,\n    description: 'Source list loaded.',\n    type: [SourceDto],\n  })\n  @ApiResponse({\n    status: HttpStatus.BAD_REQUEST,\n    description: 'Bad Request.',\n  })\n  @Get()\n  find(@Query() sourceQueryDto: SourceQueryDto): Promise {\n    return this.sourceService.find(sourceQueryDto);\n  }\n\n  @ApiOperation({ summary: 'Get Source By Id' })\n  @ApiResponse({\n    status: HttpStatus.OK,\n    description: 'Source By Id Loaded.',\n    type: SourceDto,\n  })\n  @ApiResponse({\n    status: HttpStatus.BAD_REQUEST,\n    description: 'Bad Request.',\n  })\n  @Get(':sourceId')\n  findById(@Param('sourceId') sourceId: string): Promise {\n    return this.sourceService.findById(sourceId);\n  }\n\n  @ApiOperation({ summary: 'Get Source By Id' })\n  @ApiResponse({\n    status: HttpStatus.OK,\n    description: 'Source Updated.',\n    type: SourceDto,\n  })\n  @ApiResponse({\n    status: HttpStatus.BAD_REQUEST,\n    description: 'Bad Request.',\n  })\n  @Put(':sourceId')\n  update(\n    @Param('sourceId') sourceId: string,\n    @Body() updateSourceDto: UpdateSourceDto,\n  ): Promise {\n    return this.sourceService.update(sourceId, updateSourceDto);\n  }\n\n  @ApiOperation({ summary: 'Delete Source By Id' })\n  @ApiResponse({\n    status: HttpStatus.OK,\n    description: 'Source Deleted.',\n  })\n  @ApiResponse({\n    status: HttpStatus.BAD_REQUEST,\n    description: 'Bad Request.',\n  })\n  @Delete(':sourceId')\n  deleteById(@Param('sourceId') sourceId: string): Promise {\n    return this.sourceService.delete(sourceId);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/SourcesModule.html":{"url":"modules/SourcesModule.html","title":"module - SourcesModule","body":"\n                   \n\n\n\n\n    Modules\n    SourcesModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_SourcesModule\n\n\n\ncluster_SourcesModule_providers\n\n\n\n\nSourcesService\n\nSourcesService\n\n\n\nSourcesModule\n\nSourcesModule\n\nSourcesModule -->\n\nSourcesService->SourcesModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/modules/sources/sources.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            SourcesService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            SourcesController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { Source, SourceSchema } from './source.schema';\nimport { SourcesService } from './sources.service';\nimport { SourcesController } from './sources.controller';\nimport { MongooseModule } from '@nestjs/mongoose';\n\n@Module({\n  imports: [\n    MongooseModule.forFeature([{ name: Source.name, schema: SourceSchema }]),\n  ],\n  controllers: [SourcesController],\n  providers: [SourcesService],\n})\nexport class SourcesModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SourcesService.html":{"url":"injectables/SourcesService.html","title":"injectable - SourcesService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  SourcesService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/sources/sources.service.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            CrudService\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                dtoClass\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                delete\n                            \n                            \n                                    Async\n                                find\n                            \n                            \n                                    Async\n                                findById\n                            \n                            \n                                    Async\n                                findOne\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(sourceModel: Model)\n                    \n                \n                        \n                            \n                                Defined in src/modules/sources/sources.service.ts:19\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        sourceModel\n                                                  \n                                                        \n                                                                        Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(createArticleDto: CreateDto)\n                \n            \n\n\n                    \n                        \n                            Inherited from         CrudService\n\n                        \n                    \n                    \n                        \n                                Defined in         CrudService:20\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createArticleDto\n                                            \n                                                        CreateDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        delete\n                        \n                    \n                \n            \n            \n                \n                        \n                    delete(_id: string)\n                \n            \n\n\n                    \n                        \n                            Inherited from         CrudService\n\n                        \n                    \n                    \n                        \n                                Defined in         CrudService:93\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                _id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        find\n                        \n                    \n                \n            \n            \n                \n                        \n                    find(queryDto: QueryDTO)\n                \n            \n\n\n                    \n                        \n                            Inherited from         CrudService\n\n                        \n                    \n                    \n                        \n                                Defined in         CrudService:33\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                queryDto\n                                            \n                                                        QueryDTO\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findById\n                        \n                    \n                \n            \n            \n                \n                        \n                    findById(_id: string)\n                \n            \n\n\n                    \n                        \n                            Inherited from         CrudService\n\n                        \n                    \n                    \n                        \n                                Defined in         CrudService:44\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                _id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(queryDto: QueryDTO)\n                \n            \n\n\n                    \n                        \n                            Inherited from         CrudService\n\n                        \n                    \n                    \n                        \n                                Defined in         CrudService:60\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                queryDto\n                                            \n                                                        QueryDTO\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(_id: string, payload: UpdateDto)\n                \n            \n\n\n                    \n                        \n                            Inherited from         CrudService\n\n                        \n                    \n                    \n                        \n                                Defined in         CrudService:75\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                _id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                payload\n                                            \n                                                        UpdateDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        dtoClass\n                        \n                    \n                \n            \n                        \n                            \n                                Inherited from         CrudService\n\n                            \n                        \n                    \n                        \n                                Defined in         CrudService:12\n\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { Source, SourceDocument } from './source.schema';\nimport {\n  SourceDto,\n  SourceQueryDto,\n  UpdateSourceDto,\n} from './dto/source.dto';\nimport { CreateSourceDto } from './dto/create-source.dto';\nimport { InjectModel } from '@nestjs/mongoose';\nimport { Model } from 'mongoose';\nimport { CrudService } from 'src/@base/generics/crud-generic';\n\n@Injectable()\nexport class SourcesService extends CrudService {\n  constructor(\n    @InjectModel(Source.name) readonly sourceModel: Model,\n  ) {\n    super(sourceModel, SourceDto);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Steroid.html":{"url":"classes/Steroid.html","title":"class - Steroid","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Steroid\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/steroids/steroids/steroid.schema.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                commonNameId\n                            \n                            \n                                    \n                                creator\n                            \n                            \n                                    \n                                manufacturerId\n                            \n                            \n                                    \n                                name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        commonNameId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: ObjectId, ref: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/steroids/steroids/steroid.schema.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        creator\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: ObjectId, ref: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/steroids/steroids/steroid.schema.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        manufacturerId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: ObjectId, ref: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/steroids/steroids/steroid.schema.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: String, required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/steroids/steroids/steroid.schema.ts:15\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\nimport * as mongoose from 'mongoose';\nimport { Base } from 'src/@base/entity/base.entity';\nimport { Manufacturer } from '../manufacturers/manufacturer.schema';\nimport { CommonName } from '../common-names/common-name.schema';\nimport { User } from 'src/modules/users/user.schema';\n\nexport type SteroidDocument = Steroid & mongoose.Document;\n\nconst ObjectId = mongoose.Schema.Types.ObjectId;\n\n@Schema({ autoCreate: true })\nexport class Steroid extends Base {\n  @Prop({ type: String, required: true })\n  name: string;\n\n  @Prop({ type: ObjectId, ref: CommonName.name })\n  commonNameId: string;\n\n  @Prop({ type: ObjectId, ref: Manufacturer.name })\n  manufacturerId: string;\n\n  @Prop({ type: ObjectId, ref: User.name })\n  creator: string;\n}\n\nexport const SteroidSchema = SchemaFactory.createForClass(Steroid);\n\nSteroidSchema.pre('save', function (next) {\n  next();\n});\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SteroidCommentsCountDto.html":{"url":"classes/SteroidCommentsCountDto.html","title":"class - SteroidCommentsCountDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SteroidCommentsCountDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/steroids/steroids/dto/steroid.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            BaseDto\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                commentCount\n                            \n                            \n                                    \n                                commonName\n                            \n                            \n                                    \n                                manufacturer\n                            \n                            \n                                    \n                                name\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                _id\n                            \n                            \n                                    \n                                createdAt\n                            \n                            \n                                    \n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        commentCount\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @NumberField()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/steroids/steroids/dto/steroid.dto.ts:52\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        commonName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         CommonNameDto\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ClassField(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/steroids/steroids/dto/steroid.dto.ts:46\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        manufacturer\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ManufacturerDto\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ClassField(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/steroids/steroids/dto/steroid.dto.ts:49\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @StringField({swagger: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/steroids/steroids/dto/steroid.dto.ts:43\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@IsUUID()@IsOptional()@Transform(value => )\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseDto\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseDto:10\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseDto\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseDto:13\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseDto\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseDto:16\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {\n  ApiProperty,\n  ApiPropertyOptional,\n  OmitType,\n  PartialType,\n} from '@nestjs/swagger';\nimport { BaseDto } from 'src/@base/dto/base.dto';\nimport {\n  ClassField,\n  NumberField,\n  NumberFieldOptional,\n  StringField,\n} from 'src/@common/decorators/field.decorators';\nimport { CommonNameDto } from '../../common-names/dto/common-name.dto';\nimport { Exclude, Expose, Transform, Type } from 'class-transformer';\nimport { ManufacturerDto } from '../../manufacturers/dto/manufacturer.dto';\n\nexport class SteroidDto extends BaseDto {\n  @StringField({ swagger: true })\n  name: string;\n\n  @Expose()\n  @ApiProperty({ type: () => CommonNameDto })\n  @Transform(({ obj }) => obj.commonNameId, { toClassOnly: true })\n  @Type(() => CommonNameDto)\n  commonName: CommonNameDto;\n\n  @Expose()\n  @ApiProperty({ type: () => ManufacturerDto })\n  @Transform(({ obj }) => obj.manufacturerId, { toClassOnly: true })\n  @Type(() => ManufacturerDto)\n  manufacturer: ManufacturerDto;\n\n  @Exclude()\n  commonNameId: CommonNameDto;\n\n  @Exclude()\n  manufacturerId: ManufacturerDto;\n}\n\nexport class SteroidCommentsCountDto extends BaseDto {\n  @StringField({ swagger: true })\n  name: string;\n\n  @ClassField(() => CommonNameDto)\n  commonName: CommonNameDto;\n\n  @ClassField(() => ManufacturerDto)\n  manufacturer: ManufacturerDto;\n\n  @NumberField()\n  commentCount: number;\n}\n\nexport class UpdateSteroidDto extends PartialType(\n  OmitType(SteroidDto, ['createdAt', 'updatedAt', '_id'] as const),\n) {}\n\nexport class SteroidQueryDto extends PartialType(\n  OmitType(SteroidDto, ['createdAt', 'updatedAt'] as const),\n) {\n  @ApiPropertyOptional()\n  @NumberFieldOptional()\n  skip: number;\n\n  @ApiPropertyOptional()\n  @NumberFieldOptional()\n  limit: number;\n\n  populate?: string[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SteroidDto.html":{"url":"classes/SteroidDto.html","title":"class - SteroidDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SteroidDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/steroids/steroids/dto/steroid.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            BaseDto\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    \n                                commonName\n                            \n                            \n                                    \n                                commonNameId\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                manufacturer\n                            \n                            \n                                    \n                                manufacturerId\n                            \n                            \n                                    \n                                name\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                _id\n                            \n                            \n                                    \n                                createdAt\n                            \n                            \n                                    \n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                        commonName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         CommonNameDto\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Expose()@ApiProperty({type: () => CommonNameDto})@Transform( => obj.commonNameId, {toClassOnly: true})@Type(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/steroids/steroids/dto/steroid.dto.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        commonNameId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         CommonNameDto\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Exclude()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/steroids/steroids/dto/steroid.dto.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                        manufacturer\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ManufacturerDto\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Expose()@ApiProperty({type: () => ManufacturerDto})@Transform( => obj.manufacturerId, {toClassOnly: true})@Type(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/steroids/steroids/dto/steroid.dto.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        manufacturerId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ManufacturerDto\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Exclude()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/steroids/steroids/dto/steroid.dto.ts:38\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @StringField({swagger: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/steroids/steroids/dto/steroid.dto.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@IsUUID()@IsOptional()@Transform(value => )\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseDto\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseDto:10\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseDto\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseDto:13\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseDto\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseDto:16\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {\n  ApiProperty,\n  ApiPropertyOptional,\n  OmitType,\n  PartialType,\n} from '@nestjs/swagger';\nimport { BaseDto } from 'src/@base/dto/base.dto';\nimport {\n  ClassField,\n  NumberField,\n  NumberFieldOptional,\n  StringField,\n} from 'src/@common/decorators/field.decorators';\nimport { CommonNameDto } from '../../common-names/dto/common-name.dto';\nimport { Exclude, Expose, Transform, Type } from 'class-transformer';\nimport { ManufacturerDto } from '../../manufacturers/dto/manufacturer.dto';\n\nexport class SteroidDto extends BaseDto {\n  @StringField({ swagger: true })\n  name: string;\n\n  @Expose()\n  @ApiProperty({ type: () => CommonNameDto })\n  @Transform(({ obj }) => obj.commonNameId, { toClassOnly: true })\n  @Type(() => CommonNameDto)\n  commonName: CommonNameDto;\n\n  @Expose()\n  @ApiProperty({ type: () => ManufacturerDto })\n  @Transform(({ obj }) => obj.manufacturerId, { toClassOnly: true })\n  @Type(() => ManufacturerDto)\n  manufacturer: ManufacturerDto;\n\n  @Exclude()\n  commonNameId: CommonNameDto;\n\n  @Exclude()\n  manufacturerId: ManufacturerDto;\n}\n\nexport class SteroidCommentsCountDto extends BaseDto {\n  @StringField({ swagger: true })\n  name: string;\n\n  @ClassField(() => CommonNameDto)\n  commonName: CommonNameDto;\n\n  @ClassField(() => ManufacturerDto)\n  manufacturer: ManufacturerDto;\n\n  @NumberField()\n  commentCount: number;\n}\n\nexport class UpdateSteroidDto extends PartialType(\n  OmitType(SteroidDto, ['createdAt', 'updatedAt', '_id'] as const),\n) {}\n\nexport class SteroidQueryDto extends PartialType(\n  OmitType(SteroidDto, ['createdAt', 'updatedAt'] as const),\n) {\n  @ApiPropertyOptional()\n  @NumberFieldOptional()\n  skip: number;\n\n  @ApiPropertyOptional()\n  @NumberFieldOptional()\n  limit: number;\n\n  populate?: string[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SteroidQueryDto.html":{"url":"classes/SteroidQueryDto.html","title":"class - SteroidQueryDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SteroidQueryDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/steroids/steroids/dto/steroid.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        PartialType(\n  OmitType(SteroidDto, ['createdAt', 'updatedAt'] as const),\n)\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                limit\n                            \n                            \n                                    Optional\n                                populate\n                            \n                            \n                                    \n                                    \n                                skip\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        limit\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional()@NumberFieldOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/steroids/steroids/dto/steroid.dto.ts:68\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        populate\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                    \n                        \n                                Defined in src/modules/steroids/steroids/dto/steroid.dto.ts:70\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        skip\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional()@NumberFieldOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/steroids/steroids/dto/steroid.dto.ts:64\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {\n  ApiProperty,\n  ApiPropertyOptional,\n  OmitType,\n  PartialType,\n} from '@nestjs/swagger';\nimport { BaseDto } from 'src/@base/dto/base.dto';\nimport {\n  ClassField,\n  NumberField,\n  NumberFieldOptional,\n  StringField,\n} from 'src/@common/decorators/field.decorators';\nimport { CommonNameDto } from '../../common-names/dto/common-name.dto';\nimport { Exclude, Expose, Transform, Type } from 'class-transformer';\nimport { ManufacturerDto } from '../../manufacturers/dto/manufacturer.dto';\n\nexport class SteroidDto extends BaseDto {\n  @StringField({ swagger: true })\n  name: string;\n\n  @Expose()\n  @ApiProperty({ type: () => CommonNameDto })\n  @Transform(({ obj }) => obj.commonNameId, { toClassOnly: true })\n  @Type(() => CommonNameDto)\n  commonName: CommonNameDto;\n\n  @Expose()\n  @ApiProperty({ type: () => ManufacturerDto })\n  @Transform(({ obj }) => obj.manufacturerId, { toClassOnly: true })\n  @Type(() => ManufacturerDto)\n  manufacturer: ManufacturerDto;\n\n  @Exclude()\n  commonNameId: CommonNameDto;\n\n  @Exclude()\n  manufacturerId: ManufacturerDto;\n}\n\nexport class SteroidCommentsCountDto extends BaseDto {\n  @StringField({ swagger: true })\n  name: string;\n\n  @ClassField(() => CommonNameDto)\n  commonName: CommonNameDto;\n\n  @ClassField(() => ManufacturerDto)\n  manufacturer: ManufacturerDto;\n\n  @NumberField()\n  commentCount: number;\n}\n\nexport class UpdateSteroidDto extends PartialType(\n  OmitType(SteroidDto, ['createdAt', 'updatedAt', '_id'] as const),\n) {}\n\nexport class SteroidQueryDto extends PartialType(\n  OmitType(SteroidDto, ['createdAt', 'updatedAt'] as const),\n) {\n  @ApiPropertyOptional()\n  @NumberFieldOptional()\n  skip: number;\n\n  @ApiPropertyOptional()\n  @NumberFieldOptional()\n  limit: number;\n\n  populate?: string[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/SteroidsController.html":{"url":"controllers/SteroidsController.html","title":"controller - SteroidsController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  SteroidsController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/steroids/steroids/steroids.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                steroids\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    \n                                create\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                deleteById\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                find\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                findById\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(createSteroidDto: CreateSteroidDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiOperation({summary: 'Create an steroid'})@ApiResponse({status: undefined, description: 'Steroid successfully created.', type: SteroidDto})@ApiResponse({status: undefined, description: 'Bad Request.'})@Post()\n                \n            \n\n                    \n                        \n                            Defined in src/modules/steroids/steroids/steroids.controller.ts:39\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createSteroidDto\n                                            \n                                                            CreateSteroidDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                        deleteById\n                        \n                    \n                \n            \n            \n                \n                        \n                    deleteById(steroidId: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiOperation({summary: 'Delete Steroid By Id'})@ApiResponse({status: undefined, description: 'Steroid Deleted.'})@ApiResponse({status: undefined, description: 'Bad Request.'})@Delete(':steroidId')\n                \n            \n\n                    \n                        \n                            Defined in src/modules/steroids/steroids/steroids.controller.ts:101\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                steroidId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                        find\n                        \n                    \n                \n            \n            \n                \n                        \n                    find()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiOperation({summary: 'List Steroids'})@ApiResponse({status: undefined, description: 'Steroid list loaded.', type: undefined})@ApiResponse({status: undefined, description: 'Bad Request.'})@Get()\n                \n            \n\n                    \n                        \n                            Defined in src/modules/steroids/steroids/steroids.controller.ts:54\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                        findById\n                        \n                    \n                \n            \n            \n                \n                        \n                    findById(steroidId: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiOperation({summary: 'Get Steroid By Id'})@ApiResponse({status: undefined, description: 'Steroid By Id Loaded.', type: SteroidDto})@ApiResponse({status: undefined, description: 'Bad Request.'})@Get(':steroidId')\n                \n            \n\n                    \n                        \n                            Defined in src/modules/steroids/steroids/steroids.controller.ts:69\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                steroidId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(steroidId: string, updateSteroidDto: UpdateSteroidDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiOperation({summary: 'Get Steroid By Id'})@ApiResponse({status: undefined, description: 'Steroid Updated.', type: SteroidDto})@ApiResponse({status: undefined, description: 'Bad Request.'})@Put(':steroidId')\n                \n            \n\n                    \n                        \n                            Defined in src/modules/steroids/steroids/steroids.controller.ts:84\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                steroidId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updateSteroidDto\n                                            \n                                                            UpdateSteroidDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Controller,\n  Post,\n  Body,\n  HttpStatus,\n  Get,\n  Put,\n  Param,\n  Delete,\n  UseGuards,\n} from '@nestjs/common';\nimport { SteroidsService } from './steroids.service';\nimport { ApiOperation, ApiResponse, ApiTags } from '@nestjs/swagger';\nimport { CreateSteroidDto } from './dto/create-steroid.dto';\nimport {\n  SteroidCommentsCountDto,\n  SteroidDto,\n  UpdateSteroidDto,\n} from './dto/steroid.dto';\nimport { AuthGuard } from '@nestjs/passport';\n\n@UseGuards(AuthGuard('jwt'))\n@ApiTags('Steroids')\n@Controller('steroids')\nexport class SteroidsController {\n  constructor(private readonly steroidService: SteroidsService) {}\n\n  @ApiOperation({ summary: 'Create an steroid' })\n  @ApiResponse({\n    status: HttpStatus.CREATED,\n    description: 'Steroid successfully created.',\n    type: SteroidDto,\n  })\n  @ApiResponse({\n    status: HttpStatus.BAD_REQUEST,\n    description: 'Bad Request.',\n  })\n  @Post()\n  create(@Body() createSteroidDto: CreateSteroidDto): Promise {\n    return this.steroidService.create(createSteroidDto);\n  }\n\n  @ApiOperation({ summary: 'List Steroids' })\n  @ApiResponse({\n    status: HttpStatus.OK,\n    description: 'Steroid list loaded.',\n    type: [SteroidDto],\n  })\n  @ApiResponse({\n    status: HttpStatus.BAD_REQUEST,\n    description: 'Bad Request.',\n  })\n  @Get()\n  find(): Promise {\n    return this.steroidService.findDetailedSteroids();\n  }\n\n  @ApiOperation({ summary: 'Get Steroid By Id' })\n  @ApiResponse({\n    status: HttpStatus.OK,\n    description: 'Steroid By Id Loaded.',\n    type: SteroidDto,\n  })\n  @ApiResponse({\n    status: HttpStatus.BAD_REQUEST,\n    description: 'Bad Request.',\n  })\n  @Get(':steroidId')\n  findById(@Param('steroidId') steroidId: string): Promise {\n    return this.steroidService.findById(steroidId);\n  }\n\n  @ApiOperation({ summary: 'Get Steroid By Id' })\n  @ApiResponse({\n    status: HttpStatus.OK,\n    description: 'Steroid Updated.',\n    type: SteroidDto,\n  })\n  @ApiResponse({\n    status: HttpStatus.BAD_REQUEST,\n    description: 'Bad Request.',\n  })\n  @Put(':steroidId')\n  update(\n    @Param('steroidId') steroidId: string,\n    @Body() updateSteroidDto: UpdateSteroidDto,\n  ): Promise {\n    return this.steroidService.update(steroidId, updateSteroidDto);\n  }\n\n  @ApiOperation({ summary: 'Delete Steroid By Id' })\n  @ApiResponse({\n    status: HttpStatus.OK,\n    description: 'Steroid Deleted.',\n  })\n  @ApiResponse({\n    status: HttpStatus.BAD_REQUEST,\n    description: 'Bad Request.',\n  })\n  @Delete(':steroidId')\n  deleteById(\n    @Param('steroidId') steroidId: string,\n  ): Promise {\n    return this.steroidService.delete(steroidId);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/SteroidsModule.html":{"url":"modules/SteroidsModule.html","title":"module - SteroidsModule","body":"\n                   \n\n\n\n\n    Modules\n    SteroidsModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_SteroidsModule\n\n\n\ncluster_SteroidsModule_providers\n\n\n\ncluster_SteroidsModule_imports\n\n\n\n\nCommentsModule\n\nCommentsModule\n\n\n\nSteroidsModule\n\nSteroidsModule\n\nSteroidsModule -->\n\nCommentsModule->SteroidsModule\n\n\n\n\n\nSteroidsService\n\nSteroidsService\n\nSteroidsModule -->\n\nSteroidsService->SteroidsModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/modules/steroids/steroids/steroids.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            SteroidsService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            SteroidsController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            CommentsModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { Steroid, SteroidSchema } from './steroid.schema';\nimport { SteroidsService } from './steroids.service';\nimport { SteroidsController } from './steroids.controller';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport { CommentsModule } from 'src/modules/comments';\n\n@Module({\n  imports: [\n    MongooseModule.forFeature([{ name: Steroid.name, schema: SteroidSchema }]),\n    CommentsModule,\n  ],\n  controllers: [SteroidsController],\n  providers: [SteroidsService],\n})\nexport class SteroidsModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SteroidsService.html":{"url":"injectables/SteroidsService.html","title":"injectable - SteroidsService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  SteroidsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/steroids/steroids/steroids.service.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            CrudService\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                dtoClass\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                findDetailedSteroids\n                            \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                delete\n                            \n                            \n                                    Async\n                                find\n                            \n                            \n                                    Async\n                                findById\n                            \n                            \n                                    Async\n                                findOne\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(steroidModel: Model, commentsService: CommentsService)\n                    \n                \n                        \n                            \n                                Defined in src/modules/steroids/steroids/steroids.service.ts:23\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        steroidModel\n                                                  \n                                                        \n                                                                        Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        commentsService\n                                                  \n                                                        \n                                                                        CommentsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findDetailedSteroids\n                        \n                    \n                \n            \n            \n                \n                        \n                    findDetailedSteroids()\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/steroids/steroids/steroids.service.ts:31\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(createArticleDto: CreateDto)\n                \n            \n\n\n                    \n                        \n                            Inherited from         CrudService\n\n                        \n                    \n                    \n                        \n                                Defined in         CrudService:20\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createArticleDto\n                                            \n                                                        CreateDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        delete\n                        \n                    \n                \n            \n            \n                \n                        \n                    delete(_id: string)\n                \n            \n\n\n                    \n                        \n                            Inherited from         CrudService\n\n                        \n                    \n                    \n                        \n                                Defined in         CrudService:93\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                _id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        find\n                        \n                    \n                \n            \n            \n                \n                        \n                    find(queryDto: QueryDTO)\n                \n            \n\n\n                    \n                        \n                            Inherited from         CrudService\n\n                        \n                    \n                    \n                        \n                                Defined in         CrudService:33\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                queryDto\n                                            \n                                                        QueryDTO\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findById\n                        \n                    \n                \n            \n            \n                \n                        \n                    findById(_id: string)\n                \n            \n\n\n                    \n                        \n                            Inherited from         CrudService\n\n                        \n                    \n                    \n                        \n                                Defined in         CrudService:44\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                _id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(queryDto: QueryDTO)\n                \n            \n\n\n                    \n                        \n                            Inherited from         CrudService\n\n                        \n                    \n                    \n                        \n                                Defined in         CrudService:60\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                queryDto\n                                            \n                                                        QueryDTO\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(_id: string, payload: UpdateDto)\n                \n            \n\n\n                    \n                        \n                            Inherited from         CrudService\n\n                        \n                    \n                    \n                        \n                                Defined in         CrudService:75\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                _id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                payload\n                                            \n                                                        UpdateDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        dtoClass\n                        \n                    \n                \n            \n                        \n                            \n                                Inherited from         CrudService\n\n                            \n                        \n                    \n                        \n                                Defined in         CrudService:12\n\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { Steroid, SteroidDocument } from './steroid.schema';\nimport {\n  SteroidCommentsCountDto,\n  SteroidDto,\n  SteroidQueryDto,\n  UpdateSteroidDto,\n} from './dto/steroid.dto';\nimport { CreateSteroidDto } from './dto/create-steroid.dto';\nimport { InjectModel } from '@nestjs/mongoose';\nimport { Model } from 'mongoose';\nimport { CrudService } from 'src/@base/generics/crud-generic';\nimport { commentsAggregation } from './query-aggregations';\nimport { CommentsService } from 'src/modules/comments/comments.service';\nimport { plainToClass } from 'class-transformer';\n\n@Injectable()\nexport class SteroidsService extends CrudService {\n  constructor(\n    @InjectModel(Steroid.name) readonly steroidModel: Model,\n    private readonly commentsService: CommentsService,\n  ) {\n    super(steroidModel, SteroidDto);\n  }\n\n  async findDetailedSteroids(): Promise {\n    const steroids = await this.steroidModel.aggregate(commentsAggregation);\n    return steroids.map((steroid) =>\n      plainToClass(SteroidCommentsCountDto, steroid),\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TokenPayloadDto.html":{"url":"classes/TokenPayloadDto.html","title":"class - TokenPayloadDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TokenPayloadDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/authentication/dto/token-payload.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                accessToken\n                            \n                            \n                                    \n                                expiresIn\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        accessToken\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @StringField({swagger: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/authentication/dto/token-payload.dto.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        expiresIn\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @NumberField({swagger: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/authentication/dto/token-payload.dto.ts:8\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {\n  NumberField,\n  StringField,\n} from 'src/@common/decorators/field.decorators';\n\nexport class TokenPayloadDto {\n  @NumberField({ swagger: true })\n  expiresIn: number;\n\n  @StringField({ swagger: true })\n  accessToken: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateArticleDto.html":{"url":"classes/UpdateArticleDto.html","title":"class - UpdateArticleDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateArticleDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/articles/dto/article.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        PartialType(\n  OmitType(ArticleDto, ['createdAt', 'updatedAt', '_id'] as const),\n)\n            \n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiPropertyOptional, OmitType, PartialType } from '@nestjs/swagger';\nimport { BaseDto } from 'src/@base/dto/base.dto';\nimport {\n  NumberFieldOptional,\n  StringField,\n} from 'src/@common/decorators/field.decorators';\n\nexport class ArticleDto extends BaseDto {\n  @StringField({ swagger: true })\n  title: string;\n\n  @StringField({ swagger: true })\n  content: string;\n}\n\nexport class UpdateArticleDto extends PartialType(\n  OmitType(ArticleDto, ['createdAt', 'updatedAt', '_id'] as const),\n) {}\n\nexport class ArticleQueryDto extends PartialType(\n  OmitType(ArticleDto, ['createdAt', 'updatedAt'] as const),\n) {\n  @ApiPropertyOptional()\n  @NumberFieldOptional()\n  skip: number;\n\n  @ApiPropertyOptional()\n  @NumberFieldOptional()\n  limit: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateCategoryDto.html":{"url":"classes/UpdateCategoryDto.html","title":"class - UpdateCategoryDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateCategoryDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/categories/dto/category.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        PartialType(\n  OmitType(CategoryDto, ['createdAt', 'updatedAt', '_id'] as const),\n)\n            \n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiPropertyOptional, OmitType, PartialType } from '@nestjs/swagger';\nimport { BaseDto } from 'src/@base/dto/base.dto';\nimport {\n  EnumField,\n  NumberFieldOptional,\n  StringField,\n} from 'src/@common/decorators/field.decorators';\nimport { CategoryType } from '../category.types';\n\nexport class CategoryDto extends BaseDto {\n  @EnumField(() => CategoryType)\n  type: CategoryType;\n\n  @StringField({ swagger: true })\n  name: string;\n}\n\nexport class UpdateCategoryDto extends PartialType(\n  OmitType(CategoryDto, ['createdAt', 'updatedAt', '_id'] as const),\n) {}\n\nexport class CategoryQueryDto extends PartialType(\n  OmitType(CategoryDto, ['createdAt', 'updatedAt'] as const),\n) {\n  @ApiPropertyOptional()\n  @NumberFieldOptional()\n  skip: number;\n\n  @ApiPropertyOptional()\n  @NumberFieldOptional()\n  limit: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateCommentDto.html":{"url":"classes/UpdateCommentDto.html","title":"class - UpdateCommentDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateCommentDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/comments/dto/comment.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        PartialType(\n  OmitType(CommentDto, ['createdAt', 'updatedAt', '_id'] as const),\n)\n            \n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiPropertyOptional, OmitType, PartialType } from '@nestjs/swagger';\nimport { BaseDto } from 'src/@base/dto/base.dto';\nimport {\n  NumberFieldOptional,\n  StringField,\n} from 'src/@common/decorators/field.decorators';\n\nexport class CommentDto extends BaseDto {\n  @StringField({ swagger: true })\n  content: string;\n\n  @StringField({ swagger: true })\n  referenceId: string;\n}\n\nexport class UpdateCommentDto extends PartialType(\n  OmitType(CommentDto, ['createdAt', 'updatedAt', '_id'] as const),\n) {}\n\nexport class CommentQueryDto extends PartialType(\n  OmitType(CommentDto, ['createdAt', 'updatedAt'] as const),\n) {\n  @ApiPropertyOptional()\n  @NumberFieldOptional()\n  skip: number;\n\n  @ApiPropertyOptional()\n  @NumberFieldOptional()\n  limit: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateCommonNameDto.html":{"url":"classes/UpdateCommonNameDto.html","title":"class - UpdateCommonNameDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateCommonNameDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/steroids/common-names/dto/common-name.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        PartialType(\n  OmitType(CommonNameDto, ['createdAt', 'updatedAt', '_id'] as const),\n)\n            \n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiPropertyOptional, OmitType, PartialType } from '@nestjs/swagger';\nimport { BaseDto } from 'src/@base/dto/base.dto';\nimport {\n  NumberFieldOptional,\n  StringField,\n} from 'src/@common/decorators/field.decorators';\n\nexport class CommonNameDto extends BaseDto {\n  @StringField({ swagger: true })\n  name: string;\n}\n\nexport class UpdateCommonNameDto extends PartialType(\n  OmitType(CommonNameDto, ['createdAt', 'updatedAt', '_id'] as const),\n) {}\n\nexport class CommonNameQueryDto extends PartialType(\n  OmitType(CommonNameDto, ['createdAt', 'updatedAt'] as const),\n) {\n  @ApiPropertyOptional()\n  @NumberFieldOptional()\n  skip: number;\n\n  @ApiPropertyOptional()\n  @NumberFieldOptional()\n  limit: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateManufacturerDto.html":{"url":"classes/UpdateManufacturerDto.html","title":"class - UpdateManufacturerDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateManufacturerDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/steroids/manufacturers/dto/manufacturer.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        PartialType(\n  OmitType(ManufacturerDto, ['createdAt', 'updatedAt', '_id'] as const),\n)\n            \n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiPropertyOptional, OmitType, PartialType } from '@nestjs/swagger';\nimport { BaseDto } from 'src/@base/dto/base.dto';\nimport {\n  NumberFieldOptional,\n  StringField,\n} from 'src/@common/decorators/field.decorators';\n\nexport class ManufacturerDto extends BaseDto {\n  @StringField({ swagger: true })\n  name: string;\n}\n\nexport class UpdateManufacturerDto extends PartialType(\n  OmitType(ManufacturerDto, ['createdAt', 'updatedAt', '_id'] as const),\n) {}\n\nexport class ManufacturerQueryDto extends PartialType(\n  OmitType(ManufacturerDto, ['createdAt', 'updatedAt'] as const),\n) {\n  @ApiPropertyOptional()\n  @NumberFieldOptional()\n  skip: number;\n\n  @ApiPropertyOptional()\n  @NumberFieldOptional()\n  limit: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateReviewDto.html":{"url":"classes/UpdateReviewDto.html","title":"class - UpdateReviewDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateReviewDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/reviews/dto/review.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        PartialType(\n  OmitType(ReviewDto, ['createdAt', 'updatedAt', '_id'] as const),\n)\n            \n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiPropertyOptional, OmitType, PartialType } from '@nestjs/swagger';\nimport { BaseDto } from 'src/@base/dto/base.dto';\nimport {\n  NumberFieldOptional,\n  StringField,\n} from 'src/@common/decorators/field.decorators';\n\nexport class ReviewDto extends BaseDto {\n  @StringField({ swagger: true })\n  title: string;\n\n  @StringField({ swagger: true })\n  content: string;\n}\n\nexport class UpdateReviewDto extends PartialType(\n  OmitType(ReviewDto, ['createdAt', 'updatedAt', '_id'] as const),\n) {}\n\nexport class ReviewQueryDto extends PartialType(\n  OmitType(ReviewDto, ['createdAt', 'updatedAt'] as const),\n) {\n  @ApiPropertyOptional()\n  @NumberFieldOptional()\n  skip: number;\n\n  @ApiPropertyOptional()\n  @NumberFieldOptional()\n  limit: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateSourceDto.html":{"url":"classes/UpdateSourceDto.html","title":"class - UpdateSourceDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateSourceDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/sources/dto/source.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        PartialType(\n  OmitType(SourceDto, ['createdAt', 'updatedAt', '_id'] as const),\n)\n            \n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiPropertyOptional, OmitType, PartialType } from '@nestjs/swagger';\nimport { BaseDto } from 'src/@base/dto/base.dto';\nimport {\n  NumberFieldOptional,\n  StringField,\n} from 'src/@common/decorators/field.decorators';\n\nexport class SourceDto extends BaseDto {\n  @StringField({ swagger: true })\n  url: string;\n\n  @StringField({ swagger: true, each: true })\n  sourceImage: string[];\n}\n\nexport class UpdateSourceDto extends PartialType(\n  OmitType(SourceDto, ['createdAt', 'updatedAt', '_id'] as const),\n) {}\n\nexport class SourceQueryDto extends PartialType(\n  OmitType(SourceDto, ['createdAt', 'updatedAt'] as const),\n) {\n  @ApiPropertyOptional()\n  @NumberFieldOptional()\n  skip: number;\n\n  @ApiPropertyOptional()\n  @NumberFieldOptional()\n  limit: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateSteroidDto.html":{"url":"classes/UpdateSteroidDto.html","title":"class - UpdateSteroidDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateSteroidDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/steroids/steroids/dto/steroid.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        PartialType(\n  OmitType(SteroidDto, ['createdAt', 'updatedAt', '_id'] as const),\n)\n            \n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {\n  ApiProperty,\n  ApiPropertyOptional,\n  OmitType,\n  PartialType,\n} from '@nestjs/swagger';\nimport { BaseDto } from 'src/@base/dto/base.dto';\nimport {\n  ClassField,\n  NumberField,\n  NumberFieldOptional,\n  StringField,\n} from 'src/@common/decorators/field.decorators';\nimport { CommonNameDto } from '../../common-names/dto/common-name.dto';\nimport { Exclude, Expose, Transform, Type } from 'class-transformer';\nimport { ManufacturerDto } from '../../manufacturers/dto/manufacturer.dto';\n\nexport class SteroidDto extends BaseDto {\n  @StringField({ swagger: true })\n  name: string;\n\n  @Expose()\n  @ApiProperty({ type: () => CommonNameDto })\n  @Transform(({ obj }) => obj.commonNameId, { toClassOnly: true })\n  @Type(() => CommonNameDto)\n  commonName: CommonNameDto;\n\n  @Expose()\n  @ApiProperty({ type: () => ManufacturerDto })\n  @Transform(({ obj }) => obj.manufacturerId, { toClassOnly: true })\n  @Type(() => ManufacturerDto)\n  manufacturer: ManufacturerDto;\n\n  @Exclude()\n  commonNameId: CommonNameDto;\n\n  @Exclude()\n  manufacturerId: ManufacturerDto;\n}\n\nexport class SteroidCommentsCountDto extends BaseDto {\n  @StringField({ swagger: true })\n  name: string;\n\n  @ClassField(() => CommonNameDto)\n  commonName: CommonNameDto;\n\n  @ClassField(() => ManufacturerDto)\n  manufacturer: ManufacturerDto;\n\n  @NumberField()\n  commentCount: number;\n}\n\nexport class UpdateSteroidDto extends PartialType(\n  OmitType(SteroidDto, ['createdAt', 'updatedAt', '_id'] as const),\n) {}\n\nexport class SteroidQueryDto extends PartialType(\n  OmitType(SteroidDto, ['createdAt', 'updatedAt'] as const),\n) {\n  @ApiPropertyOptional()\n  @NumberFieldOptional()\n  skip: number;\n\n  @ApiPropertyOptional()\n  @NumberFieldOptional()\n  limit: number;\n\n  populate?: string[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateUserDto.html":{"url":"classes/UpdateUserDto.html","title":"class - UpdateUserDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateUserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/users/dto/user.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        PartialType(\n  OmitType(UserDto, ['createdAt', 'updatedAt', '_id'] as const),\n)\n            \n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiPropertyOptional, OmitType, PartialType } from '@nestjs/swagger';\nimport { BaseDto } from 'src/@base/dto/base.dto';\nimport {\n  DateField,\n  EmailField,\n  EnumField,\n  NumberField,\n  NumberFieldOptional,\n  PhoneFieldOptional,\n  StringField,\n} from 'src/@common/decorators/field.decorators';\nimport { RoleType } from '../types/user.types';\nimport { Exclude } from 'class-transformer';\n\nexport class UserDto extends BaseDto {\n  @EnumField(() => RoleType)\n  role: RoleType;\n\n  @EmailField({ swagger: true })\n  email: string;\n\n  @Exclude()\n  password?: string | null;\n\n  @PhoneFieldOptional({ swagger: true })\n  phone: string | null;\n\n  @StringField({ swagger: true })\n  avatar: string | null;\n\n  @StringField({ swagger: true })\n  username: string;\n\n  @StringField({ swagger: true })\n  aboutMe: string | null;\n\n  @DateField({ swagger: true })\n  birthDate: Date;\n\n  @NumberField({ swagger: true })\n  weight: number;\n\n  @NumberField({ swagger: true })\n  height: number;\n\n  @NumberField({ swagger: true })\n  bodyFat: number;\n}\n\nexport class UpdateUserDto extends PartialType(\n  OmitType(UserDto, ['createdAt', 'updatedAt', '_id'] as const),\n) {}\n\nexport class UserQueryDto extends PartialType(\n  OmitType(UserDto, ['createdAt', 'updatedAt'] as const),\n) {\n  @ApiPropertyOptional()\n  @NumberFieldOptional()\n  skip?: number;\n\n  @ApiPropertyOptional()\n  @NumberFieldOptional()\n  limit?: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/User.html":{"url":"classes/User.html","title":"class - User","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  User\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/users/user.schema.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                aboutMe\n                            \n                            \n                                    \n                                avatar\n                            \n                            \n                                    \n                                birthDate\n                            \n                            \n                                    \n                                bodyFat\n                            \n                            \n                                    \n                                email\n                            \n                            \n                                    \n                                height\n                            \n                            \n                                    \n                                password\n                            \n                            \n                                    \n                                phone\n                            \n                            \n                                    \n                                role\n                            \n                            \n                                    \n                                username\n                            \n                            \n                                    \n                                weight\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        aboutMe\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: String, required: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/users/user.schema.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        avatar\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: String, required: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/users/user.schema.ts:39\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        birthDate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Date, required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/users/user.schema.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        bodyFat\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Number, required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/users/user.schema.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: String, required: true, unique: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/users/user.schema.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        height\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Number, required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/users/user.schema.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: String})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/users/user.schema.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        phone\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: String, required: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/users/user.schema.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        role\n                        \n                    \n                \n            \n                \n                    \n                        Type :         RoleType\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: String, enum: RoleType, default: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/users/user.schema.ts:42\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        username\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: String, required: true, unique: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/users/user.schema.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        weight\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Number, required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/users/user.schema.ts:27\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\nimport * as mongoose from 'mongoose';\nimport { Base } from 'src/@base/entity/base.entity';\nimport { RoleType } from './types/user.types';\nimport { generateHash } from 'src/@common/utilities/utils';\n\nexport type UserDocument = User & mongoose.Document;\n\n@Schema({ autoCreate: true })\nexport class User extends Base {\n  @Prop({ type: String, required: true, unique: true })\n  username: string;\n\n  @Prop({ type: String, required: true, unique: true })\n  email: string;\n\n  @Prop({ type: String })\n  password: string | null;\n\n  @Prop({ type: String, required: false })\n  aboutMe: string | null;\n\n  @Prop({ type: Date, required: true })\n  birthDate: Date;\n\n  @Prop({ type: Number, required: true })\n  weight: number;\n\n  @Prop({ type: Number, required: true })\n  height: number;\n\n  @Prop({ type: Number, required: true })\n  bodyFat: number;\n\n  @Prop({ type: String, required: false })\n  phone: string | null;\n\n  @Prop({ type: String, required: false })\n  avatar: string | null;\n\n  @Prop({ type: String, enum: RoleType, default: RoleType.USER })\n  role: RoleType;\n}\n\nexport const UserSchema = SchemaFactory.createForClass(User);\n\nUserSchema.pre('save', async function (next) {\n  if (this.isModified('password')) {\n    try {\n      const hashedPassword = await generateHash(this.password);\n      this.password = hashedPassword;\n      next();\n    } catch (error) {\n      next(error);\n    }\n  } else {\n    next();\n  }\n});\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UserDto.html":{"url":"classes/UserDto.html","title":"class - UserDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/users/dto/user.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            BaseDto\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                aboutMe\n                            \n                            \n                                    \n                                avatar\n                            \n                            \n                                    \n                                birthDate\n                            \n                            \n                                    \n                                bodyFat\n                            \n                            \n                                    \n                                email\n                            \n                            \n                                    \n                                height\n                            \n                            \n                                    \n                                    Optional\n                                password\n                            \n                            \n                                    \n                                phone\n                            \n                            \n                                    \n                                role\n                            \n                            \n                                    \n                                username\n                            \n                            \n                                    \n                                weight\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                _id\n                            \n                            \n                                    \n                                createdAt\n                            \n                            \n                                    \n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        aboutMe\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @StringField({swagger: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/users/dto/user.dto.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        avatar\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @StringField({swagger: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/users/dto/user.dto.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        birthDate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @DateField({swagger: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/users/dto/user.dto.ts:38\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        bodyFat\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @NumberField({swagger: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/users/dto/user.dto.ts:47\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @EmailField({swagger: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/users/dto/user.dto.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        height\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @NumberField({swagger: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/users/dto/user.dto.ts:44\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Exclude()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/users/dto/user.dto.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        phone\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PhoneFieldOptional({swagger: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/users/dto/user.dto.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        role\n                        \n                    \n                \n            \n                \n                    \n                        Type :         RoleType\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @EnumField(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/users/dto/user.dto.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        username\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @StringField({swagger: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/users/dto/user.dto.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        weight\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @NumberField({swagger: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/users/dto/user.dto.ts:41\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@IsUUID()@IsOptional()@Transform(value => )\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseDto\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseDto:10\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseDto\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseDto:13\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseDto\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseDto:16\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiPropertyOptional, OmitType, PartialType } from '@nestjs/swagger';\nimport { BaseDto } from 'src/@base/dto/base.dto';\nimport {\n  DateField,\n  EmailField,\n  EnumField,\n  NumberField,\n  NumberFieldOptional,\n  PhoneFieldOptional,\n  StringField,\n} from 'src/@common/decorators/field.decorators';\nimport { RoleType } from '../types/user.types';\nimport { Exclude } from 'class-transformer';\n\nexport class UserDto extends BaseDto {\n  @EnumField(() => RoleType)\n  role: RoleType;\n\n  @EmailField({ swagger: true })\n  email: string;\n\n  @Exclude()\n  password?: string | null;\n\n  @PhoneFieldOptional({ swagger: true })\n  phone: string | null;\n\n  @StringField({ swagger: true })\n  avatar: string | null;\n\n  @StringField({ swagger: true })\n  username: string;\n\n  @StringField({ swagger: true })\n  aboutMe: string | null;\n\n  @DateField({ swagger: true })\n  birthDate: Date;\n\n  @NumberField({ swagger: true })\n  weight: number;\n\n  @NumberField({ swagger: true })\n  height: number;\n\n  @NumberField({ swagger: true })\n  bodyFat: number;\n}\n\nexport class UpdateUserDto extends PartialType(\n  OmitType(UserDto, ['createdAt', 'updatedAt', '_id'] as const),\n) {}\n\nexport class UserQueryDto extends PartialType(\n  OmitType(UserDto, ['createdAt', 'updatedAt'] as const),\n) {\n  @ApiPropertyOptional()\n  @NumberFieldOptional()\n  skip?: number;\n\n  @ApiPropertyOptional()\n  @NumberFieldOptional()\n  limit?: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UserLoginDto.html":{"url":"classes/UserLoginDto.html","title":"class - UserLoginDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UserLoginDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/authentication/dto/user-login.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Readonly\n                                password\n                            \n                            \n                                    \n                                    Readonly\n                                usernameOrEmail\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Readonly\n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PasswordField()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/authentication/dto/user-login.dto.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Readonly\n                        usernameOrEmail\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @StringField()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/authentication/dto/user-login.dto.ts:8\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {\n  PasswordField,\n  StringField,\n} from 'src/@common/decorators/field.decorators';\n\nexport class UserLoginDto {\n  @StringField()\n  readonly usernameOrEmail!: string;\n\n  @PasswordField()\n  readonly password!: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UserQueryDto.html":{"url":"classes/UserQueryDto.html","title":"class - UserQueryDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UserQueryDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/users/dto/user.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        PartialType(\n  OmitType(UserDto, ['createdAt', 'updatedAt'] as const),\n)\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    Optional\n                                limit\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                skip\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        limit\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional()@NumberFieldOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/users/dto/user.dto.ts:63\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        skip\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional()@NumberFieldOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/users/dto/user.dto.ts:59\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiPropertyOptional, OmitType, PartialType } from '@nestjs/swagger';\nimport { BaseDto } from 'src/@base/dto/base.dto';\nimport {\n  DateField,\n  EmailField,\n  EnumField,\n  NumberField,\n  NumberFieldOptional,\n  PhoneFieldOptional,\n  StringField,\n} from 'src/@common/decorators/field.decorators';\nimport { RoleType } from '../types/user.types';\nimport { Exclude } from 'class-transformer';\n\nexport class UserDto extends BaseDto {\n  @EnumField(() => RoleType)\n  role: RoleType;\n\n  @EmailField({ swagger: true })\n  email: string;\n\n  @Exclude()\n  password?: string | null;\n\n  @PhoneFieldOptional({ swagger: true })\n  phone: string | null;\n\n  @StringField({ swagger: true })\n  avatar: string | null;\n\n  @StringField({ swagger: true })\n  username: string;\n\n  @StringField({ swagger: true })\n  aboutMe: string | null;\n\n  @DateField({ swagger: true })\n  birthDate: Date;\n\n  @NumberField({ swagger: true })\n  weight: number;\n\n  @NumberField({ swagger: true })\n  height: number;\n\n  @NumberField({ swagger: true })\n  bodyFat: number;\n}\n\nexport class UpdateUserDto extends PartialType(\n  OmitType(UserDto, ['createdAt', 'updatedAt', '_id'] as const),\n) {}\n\nexport class UserQueryDto extends PartialType(\n  OmitType(UserDto, ['createdAt', 'updatedAt'] as const),\n) {\n  @ApiPropertyOptional()\n  @NumberFieldOptional()\n  skip?: number;\n\n  @ApiPropertyOptional()\n  @NumberFieldOptional()\n  limit?: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/UsersController.html":{"url":"controllers/UsersController.html","title":"controller - UsersController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  UsersController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/users/users.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                users\n            \n\n\n\n\n\n\n\n    \n\n\n    \n        import { Controller } from '@nestjs/common';\nimport { UsersService } from './users.service';\n\n@Controller('users')\nexport class UsersController {\n  constructor(private usersService: UsersService) {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/UsersModule.html":{"url":"modules/UsersModule.html","title":"module - UsersModule","body":"\n                   \n\n\n\n\n    Modules\n    UsersModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_UsersModule\n\n\n\ncluster_UsersModule_exports\n\n\n\ncluster_UsersModule_providers\n\n\n\n\nUsersService \n\nUsersService \n\n\n\nUsersModule\n\nUsersModule\n\nUsersService  -->\n\nUsersModule->UsersService \n\n\n\n\n\nUsersService\n\nUsersService\n\nUsersModule -->\n\nUsersService->UsersModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/modules/users/users.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            UsersService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            UsersController\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            UsersService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport { User, UserSchema } from './user.schema';\nimport { UsersController } from './users.controller';\nimport { UsersService } from './users.service';\n\n@Module({\n  imports: [\n    MongooseModule.forFeature([{ name: User.name, schema: UserSchema }]),\n  ],\n  controllers: [UsersController],\n  providers: [UsersService],\n  exports: [UsersService],\n})\nexport class UsersModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UsersService.html":{"url":"injectables/UsersService.html","title":"injectable - UsersService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  UsersService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/users/users.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                findOne\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userModel: Model)\n                    \n                \n                        \n                            \n                                Defined in src/modules/users/users.service.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userModel\n                                                  \n                                                        \n                                                                        Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(createUserDto: CreateUserDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/users/users.service.ts:31\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createUserDto\n                                            \n                                                            CreateUserDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(queryDto: UserQueryDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/users/users.service.ts:16\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                queryDto\n                                            \n                                                            UserQueryDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { HttpException, HttpStatus, Injectable } from '@nestjs/common';\nimport { User, UserDocument } from './user.schema';\nimport { plainToClass } from 'class-transformer';\nimport { UserDto, UserQueryDto } from './dto/user.dto';\nimport { Model } from 'mongoose';\nimport { InjectModel } from '@nestjs/mongoose';\nimport { getErrorMessage } from 'src/@common/utilities/mongodb-parser';\nimport { CreateUserDto } from './dto/create-user.dto';\n\n@Injectable()\nexport class UsersService {\n  constructor(\n    @InjectModel(User.name) readonly userModel: Model,\n  ) {}\n\n  async findOne(queryDto: UserQueryDto): Promise {\n    try {\n      const user = await this.userModel.findOne(queryDto);\n      if (!user) {\n        throw new Error(`${this.userModel.modelName} not found`);\n      }\n      return plainToClass(UserDto, user.toObject());\n    } catch (ex) {\n      throw new HttpException(\n        getErrorMessage(ex),\n        HttpStatus.UNPROCESSABLE_ENTITY,\n      );\n    }\n  }\n\n  async create(createUserDto: CreateUserDto): Promise {\n    try {\n      const userRepository = new this.userModel(createUserDto);\n      const result = await userRepository.save();\n      return plainToClass(UserDto, result.toObject());\n    } catch (ex) {\n      throw new HttpException(\n        getErrorMessage(ex),\n        HttpStatus.UNPROCESSABLE_ENTITY,\n      );\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ValidatorService.html":{"url":"injectables/ValidatorService.html","title":"injectable - ValidatorService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ValidatorService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/shared/services/validator.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                isImage\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        isImage\n                        \n                    \n                \n            \n            \n                \n                        \n                    isImage(mimeType: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/shared/services/validator.service.ts:5\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                mimeType\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class ValidatorService {\n  public isImage(mimeType: string): boolean {\n    const imageMimeTypes = ['image/jpeg', 'image/png'];\n\n    return imageMimeTypes.includes(mimeType);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/_SteroidsModule.html":{"url":"modules/_SteroidsModule.html","title":"module - _SteroidsModule","body":"\n                   \n\n\n\n\n    Modules\n    _SteroidsModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster__SteroidsModule\n\n\n\ncluster__SteroidsModule_imports\n\n\n\ncluster__SteroidsModule_exports\n\n\n\n\nCommonNamesModule\n\nCommonNamesModule\n\n\n\n_SteroidsModule\n\n_SteroidsModule\n\n_SteroidsModule -->\n\nCommonNamesModule->_SteroidsModule\n\n\n\n\n\nManufacturersModule\n\nManufacturersModule\n\n_SteroidsModule -->\n\nManufacturersModule->_SteroidsModule\n\n\n\n\n\nSteroidsModule\n\nSteroidsModule\n\n_SteroidsModule -->\n\nSteroidsModule->_SteroidsModule\n\n\n\n\n\nCommonNamesModule \n\nCommonNamesModule \n\nCommonNamesModule  -->\n\n_SteroidsModule->CommonNamesModule \n\n\n\n\n\nManufacturersModule \n\nManufacturersModule \n\nManufacturersModule  -->\n\n_SteroidsModule->ManufacturersModule \n\n\n\n\n\nSteroidsModule \n\nSteroidsModule \n\nSteroidsModule  -->\n\n_SteroidsModule->SteroidsModule \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/modules/steroids/steroids.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Imports\n                    \n                        \n                            CommonNamesModule\n                        \n                        \n                            ManufacturersModule\n                        \n                        \n                            SteroidsModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            CommonNamesModule\n                        \n                        \n                            ManufacturersModule\n                        \n                        \n                            SteroidsModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { SteroidsModule } from './steroids/steroids.module';\nimport { CommonNamesModule } from './common-names/common-names.module';\nimport { ManufacturersModule } from './manufacturers';\n\n@Module({\n  imports: [SteroidsModule, CommonNamesModule, ManufacturersModule],\n  exports: [SteroidsModule, CommonNamesModule, ManufacturersModule],\n})\nexport class _SteroidsModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/@base/dto/base.dto.ts\n            \n            class\n            BaseDto\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/@base/dto/pagination-query.dto.ts\n            \n            class\n            PaginationQueryDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/@base/entity/base.entity.ts\n            \n            class\n            Base\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/@base/generics/crud-generic.ts\n            \n            injectable\n            CrudService\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/@common/decorators/field.decorators.ts\n            \n            interface\n            IFieldOptions\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/@common/decorators/field.decorators.ts\n            \n            interface\n            INumberFieldOptions\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/@common/decorators/field.decorators.ts\n            \n            interface\n            IStringFieldOptions\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/@common/decorators/field.decorators.ts\n            \n            function\n            BooleanField\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/@common/decorators/field.decorators.ts\n            \n            function\n            BooleanFieldOptional\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/@common/decorators/field.decorators.ts\n            \n            function\n            ClassField\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/@common/decorators/field.decorators.ts\n            \n            function\n            ClassFieldOptional\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/@common/decorators/field.decorators.ts\n            \n            function\n            DateField\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/@common/decorators/field.decorators.ts\n            \n            function\n            DateFieldOptional\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/@common/decorators/field.decorators.ts\n            \n            function\n            EmailField\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/@common/decorators/field.decorators.ts\n            \n            function\n            EmailFieldOptional\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/@common/decorators/field.decorators.ts\n            \n            function\n            EnumField\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/@common/decorators/field.decorators.ts\n            \n            function\n            EnumFieldOptional\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/@common/decorators/field.decorators.ts\n            \n            function\n            NumberField\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/@common/decorators/field.decorators.ts\n            \n            function\n            NumberFieldOptional\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/@common/decorators/field.decorators.ts\n            \n            function\n            PasswordField\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/@common/decorators/field.decorators.ts\n            \n            function\n            PasswordFieldOptional\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/@common/decorators/field.decorators.ts\n            \n            function\n            PhoneField\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/@common/decorators/field.decorators.ts\n            \n            function\n            PhoneFieldOptional\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/@common/decorators/field.decorators.ts\n            \n            function\n            StringField\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/@common/decorators/field.decorators.ts\n            \n            function\n            StringFieldOptional\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/@common/decorators/field.decorators.ts\n            \n            function\n            TmpKeyField\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/@common/decorators/field.decorators.ts\n            \n            function\n            TmpKeyFieldOptional\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/@common/decorators/field.decorators.ts\n            \n            function\n            URLField\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/@common/decorators/field.decorators.ts\n            \n            function\n            URLFieldOptional\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/@common/decorators/field.decorators.ts\n            \n            function\n            UUIDField\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/@common/decorators/field.decorators.ts\n            \n            function\n            UUIDFieldOptional\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/@common/decorators/property.decorators.ts\n            \n            function\n            ApiBooleanProperty\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/@common/decorators/property.decorators.ts\n            \n            function\n            ApiBooleanPropertyOptional\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/@common/decorators/property.decorators.ts\n            \n            function\n            ApiEnumProperty\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/@common/decorators/property.decorators.ts\n            \n            function\n            ApiEnumPropertyOptional\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/@common/decorators/property.decorators.ts\n            \n            function\n            ApiUUIDProperty\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/@common/decorators/property.decorators.ts\n            \n            function\n            ApiUUIDPropertyOptional\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/@common/decorators/swagger.schema.ts\n            \n            function\n            ApiFile\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/@common/decorators/swagger.schema.ts\n            \n            function\n            ApiFileDecorator\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/@common/decorators/swagger.schema.ts\n            \n            function\n            explore\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/@common/decorators/swagger.schema.ts\n            \n            function\n            RegisterModels\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/@common/decorators/transform.decorators.ts\n            \n            function\n            PhoneNumberSerializer\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/@common/decorators/transform.decorators.ts\n            \n            function\n            S3UrlParser\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/@common/decorators/transform.decorators.ts\n            \n            function\n            ToArray\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/@common/decorators/transform.decorators.ts\n            \n            function\n            ToBoolean\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/@common/decorators/transform.decorators.ts\n            \n            function\n            ToInt\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/@common/decorators/transform.decorators.ts\n            \n            function\n            ToLowerCase\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/@common/decorators/transform.decorators.ts\n            \n            function\n            ToUpperCase\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/@common/decorators/transform.decorators.ts\n            \n            function\n            Trim\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/@common/decorators/use-dto.decorator.ts\n            \n            function\n            UseDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/@common/decorators/validator.decorators.ts\n            \n            function\n            IsNullable\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/@common/decorators/validator.decorators.ts\n            \n            function\n            IsPassword\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/@common/decorators/validator.decorators.ts\n            \n            function\n            IsPhoneNumber\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/@common/decorators/validator.decorators.ts\n            \n            function\n            IsTmpKey\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/@common/decorators/validator.decorators.ts\n            \n            function\n            IsUndefinable\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/@common/exceptions/file-not-image.exception.ts\n            \n            class\n            FileNotImageException\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/@common/global-providers/generator.provider.ts\n            \n            class\n            GeneratorProvider\n            \n                12 %\n                (1/8)\n            \n        \n        \n            \n                \n                src/@common/interfaces/IApiFile.ts\n            \n            interface\n            IApiFile\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/@common/interfaces/IFile.ts\n            \n            interface\n            IFile\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/@common/utilities/keys.ts\n            \n            function\n            extractKey\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/@common/utilities/mongodb-parser.ts\n            \n            function\n            getErrorMessage\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/@common/utilities/mongodb-parser.ts\n            \n            function\n            getUniqueErrorMessage\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/@common/utilities/utils.ts\n            \n            function\n            generateHash\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/@common/utilities/utils.ts\n            \n            function\n            getString\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/@common/utilities/utils.ts\n            \n            function\n            getVariableName\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/@common/utilities/utils.ts\n            \n            function\n            validateHash\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app.controller.ts\n            \n            controller\n            AppController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app.service.ts\n            \n            injectable\n            AppService\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/modules/articles/article.schema.ts\n            \n            class\n            Article\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/modules/articles/article.schema.ts\n            \n            variable\n            ArticleSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/modules/articles/article.schema.ts\n            \n            variable\n            ObjectId\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/modules/articles/articles.controller.ts\n            \n            controller\n            ArticlesController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/modules/articles/articles.service.ts\n            \n            injectable\n            ArticlesService\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/modules/articles/dto/article.dto.ts\n            \n            class\n            ArticleDto\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/modules/articles/dto/article.dto.ts\n            \n            class\n            ArticleQueryDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/modules/articles/dto/article.dto.ts\n            \n            class\n            UpdateArticleDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/modules/articles/dto/create-article.dto.ts\n            \n            class\n            CreateArticleDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/modules/authentication/authentication.controller.ts\n            \n            controller\n            AuthController\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/modules/authentication/authentication.service.ts\n            \n            injectable\n            AuthenticationService\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/modules/authentication/dto/login-payload.dto.ts\n            \n            class\n            LoginPayloadDto\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/modules/authentication/dto/token-payload.dto.ts\n            \n            class\n            TokenPayloadDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/modules/authentication/dto/user-login.dto.ts\n            \n            class\n            UserLoginDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/modules/authentication/strategies/jwt.strategy.ts\n            \n            injectable\n            JwtStrategy\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/modules/categories/categories.controller.ts\n            \n            controller\n            CategoriesController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/modules/categories/categories.service.ts\n            \n            injectable\n            CategoriesService\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/modules/categories/category.schema.ts\n            \n            class\n            Category\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/modules/categories/category.schema.ts\n            \n            variable\n            CategorySchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/modules/categories/dto/category.dto.ts\n            \n            class\n            CategoryDto\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/modules/categories/dto/category.dto.ts\n            \n            class\n            CategoryQueryDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/modules/categories/dto/category.dto.ts\n            \n            class\n            UpdateCategoryDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/modules/categories/dto/create-category.dto.ts\n            \n            class\n            CreateCategoryDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/modules/comments/comment.schema.ts\n            \n            class\n            Comment\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/modules/comments/comment.schema.ts\n            \n            variable\n            CommentSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/modules/comments/comment.schema.ts\n            \n            variable\n            ObjectId\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/modules/comments/comments.controller.ts\n            \n            controller\n            CommentsController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/modules/comments/comments.service.ts\n            \n            injectable\n            CommentsService\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/modules/comments/dto/comment.dto.ts\n            \n            class\n            CommentDto\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/modules/comments/dto/comment.dto.ts\n            \n            class\n            CommentQueryDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/modules/comments/dto/comment.dto.ts\n            \n            class\n            UpdateCommentDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/modules/comments/dto/create-comment.dto.ts\n            \n            class\n            CreateCommentDto\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/modules/reviews/dto/create-review.dto.ts\n            \n            class\n            CreateReviewDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/modules/reviews/dto/review.dto.ts\n            \n            class\n            ReviewDto\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/modules/reviews/dto/review.dto.ts\n            \n            class\n            ReviewQueryDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/modules/reviews/dto/review.dto.ts\n            \n            class\n            UpdateReviewDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/modules/reviews/review.schema.ts\n            \n            class\n            Review\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/modules/reviews/review.schema.ts\n            \n            variable\n            ObjectId\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/modules/reviews/review.schema.ts\n            \n            variable\n            ReviewSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/modules/reviews/reviews.controller.ts\n            \n            controller\n            ReviewsController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/modules/reviews/reviews.service.ts\n            \n            injectable\n            ReviewsService\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/modules/sources/dto/create-source.dto.ts\n            \n            class\n            CreateSourceDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/modules/sources/dto/source.dto.ts\n            \n            class\n            SourceDto\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/modules/sources/dto/source.dto.ts\n            \n            class\n            SourceQueryDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/modules/sources/dto/source.dto.ts\n            \n            class\n            UpdateSourceDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/modules/sources/source.schema.ts\n            \n            class\n            Source\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/modules/sources/source.schema.ts\n            \n            variable\n            ObjectId\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/modules/sources/source.schema.ts\n            \n            variable\n            SourceSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/modules/sources/sources.controller.ts\n            \n            controller\n            SourcesController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/modules/sources/sources.service.ts\n            \n            injectable\n            SourcesService\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/modules/steroids/common-names/common-name.schema.ts\n            \n            class\n            CommonName\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/modules/steroids/common-names/common-name.schema.ts\n            \n            variable\n            CommonNameSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/modules/steroids/common-names/common-name.schema.ts\n            \n            variable\n            ObjectId\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/modules/steroids/common-names/common-names.controller.ts\n            \n            controller\n            CommonNamesController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/modules/steroids/common-names/common-names.service.ts\n            \n            injectable\n            CommonNamesService\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/modules/steroids/common-names/dto/common-name.dto.ts\n            \n            class\n            CommonNameDto\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/modules/steroids/common-names/dto/common-name.dto.ts\n            \n            class\n            CommonNameQueryDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/modules/steroids/common-names/dto/common-name.dto.ts\n            \n            class\n            UpdateCommonNameDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/modules/steroids/common-names/dto/create-common-name.dto.ts\n            \n            class\n            CreateCommonNameDto\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/modules/steroids/manufacturers/dto/create-manufacturer.dto.ts\n            \n            class\n            CreateManufacturerDto\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/modules/steroids/manufacturers/dto/manufacturer.dto.ts\n            \n            class\n            ManufacturerDto\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/modules/steroids/manufacturers/dto/manufacturer.dto.ts\n            \n            class\n            ManufacturerQueryDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/modules/steroids/manufacturers/dto/manufacturer.dto.ts\n            \n            class\n            UpdateManufacturerDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/modules/steroids/manufacturers/manufacturer.schema.ts\n            \n            class\n            Manufacturer\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/modules/steroids/manufacturers/manufacturer.schema.ts\n            \n            variable\n            ManufacturerSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/modules/steroids/manufacturers/manufacturer.schema.ts\n            \n            variable\n            ObjectId\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/modules/steroids/manufacturers/manufacturers.controller.ts\n            \n            controller\n            ManufacturersController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/modules/steroids/manufacturers/manufacturers.service.ts\n            \n            injectable\n            ManufacturersService\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/modules/steroids/steroids/dto/create-steroid.dto.ts\n            \n            class\n            CreateSteroidDto\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/modules/steroids/steroids/dto/steroid.dto.ts\n            \n            class\n            SteroidCommentsCountDto\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/modules/steroids/steroids/dto/steroid.dto.ts\n            \n            class\n            SteroidDto\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/modules/steroids/steroids/dto/steroid.dto.ts\n            \n            class\n            SteroidQueryDto\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/modules/steroids/steroids/dto/steroid.dto.ts\n            \n            class\n            UpdateSteroidDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/modules/steroids/steroids/query-aggregations/index.ts\n            \n            variable\n            commentsAggregation\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/modules/steroids/steroids/steroid.schema.ts\n            \n            class\n            Steroid\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/modules/steroids/steroids/steroid.schema.ts\n            \n            variable\n            ObjectId\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/modules/steroids/steroids/steroid.schema.ts\n            \n            variable\n            SteroidSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/modules/steroids/steroids/steroids.controller.ts\n            \n            controller\n            SteroidsController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/modules/steroids/steroids/steroids.service.ts\n            \n            injectable\n            SteroidsService\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/modules/users/dto/create-user.dto.ts\n            \n            class\n            CreateUserDto\n            \n                0 %\n                (0/13)\n            \n        \n        \n            \n                \n                src/modules/users/dto/user.dto.ts\n            \n            class\n            UpdateUserDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/modules/users/dto/user.dto.ts\n            \n            class\n            UserDto\n            \n                0 %\n                (0/15)\n            \n        \n        \n            \n                \n                src/modules/users/dto/user.dto.ts\n            \n            class\n            UserQueryDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/modules/users/user.schema.ts\n            \n            class\n            User\n            \n                0 %\n                (0/12)\n            \n        \n        \n            \n                \n                src/modules/users/user.schema.ts\n            \n            variable\n            UserSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/modules/users/users.controller.ts\n            \n            controller\n            UsersController\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/modules/users/users.service.ts\n            \n            injectable\n            UsersService\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/shared/services/generator.service.ts\n            \n            injectable\n            GeneratorService\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/shared/services/validator.service.ts\n            \n            injectable\n            ValidatorService\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/shared/shared.module.ts\n            \n            variable\n            providers\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @nestjs/common : ^10.0.0\n        \n            @nestjs/config : ^3.1.1\n        \n            @nestjs/core : ^10.0.0\n        \n            @nestjs/cqrs : ^10.2.6\n        \n            @nestjs/jwt : ^10.2.0\n        \n            @nestjs/mongoose : ^10.0.2\n        \n            @nestjs/passport : ^10.0.2\n        \n            @nestjs/platform-express : ^10.0.0\n        \n            @nestjs/swagger : ^7.1.16\n        \n            bcrypt : ^5.1.1\n        \n            class-transformer : ^0.5.1\n        \n            class-validator : ^0.14.0\n        \n            mongoose : ^8.0.3\n        \n            passport : ^0.6.0\n        \n            passport-jwt : ^4.0.1\n        \n            passport-local : ^1.0.0\n        \n            pg : ^8.11.3\n        \n            reflect-metadata : ^0.1.13\n        \n            rxjs : ^7.8.1\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            CategoryType   (src/.../category.types.ts)\n                        \n                        \n                            CommentTypes   (src/.../comment.schema.ts)\n                        \n                        \n                            RoleType   (src/.../user.types.ts)\n                        \n                        \n                            TokenType   (src/.../app.constants.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/modules/categories/category.types.ts\n    \n        \n            \n                \n                    \n                        \n                        CategoryType\n                    \n                \n                        \n                            \n                                 SOURCE\n                            \n                        \n                        \n                            \n                                Value : source\n                            \n                        \n                        \n                            \n                                 STEROID\n                            \n                        \n                        \n                            \n                                Value : steroid\n                            \n                        \n            \n        \n\n    src/modules/comments/comment.schema.ts\n    \n        \n            \n                \n                    \n                        \n                        CommentTypes\n                    \n                \n                        \n                            \n                                 COMMENTARY\n                            \n                        \n                        \n                            \n                                Value : commentary\n                            \n                        \n                        \n                            \n                                 REVIEW\n                            \n                        \n                        \n                            \n                                Value : review\n                            \n                        \n            \n        \n\n    src/modules/users/types/user.types.ts\n    \n        \n            \n                \n                    \n                        \n                        RoleType\n                    \n                \n                        \n                            \n                                 SYSTEM\n                            \n                        \n                        \n                            \n                                Value : system\n                            \n                        \n                        \n                            \n                                 USER\n                            \n                        \n                        \n                            \n                                Value : user\n                            \n                        \n                        \n                            \n                                 ADMIN\n                            \n                        \n                        \n                            \n                                Value : admin\n                            \n                        \n                        \n                            \n                                 SUPER_ADMIN\n                            \n                        \n                        \n                            \n                                Value : super_admin\n                            \n                        \n            \n        \n\n    src/app.constants.ts\n    \n        \n            \n                \n                    \n                        \n                        TokenType\n                    \n                \n                        \n                            \n                                 ACCESS_TOKEN\n                            \n                        \n                        \n                            \n                                Value : ACCESS_TOKEN\n                            \n                        \n                        \n                            \n                                 REFRESH_TOKEN\n                            \n                        \n                        \n                            \n                                Value : REFRESH_TOKEN\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n\n  \n\n\n  A progressive Node.js framework for building efficient and scalable server-side applications.\n    \n\n\n\n\n\n\n\n\n  \n    \n  \n\n  \n\nDescription\nNest framework TypeScript starter repository.\nInstallation\nExample :$ npm installRunning the app\nExample :# development\n$ npm run start\n\n# watch mode\n$ npm run start:dev\n\n# production mode\n$ npm run start:prodTest\nExample :# unit tests\n$ npm run test\n\n# e2e tests\n$ npm run test:e2e\n\n# test coverage\n$ npm run test:covSupport\nNest is an MIT-licensed open source project. It can grow thanks to the sponsors and support by the amazing backers. If you'd like to join them, please read more here.\nStay in touch\n\nAuthor - Kamil Myśliwiec\nWebsite - https://nestjs.com\nTwitter - @nestframework\n\nLicense\nNest is MIT licensed.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        _SteroidsModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ArticlesModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AuthenticationModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        CategoriesModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        CommentsModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        CommonNamesModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ManufacturersModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ReviewsModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        SharedModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        SourcesModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        SteroidsModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        UsersModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster__SteroidsModule\n\n\n\ncluster__SteroidsModule_imports\n\n\n\ncluster__SteroidsModule_exports\n\n\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_ArticlesModule\n\n\n\ncluster_ArticlesModule_providers\n\n\n\ncluster_AuthenticationModule\n\n\n\ncluster_AuthenticationModule_exports\n\n\n\ncluster_AuthenticationModule_providers\n\n\n\ncluster_CategoriesModule\n\n\n\ncluster_CategoriesModule_providers\n\n\n\ncluster_CommentsModule\n\n\n\ncluster_CommentsModule_exports\n\n\n\ncluster_CommentsModule_providers\n\n\n\ncluster_CommonNamesModule\n\n\n\ncluster_CommonNamesModule_providers\n\n\n\ncluster_ManufacturersModule\n\n\n\ncluster_ManufacturersModule_providers\n\n\n\ncluster_ReviewsModule\n\n\n\ncluster_ReviewsModule_providers\n\n\n\ncluster_SharedModule\n\n\n\ncluster_SharedModule_exports\n\n\n\ncluster_SharedModule_providers\n\n\n\ncluster_SourcesModule\n\n\n\ncluster_SourcesModule_providers\n\n\n\ncluster_SteroidsModule\n\n\n\ncluster_SteroidsModule_providers\n\n\n\ncluster_UsersModule\n\n\n\ncluster_UsersModule_exports\n\n\n\ncluster_UsersModule_providers\n\n\n\n\nCommonNamesModule\n\nCommonNamesModule\n\n\n\n_SteroidsModule\n\n_SteroidsModule\n\n_SteroidsModule -->\n\nCommonNamesModule->_SteroidsModule\n\n\n\n\n\nManufacturersModule\n\nManufacturersModule\n\n_SteroidsModule -->\n\nManufacturersModule->_SteroidsModule\n\n\n\n\n\nSteroidsModule\n\nSteroidsModule\n\n_SteroidsModule -->\n\nSteroidsModule->_SteroidsModule\n\n\n\n\n\nCommonNamesModule \n\nCommonNamesModule \n\nCommonNamesModule  -->\n\n_SteroidsModule->CommonNamesModule \n\n\n\n\n\nManufacturersModule \n\nManufacturersModule \n\nManufacturersModule  -->\n\n_SteroidsModule->ManufacturersModule \n\n\n\n\n\nSteroidsModule \n\nSteroidsModule \n\nSteroidsModule  -->\n\n_SteroidsModule->SteroidsModule \n\n\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\n_SteroidsModule->AppModule\n\n\n\n\n\nArticlesModule\n\nArticlesModule\n\nAppModule -->\n\nArticlesModule->AppModule\n\n\n\n\n\nAuthenticationModule\n\nAuthenticationModule\n\nAppModule -->\n\nAuthenticationModule->AppModule\n\n\n\n\n\nAuthenticationService \n\nAuthenticationService \n\nAuthenticationService  -->\n\nAuthenticationModule->AuthenticationService \n\n\n\n\n\nCategoriesModule\n\nCategoriesModule\n\nAppModule -->\n\nCategoriesModule->AppModule\n\n\n\n\n\nCommentsModule\n\nCommentsModule\n\nSteroidsModule -->\n\nCommentsModule->SteroidsModule\n\n\n\nAppModule -->\n\nCommentsModule->AppModule\n\n\n\n\n\nCommentsService \n\nCommentsService \n\nCommentsService  -->\n\nCommentsModule->CommentsService \n\n\n\n\n\nReviewsModule\n\nReviewsModule\n\nAppModule -->\n\nReviewsModule->AppModule\n\n\n\n\n\nSourcesModule\n\nSourcesModule\n\nAppModule -->\n\nSourcesModule->AppModule\n\n\n\n\n\nUsersModule\n\nUsersModule\n\nAuthenticationModule -->\n\nUsersModule->AuthenticationModule\n\n\n\nAppModule -->\n\nUsersModule->AppModule\n\n\n\n\n\nUsersService \n\nUsersService \n\nUsersService  -->\n\nUsersModule->UsersService \n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\nArticlesService\n\nArticlesService\n\nArticlesModule -->\n\nArticlesService->ArticlesModule\n\n\n\n\n\nAuthenticationService\n\nAuthenticationService\n\nAuthenticationModule -->\n\nAuthenticationService->AuthenticationModule\n\n\n\n\n\nJwtStrategy\n\nJwtStrategy\n\nAuthenticationModule -->\n\nJwtStrategy->AuthenticationModule\n\n\n\n\n\nCategoriesService\n\nCategoriesService\n\nCategoriesModule -->\n\nCategoriesService->CategoriesModule\n\n\n\n\n\nCommentsService\n\nCommentsService\n\nCommentsModule -->\n\nCommentsService->CommentsModule\n\n\n\n\n\nCommonNamesService\n\nCommonNamesService\n\nCommonNamesModule -->\n\nCommonNamesService->CommonNamesModule\n\n\n\n\n\nManufacturersService\n\nManufacturersService\n\nManufacturersModule -->\n\nManufacturersService->ManufacturersModule\n\n\n\n\n\nReviewsService\n\nReviewsService\n\nReviewsModule -->\n\nReviewsService->ReviewsModule\n\n\n\n\n\nGeneratorService \n\nGeneratorService \n\n\n\nValidatorService \n\nValidatorService \n\n\n\nSharedModule\n\nSharedModule\n\nGeneratorService  -->\n\nSharedModule->GeneratorService \n\n\n\nValidatorService  -->\n\nSharedModule->ValidatorService \n\n\n\n\n\nGeneratorService\n\nGeneratorService\n\nSharedModule -->\n\nGeneratorService->SharedModule\n\n\n\n\n\nValidatorService\n\nValidatorService\n\nSharedModule -->\n\nValidatorService->SharedModule\n\n\n\n\n\nSourcesService\n\nSourcesService\n\nSourcesModule -->\n\nSourcesService->SourcesModule\n\n\n\n\n\nSteroidsService\n\nSteroidsService\n\nSteroidsModule -->\n\nSteroidsService->SteroidsModule\n\n\n\n\n\nUsersService\n\nUsersService\n\nUsersModule -->\n\nUsersService->UsersModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        13 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    11 Controllers\n                \n            \n        \n        \n            \n                \n                    \n                    15 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    54 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    5 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.1\n        \n            Description : \n        \n            License : UNLICENSED\n        \n            Author : \n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            ArticleDocument   (src/.../article.schema.ts)\n                        \n                        \n                            CategoryDocument   (src/.../category.schema.ts)\n                        \n                        \n                            CommentDocument   (src/.../comment.schema.ts)\n                        \n                        \n                            CommonNameDocument   (src/.../common-name.schema.ts)\n                        \n                        \n                            Constructor   (src/.../types.ts)\n                        \n                        \n                            Constructor   (src/.../types.ts)\n                        \n                        \n                            DbConfig   (src/.../config.type.ts)\n                        \n                        \n                            EnvConfiguration   (src/.../config.type.ts)\n                        \n                        \n                            IBooleanFieldOptions   (src/.../field.decorators.ts)\n                        \n                        \n                            IClassFieldOptions   (src/.../field.decorators.ts)\n                        \n                        \n                            IEnumFieldOptions   (src/.../field.decorators.ts)\n                        \n                        \n                            JwtConfig   (src/.../config.type.ts)\n                        \n                        \n                            KeyOfType   (src/.../types.ts)\n                        \n                        \n                            KeyOfType   (src/.../types.ts)\n                        \n                        \n                            ManufacturerDocument   (src/.../manufacturer.schema.ts)\n                        \n                        \n                            ReviewDocument   (src/.../review.schema.ts)\n                        \n                        \n                            SourceDocument   (src/.../source.schema.ts)\n                        \n                        \n                            SteroidDocument   (src/.../steroid.schema.ts)\n                        \n                        \n                            UserDocument   (src/.../user.schema.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/modules/articles/article.schema.ts\n    \n    \n        \n            \n                \n                    \n                    ArticleDocument\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    src/modules/categories/category.schema.ts\n    \n    \n        \n            \n                \n                    \n                    CategoryDocument\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    src/modules/comments/comment.schema.ts\n    \n    \n        \n            \n                \n                    \n                    CommentDocument\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    src/modules/steroids/common-names/common-name.schema.ts\n    \n    \n        \n            \n                \n                    \n                    CommonNameDocument\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    src/types.ts\n    \n    \n        \n            \n                \n                    \n                    Constructor\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    KeyOfType\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    src/@common/global-types/types.ts\n    \n    \n        \n            \n                \n                    \n                    Constructor\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    KeyOfType\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    src/@common/env-configuration/config.type.ts\n    \n    \n        \n            \n                \n                    \n                    DbConfig\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    EnvConfiguration\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    JwtConfig\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    src/@common/decorators/field.decorators.ts\n    \n    \n        \n            \n                \n                    \n                    IBooleanFieldOptions\n                \n            \n            \n                \n                            IFieldOptions\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    IClassFieldOptions\n                \n            \n            \n                \n                            IFieldOptions\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    IEnumFieldOptions\n                \n            \n            \n                \n                            IFieldOptions\n\n                \n            \n        \n    \n    src/modules/steroids/manufacturers/manufacturer.schema.ts\n    \n    \n        \n            \n                \n                    \n                    ManufacturerDocument\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    src/modules/reviews/review.schema.ts\n    \n    \n        \n            \n                \n                    \n                    ReviewDocument\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    src/modules/sources/source.schema.ts\n    \n    \n        \n            \n                \n                    \n                    SourceDocument\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    src/modules/steroids/steroids/steroid.schema.ts\n    \n    \n        \n            \n                \n                    \n                    SteroidDocument\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    src/modules/users/user.schema.ts\n    \n    \n        \n            \n                \n                    \n                    UserDocument\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            ArticleSchema   (src/.../article.schema.ts)\n                        \n                        \n                            CategorySchema   (src/.../category.schema.ts)\n                        \n                        \n                            commentsAggregation   (src/.../index.ts)\n                        \n                        \n                            CommentSchema   (src/.../comment.schema.ts)\n                        \n                        \n                            CommonNameSchema   (src/.../common-name.schema.ts)\n                        \n                        \n                            ManufacturerSchema   (src/.../manufacturer.schema.ts)\n                        \n                        \n                            ObjectId   (src/.../article.schema.ts)\n                        \n                        \n                            ObjectId   (src/.../comment.schema.ts)\n                        \n                        \n                            ObjectId   (src/.../review.schema.ts)\n                        \n                        \n                            ObjectId   (src/.../source.schema.ts)\n                        \n                        \n                            ObjectId   (src/.../common-name.schema.ts)\n                        \n                        \n                            ObjectId   (src/.../manufacturer.schema.ts)\n                        \n                        \n                            ObjectId   (src/.../steroid.schema.ts)\n                        \n                        \n                            providers   (src/.../shared.module.ts)\n                        \n                        \n                            ReviewSchema   (src/.../review.schema.ts)\n                        \n                        \n                            SourceSchema   (src/.../source.schema.ts)\n                        \n                        \n                            SteroidSchema   (src/.../steroid.schema.ts)\n                        \n                        \n                            UserSchema   (src/.../user.schema.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/modules/articles/article.schema.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        ArticleSchema\n                        \n                    \n                \n            \n                \n                    \n                        Default value : SchemaFactory.createForClass(Article)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ObjectId\n                        \n                    \n                \n            \n                \n                    \n                        Default value : mongoose.Schema.Types.ObjectId\n                    \n                \n\n\n        \n    \n\n    src/modules/categories/category.schema.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        CategorySchema\n                        \n                    \n                \n            \n                \n                    \n                        Default value : SchemaFactory.createForClass(Category)\n                    \n                \n\n\n        \n    \n\n    src/modules/steroids/steroids/query-aggregations/index.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        commentsAggregation\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : [\n  {\n    $lookup: {\n      from: 'comments',\n      localField: '_id',\n      foreignField: 'referenceId',\n      as: 'docs',\n    },\n  },\n  {\n    $lookup: {\n      from: 'manufacturers',\n      localField: 'manufacturerId',\n      foreignField: '_id',\n      as: 'manufacturer',\n    },\n  },\n  {\n    $unwind: {\n      path: '$manufacturer',\n      preserveNullAndEmptyArrays: true,\n    },\n  },\n  {\n    $lookup: {\n      from: 'commonnames',\n      localField: 'commonNameId',\n      foreignField: '_id',\n      as: 'commonName',\n    },\n  },\n  {\n    $unwind: {\n      path: '$commonName',\n      preserveNullAndEmptyArrays: true,\n    },\n  },\n  {\n    $addFields: {\n      commentCount: { $size: '$docs' },\n    },\n  },\n  {\n    $group: {\n      _id: '$_id',\n      manufacturer: { $first: '$manufacturer' },\n      commonName: { $first: '$commonName' },\n      name: { $first: '$name' },\n      commentCount: { $first: '$commentCount' },\n    },\n  },\n  {\n    $project: {\n      _id: 1,\n      name: 1,\n      manufacturer: 1,\n      commonName: 1,\n      commentCount: 1,\n    },\n  },\n]\n                    \n                \n\n\n        \n    \n\n    src/modules/comments/comment.schema.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        CommentSchema\n                        \n                    \n                \n            \n                \n                    \n                        Default value : SchemaFactory.createForClass(Comment)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ObjectId\n                        \n                    \n                \n            \n                \n                    \n                        Default value : mongoose.Schema.Types.ObjectId\n                    \n                \n\n\n        \n    \n\n    src/modules/steroids/common-names/common-name.schema.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        CommonNameSchema\n                        \n                    \n                \n            \n                \n                    \n                        Default value : SchemaFactory.createForClass(CommonName)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ObjectId\n                        \n                    \n                \n            \n                \n                    \n                        Default value : mongoose.Schema.Types.ObjectId\n                    \n                \n\n\n        \n    \n\n    src/modules/steroids/manufacturers/manufacturer.schema.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        ManufacturerSchema\n                        \n                    \n                \n            \n                \n                    \n                        Default value : SchemaFactory.createForClass(Manufacturer)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ObjectId\n                        \n                    \n                \n            \n                \n                    \n                        Default value : mongoose.Schema.Types.ObjectId\n                    \n                \n\n\n        \n    \n\n    src/modules/reviews/review.schema.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        ObjectId\n                        \n                    \n                \n            \n                \n                    \n                        Default value : mongoose.Schema.Types.ObjectId\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ReviewSchema\n                        \n                    \n                \n            \n                \n                    \n                        Default value : SchemaFactory.createForClass(Review)\n                    \n                \n\n\n        \n    \n\n    src/modules/sources/source.schema.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        ObjectId\n                        \n                    \n                \n            \n                \n                    \n                        Default value : mongoose.Schema.Types.ObjectId\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        SourceSchema\n                        \n                    \n                \n            \n                \n                    \n                        Default value : SchemaFactory.createForClass(Source)\n                    \n                \n\n\n        \n    \n\n    src/modules/steroids/steroids/steroid.schema.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        ObjectId\n                        \n                    \n                \n            \n                \n                    \n                        Default value : mongoose.Schema.Types.ObjectId\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        SteroidSchema\n                        \n                    \n                \n            \n                \n                    \n                        Default value : SchemaFactory.createForClass(Steroid)\n                    \n                \n\n\n        \n    \n\n    src/shared/shared.module.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        providers\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Provider[]\n\n                    \n                \n                \n                    \n                        Default value : [ValidatorService, GeneratorService]\n                    \n                \n\n\n        \n    \n\n    src/modules/users/user.schema.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        UserSchema\n                        \n                    \n                \n            \n                \n                    \n                        Default value : SchemaFactory.createForClass(User)\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
